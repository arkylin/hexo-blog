<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>阿里云云函数配置百度自动推送</title>
      <link href="/2020/07/06/Alibaba-Cloud-Cloud-function-configuration-Baidu-automatic-push.html"/>
      <url>/2020/07/06/Alibaba-Cloud-Cloud-function-configuration-Baidu-automatic-push.html</url>
      
        <content type="html"><![CDATA[<p>实现浏览文章时自动推送链接到百度</p><p>如图<br><img src= "/img/loading.gif" data-src="/2020/07/06/Alibaba-Cloud-Cloud-function-configuration-Baidu-automatic-push/baidu_push.png" width="100%" alt="baidu_push"></p><figure class="highlight python"><figcaption><span>index.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/baidu-push', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baidu_push</span><span class="params">()</span>:</span></span><br><span class="line">    data = str(request.referrer)</span><br><span class="line">    <span class="comment">#data = 'https://www.xyz.blue/'</span></span><br><span class="line">    <span class="keyword">if</span> data != <span class="string">""</span>:</span><br><span class="line">      <span class="keyword">if</span> re.match(<span class="string">r'https://.*domain.name.*'</span>, data): <span class="comment">#防滥用域名推送限制</span></span><br><span class="line">        url = <span class="string">"http://data.zz.baidu.com/urls?site=https://domain.name&amp;token=your_token"</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">          <span class="string">'User-Agent'</span>: <span class="string">'curl/7.12.1'</span>,</span><br><span class="line">          <span class="string">'Host'</span>: <span class="string">'data.zz.baidu.com'</span>,</span><br><span class="line">          <span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>,</span><br><span class="line">          <span class="string">'Content-Length'</span>: <span class="string">'83'</span></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url, headers=headers, data=data).text</span><br><span class="line">        text = json.loads(res)</span><br><span class="line">        <span class="keyword">if</span> text[<span class="string">'success'</span>] == <span class="number">1</span>:</span><br><span class="line">          <span class="keyword">return</span> <span class="string">"&#123;'Res': 'Success'"</span> + <span class="string">","</span> + <span class="string">"'Remain':"</span> + <span class="string">" "</span> + str(text[<span class="string">'remain'</span>]) + <span class="string">"&#125;"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          <span class="keyword">return</span> <span class="string">"&#123;'Res': 'Fail'&#125;"</span></span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&#123;'Res': 'Not_Same_Site'&#125;"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"&#123;'Res': 'None'&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>函数配置</p><figure class="highlight yaml"><figcaption><span>template.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">ROSTemplateFormatVersion:</span> <span class="string">'2015-09-01'</span></span><br><span class="line"><span class="attr">Transform:</span> <span class="string">'Aliyun::Serverless-2018-04-03'</span></span><br><span class="line"><span class="attr">Resources:</span></span><br><span class="line">  <span class="attr">Blog:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">'Aliyun::Serverless::Service'</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">Role:</span> <span class="string">'acs:ram::ID:role/AliyunFCLogExecutionRole'</span></span><br><span class="line">      <span class="attr">LogConfig:</span></span><br><span class="line">        <span class="attr">Project:</span> <span class="string">aliyun-fc-ap-southeast-1-ID</span></span><br><span class="line">        <span class="attr">Logstore:</span> <span class="string">function-log</span></span><br><span class="line">      <span class="attr">InternetAccess:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">baidu-push:</span></span><br><span class="line">      <span class="attr">Type:</span> <span class="string">'Aliyun::Serverless::Function'</span></span><br><span class="line">      <span class="attr">Properties:</span></span><br><span class="line">        <span class="attr">Handler:</span> <span class="string">index.app</span></span><br><span class="line">        <span class="attr">Runtime:</span> <span class="string">python3</span></span><br><span class="line">        <span class="attr">Timeout:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">MemorySize:</span> <span class="number">128</span></span><br><span class="line">        <span class="attr">CodeUri:</span> <span class="string">Blog\baidu-push</span></span><br><span class="line">      <span class="attr">Events:</span></span><br><span class="line">        <span class="attr">baidu-push:</span></span><br><span class="line">          <span class="attr">Type:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">Properties:</span></span><br><span class="line">            <span class="attr">AuthType:</span> <span class="string">ANONYMOUS</span></span><br><span class="line">            <span class="attr">Methods:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">GET</span></span><br></pre></td></tr></table></figure><p>Hexo-Butterfly配置<br>在<code>layout-include-head.pug</code>的适当地方插入以实现自动加载</p><figure class="highlight js"><figcaption><span>Example</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> defer=<span class="string">""</span> src=<span class="string">"https://api.domain.name/baidu-push"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>最后发现其实可以直接用百度提供的额🤣🤣🤣 👀</p><figure class="highlight js"><figcaption><span>Example</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>)&#123;</span><br><span class="line">   bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">  bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 阿里云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云函数计算配合表格储存制作网页统计工具</title>
      <link href="/2020/07/05/alibaba-cloud-function-calculation-combined-with-table-storage-to-make-webpage-statistics-tool.html"/>
      <url>/2020/07/05/alibaba-cloud-function-calculation-combined-with-table-storage-to-make-webpage-statistics-tool.html</url>
      
        <content type="html"><![CDATA[<p>表格储存</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> tablestore <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">OTS_ID = <span class="string">"ID"</span></span><br><span class="line">OTS_SECRET = <span class="string">"SEC"</span></span><br><span class="line">OTS_ENDPOINT = <span class="string">"ENDPOINT"</span></span><br><span class="line">OTS_INSTANCE = <span class="string">"NAME"</span></span><br><span class="line"><span class="comment">#OTS_STS_TOKEN = os.getenv('OTS_TEST_STS_TOKEN')</span></span><br><span class="line"></span><br><span class="line">table_name = <span class="string">'visitor_count'</span></span><br><span class="line">primary_key = [(<span class="string">'urls'</span>, <span class="string">'/1/1/1'</span>)]</span><br><span class="line">columns_to_get = [<span class="string">'numbers'</span>]</span><br><span class="line"></span><br><span class="line">client = OTSClient(OTS_ENDPOINT, OTS_ID, OTS_SECRET, OTS_INSTANCE)</span><br><span class="line"></span><br><span class="line">consumed, return_row, next_token = client.get_row(table_name, primary_key, columns_to_get)</span><br><span class="line"><span class="keyword">if</span> return_row != <span class="literal">None</span>:</span><br><span class="line">    print(return_row.attribute_columns[<span class="number">0</span>][<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>函数计算</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from flask import Flask, request</span><br><span class="line"></span><br><span class="line">app &#x3D; Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;&#39;, methods&#x3D;[&#39;GET&#39;])</span><br><span class="line">def register():</span><br><span class="line">    #a &#x3D; request.args.get(&quot;1&quot;)</span><br><span class="line">    b &#x3D; str(request.referrer)</span><br><span class="line">    return b</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> 阿里云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python博客小助手</title>
      <link href="/2020/06/26/Python-Blog-Assistant.html"/>
      <url>/2020/06/26/Python-Blog-Assistant.html</url>
      
        <content type="html"><![CDATA[<p>做了一个python的博客助手可以方便写文章</p><p>1.比如可以省略<code>hexo new</code><br>2.可以直接在文件选择框中选择文件并一键添加到附件目录<br>3.程序采用Python Tkinter写成</p><img src= "/img/loading.gif" data-src="/2020/06/26/Python-Blog-Assistant/Blog-helper.png" width="100%" alt="Blog-helper"><figure class="highlight python"><figcaption><span>main.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> tkinter.filedialog <span class="keyword">as</span> tkf</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox <span class="keyword">as</span> msg</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> win32con</span><br><span class="line"><span class="keyword">import</span> win32clipboard</span><br><span class="line"><span class="comment">#from googletrans import Translator</span></span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> Popen, PIPE</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置</span></span><br><span class="line"><span class="comment">#box.geometry("500x300")</span></span><br><span class="line"></span><br><span class="line">static_path=<span class="string">'C:/Users/Kylin/Desktop/Blog/source/_posts/'</span></span><br><span class="line">os.chdir(static_path)</span><br><span class="line"></span><br><span class="line">run_path=<span class="string">'C:/Users/Kylin/Desktop/快速博客/'</span></span><br><span class="line"></span><br><span class="line">win = tk.Tk()</span><br><span class="line">win.title(<span class="string">"博客小助手"</span>)</span><br><span class="line">win.iconbitmap(run_path + <span class="string">"box.ico"</span>)</span><br><span class="line"><span class="comment">#translator = Translator()</span></span><br><span class="line">main_title = <span class="string">""</span></span><br><span class="line"><span class="comment">#title_tran = ""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hexo_new</span><span class="params">(get_title)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> main_title</span><br><span class="line">    <span class="comment">#global title_tran</span></span><br><span class="line">    <span class="keyword">if</span> get_title.replace(<span class="string">" "</span>, <span class="string">""</span>) != <span class="string">""</span>:</span><br><span class="line">        <span class="comment">#os_command_origin="powershell -command "</span></span><br><span class="line">        <span class="comment">#poweshell部分文字输入不进去好像有“”等</span></span><br><span class="line">        os_command_origin = <span class="string">"cmd /c "</span></span><br><span class="line">        hexo_new_posts = <span class="string">'hexo new '</span>+get_title</span><br><span class="line">        <span class="comment">#os.system(os_command_origin+hexo_new_posts)</span></span><br><span class="line">        <span class="comment">#print(os_command_origin+hexo_new_posts)</span></span><br><span class="line">        <span class="comment">#changed_title=os.popen(os_command_origin+hexo_new_posts).read().decode('utf-8')</span></span><br><span class="line">        changed_title = Popen(os_command_origin+hexo_new_posts, shell=<span class="literal">True</span>,stdout=PIPE, stderr=PIPE).stdout.read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        get_true_title_re = re.compile(<span class="string">r'INFO  Created: ~\\Desktop\\Blog\\source\\_posts\\(.*?)\.md'</span>)</span><br><span class="line">        true_title = get_true_title_re.findall(changed_title)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment">#赋值</span></span><br><span class="line">        main_title = true_title <span class="comment">#实际文件名</span></span><br><span class="line">        <span class="comment">#title_tran = translator.translate(get_title).text #翻译名</span></span><br><span class="line">        <span class="comment">#写入翻译，弃用tran插件</span></span><br><span class="line">        <span class="comment">#f_t = open(true_title+".md")</span></span><br><span class="line">        <span class="comment">#f_data = f_t.read().replace("translate_title:", "translate_title: " + title_tran)</span></span><br><span class="line">        <span class="comment">#f_t.close()</span></span><br><span class="line">        <span class="comment">#with open(true_title+".md", "w") as f_tt:</span></span><br><span class="line">        <span class="comment">#    f_tt.write(f_data)</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        msg.showinfo(<span class="string">"提示"</span>, <span class="string">"请输入标题！"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">s_files</span><span class="params">(def_filenames, def_string_filename)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> static_path</span><br><span class="line">    <span class="keyword">global</span> main_title</span><br><span class="line">    cho_msg = <span class="string">""</span></span><br><span class="line">    get_the_last = <span class="string">""</span></span><br><span class="line">    <span class="comment">#应该不会把md文档当作附件用的。。。</span></span><br><span class="line">    <span class="keyword">if</span> len(def_filenames) != <span class="number">0</span>:</span><br><span class="line">        g_main_t = def_filenames[<span class="number">0</span>].replace(static_path, <span class="string">""</span>)</span><br><span class="line">        get_main_title_re = re.compile(<span class="string">r'(.*?)\.md'</span>)</span><br><span class="line">        gmtre = get_main_title_re.findall(g_main_t)</span><br><span class="line">        <span class="keyword">if</span> len(gmtre) != <span class="number">0</span>:</span><br><span class="line">            main_title = gmtre[<span class="number">0</span>].replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line">            msg.showinfo(<span class="string">"提示"</span>, main_title)</span><br><span class="line">            get_the_last = g_main_t.replace(main_title, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> get_the_last != <span class="string">".md"</span>:</span><br><span class="line">            <span class="keyword">if</span> main_title != <span class="string">""</span>:</span><br><span class="line">                cho_msg = msg.askokcancel(<span class="string">'提示'</span>, <span class="string">'需要移动文件到文章附件目录吗？'</span>)</span><br><span class="line">                <span class="keyword">if</span> cho_msg:</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(def_filenames)):</span><br><span class="line">                        def_string_filename.append(def_filenames[i])</span><br><span class="line">                        <span class="comment">#get_data["text"]=str(def_string_filename)</span></span><br><span class="line">                        shutil.move(def_filenames[i], static_path + main_title)</span><br><span class="line">                        get_fujian_re = re.compile(<span class="string">r'[^\\\?\/\*\|&lt;&gt;:"]+?\..*'</span>)</span><br><span class="line">                        get_fj = get_fujian_re.findall(def_filenames[i])[<span class="number">0</span>]</span><br><span class="line">                        get_clip_re = re.compile(<span class="string">r'\..*'</span>)</span><br><span class="line">                        get_clip = get_clip_re.findall(get_fj)[<span class="number">0</span>]</span><br><span class="line">                        final_clip = <span class="string">"&lt;img src=\""</span>+get_fj+<span class="string">"\" width=\"100%\" alt=\""</span>+get_fj.replace(get_clip,<span class="string">""</span>)+<span class="string">"\"&gt;"</span></span><br><span class="line">                        win32clipboard.OpenClipboard()</span><br><span class="line">                        win32clipboard.EmptyClipboard()</span><br><span class="line">                        win32clipboard.SetClipboardData(win32con.CF_UNICODETEXT, final_clip)</span><br><span class="line">                        win32clipboard.CloseClipboard()</span><br><span class="line">                    <span class="comment">#if main_title == "" and msg.askokcancel('提示', '是否需要选择目录？'):</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment">#if main_title == "" and len(def_filenames) != 0:</span></span><br><span class="line">                <span class="comment">#    msg.showinfo("提示", "请新建文章！")</span></span><br><span class="line">                <span class="comment">#elif main_title != "" and len(def_filenames) == 0 or main_title == "" and len(def_filenames) == 0:</span></span><br><span class="line">                    <span class="comment">#msg.showinfo("提示", "请选择文件！")</span></span><br><span class="line">                <span class="comment">#elif main_title != "" and cho_msg != True:</span></span><br><span class="line">                <span class="comment">#    msg.showinfo("提示", "请同意！")</span></span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> get_the_last == <span class="string">".md"</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shell_files</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#global main_title</span></span><br><span class="line">    filenames = tkf.askopenfilenames()</span><br><span class="line">    string_filename = []</span><br><span class="line">    s_files(filenames, string_filename)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_o</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#win.destroy()</span></span><br><span class="line"></span><br><span class="line">    box = tk.Tk()</span><br><span class="line">    box.title(<span class="string">"新建文章"</span>)</span><br><span class="line">    box.iconbitmap(run_path + <span class="string">"box.ico"</span>)</span><br><span class="line"></span><br><span class="line">    title = tk.Entry(box, text=<span class="string">'文章标题'</span>, width=<span class="number">20</span>)</span><br><span class="line">    title.grid(row=<span class="number">1</span>, column=<span class="number">2</span>, padx=<span class="number">10</span>, pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    post_title = tk.Button(box, text=<span class="string">'生成文章'</span>, width=<span class="number">7</span>, height=<span class="number">1</span>, command=<span class="keyword">lambda</span>:hexo_new(title.get()))</span><br><span class="line">    post_title.grid(row=<span class="number">1</span>, column=<span class="number">6</span>, padx=<span class="number">10</span>, pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    select_files = tk.Button(box, text=<span class="string">'选择...'</span>, width=<span class="number">7</span>, height=<span class="number">1</span>, command=shell_files)</span><br><span class="line">    select_files.grid(row=<span class="number">2</span>, column=<span class="number">6</span>, padx=<span class="number">10</span>, pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    get_data = tk.Label(box)</span><br><span class="line">    get_data.grid(row=<span class="number">2</span>, column=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    box.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_t</span><span class="params">()</span>:</span></span><br><span class="line">    box = tk.Tk()</span><br><span class="line">    box.title(<span class="string">"修改图片"</span>)</span><br><span class="line">    box.iconbitmap(run_path + <span class="string">"box.ico"</span>)</span><br><span class="line"></span><br><span class="line">    select_filemd = tk.Button(box, text=<span class="string">"选择Markdown文件"</span>, command=shell_files)</span><br><span class="line">    select_filemd.grid(row=<span class="number">1</span>, column=<span class="number">1</span>, padx=<span class="number">15</span>, pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    select_filemd_fujian = tk.Button(box, text=<span class="string">"选择附件"</span>, command=shell_files)</span><br><span class="line">    select_filemd_fujian.grid(row=<span class="number">2</span>, column=<span class="number">1</span>, padx=<span class="number">10</span>, pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    box.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_main_d</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> main_title</span><br><span class="line">    msg.showinfo(<span class="string">"提示"</span>, main_title)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Main</span></span><br><span class="line"></span><br><span class="line">select_one = tk.Button(win, text=<span class="string">"新建文章"</span>, width=<span class="number">7</span>, height=<span class="number">1</span>, command=select_o)</span><br><span class="line">select_one.grid(row=<span class="number">1</span>, column=<span class="number">1</span>, padx=<span class="number">10</span>, pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">select_l = tk.Label(win, text=<span class="string">"OR"</span>, width=<span class="number">2</span>, height=<span class="number">1</span>)</span><br><span class="line">select_l.grid(row=<span class="number">1</span>, column=<span class="number">2</span>, padx=<span class="number">5</span>, pady=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">select_two = tk.Button(win, text=<span class="string">"修改图片"</span>, width=<span class="number">7</span>, height=<span class="number">1</span>, command=select_t)</span><br><span class="line">select_two.grid(row=<span class="number">1</span>, column=<span class="number">3</span>, padx=<span class="number">10</span>, pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">get_main_t = tk.Button(win, text=<span class="string">"Main Title"</span>, width=<span class="number">10</span>, height=<span class="number">1</span>, command=get_main_d)</span><br><span class="line">get_main_t.grid(row=<span class="number">2</span>, column=<span class="number">2</span>, padx=<span class="number">0</span>, pady=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#v = tk.IntVar()</span></span><br><span class="line"><span class="comment">#r1 = tk.Radiobutton(win, text="one", value=1, variable=v)</span></span><br><span class="line"><span class="comment">#r1.grid(row=3, column=2, padx=0, pady=10)</span></span><br><span class="line"><span class="comment">#if v.get() == 1:</span></span><br><span class="line"><span class="comment">#    clip()</span></span><br><span class="line"></span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> Python </category>
          
          <category> 程序 </category>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Python </tag>
            
            <tag> Blog </tag>
            
            <tag> 助手 </tag>
            
            <tag> 程序 </tag>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo阿里云OSS上传插件（支持校验MD5）</title>
      <link href="/2020/05/15/hexo-alibaba-cloud-oss-upload-plugin-supports-check-md5.html"/>
      <url>/2020/05/15/hexo-alibaba-cloud-oss-upload-plugin-supports-check-md5.html</url>
      
        <content type="html"><![CDATA[<p>这个 Github 里面有 NPM 里面也有，觉得原版hexo-deployer-ali-oss每次都要上传全部文件就自己做了一个，有时间更新</p><p>做这个之前属于完全没学习过nodejs，完全面向浏览器编程。该项目制作修改时间2020-05-15 19:45~2020-05-15 22:53</p><p>名称叫这个</p><p>hexo-deployer-aliyun-oss</p><p>预览</p><img src= "/img/loading.gif" data-src="/2020/05/15/hexo-alibaba-cloud-oss-upload-plugin-supports-check-md5/deployer1.png" width="100%" alt="Hexo阿里云OSS上传插件"><img src= "/img/loading.gif" data-src="/2020/05/15/hexo-alibaba-cloud-oss-upload-plugin-supports-check-md5/deployer.png" width="100%" alt="Hexo阿里云OSS上传插件"><h1 id="hexo-deployer-aliyun-oss部署器使用说明"><a href="#hexo-deployer-aliyun-oss部署器使用说明" class="headerlink" title="hexo-deployer-aliyun-oss部署器使用说明"></a>hexo-deployer-aliyun-oss部署器使用说明</h1><p>源项目：<a href="https://github.com/wertycn/hexo-deployer-ali-oss" target="_blank" rel="noopener">https://github.com/wertycn/hexo-deployer-ali-oss</a><br>该项目：<a href="https://github.com/arkylin/hexo-deployer-aliyun-oss" target="_blank" rel="noopener">https://github.com/arkylin/hexo-deployer-aliyun-oss</a></p><p>本项目在源项目的基础上增加了MD5校验工具，这样就可以避免上传重复文件耗时了，本地计算MD5的时间如果不是什么大文件，基本可以忽略不计，后续也可能会加入其他功能。例如：文件排除项、时间或文件大小比对等</p><p>在hexo项目下执行安装命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-aliyun-oss --save</span><br></pre></td></tr></table></figure><p>在hexo项目配置文件<code>_config.yml</code>中添加如下配置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: ali-oss</span><br><span class="line">  region: &lt;您的oss 区域代码&gt;</span><br><span class="line">  accessKeyId: &lt;您的oss  accessKeyId&gt;</span><br><span class="line">  accessKeySecret: &lt;您的oss accessKeySecret&gt;</span><br><span class="line">  bucket: &lt;您的bucket name&gt;</span><br></pre></td></tr></table></figure><p>就这么简单 然后执行部署命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>即可将项目部署到oss中 ，默认情况下，将文件上传到bucket的根目录下，如果需要部署到其他目录，请在deploy下添加remotePath选项进行指定</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">remotePath:&lt;您要部署的目录&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> Hexo </category>
          
          <category> 脚本 </category>
          
          <category> Aliyun </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Aliyun </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Arch-Linux记录</title>
      <link href="/2020/04/19/install-archlinux-record.html"/>
      <url>/2020/04/19/install-archlinux-record.html</url>
      
        <content type="html"><![CDATA[<h2 id="判定为UEFI设备"><a href="#判定为UEFI设备" class="headerlink" title="判定为UEFI设备"></a>判定为UEFI设备</h2><p><code>Surface Pro 2017</code></p><h2 id="连接WIFI"><a href="#连接WIFI" class="headerlink" title="连接WIFI"></a>连接WIFI</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wifi-menu</span><br></pre></td></tr></table></figure><h2 id="设置时间同步"><a href="#设置时间同步" class="headerlink" title="设置时间同步"></a>设置时间同步</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">timedatectl set-ntp true</span><br></pre></td></tr></table></figure><h2 id="设置分区"><a href="#设置分区" class="headerlink" title="设置分区"></a>设置分区</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk /dev/nvme0n1</span><br></pre></td></tr></table></figure><p>（以实际情况为主<code>fdisk -l</code>查看）</p><p>设置为gpt磁盘格式</p><p>EFI分区64M 建议：260–512 MiB（大概只能用到6M多一点不到7M）</p><p><code>/</code>主分区剩下全部</p><p><strong>格式化分区</strong><br>格式化EFI分区</p><p>fdisk: Create a partition with partition type EFI System.<br>见WIKI：<a href="https://wiki.archlinux.org/index.php/EFI_system_partition" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/EFI_system_partition</a></p><p>格式化主分区，这里使用ext4格式</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 /dev/nvme0n1p2</span><br></pre></td></tr></table></figure><p>SWAP最后再用文件设置，可见我的另一篇博客</p><p>其实分区还是文件效果其实差不多的</p><p>而且文件还可以随时更改大小不像分区那样麻烦还得扩大缩小，搞不好数据都没了还得重装</p><p><strong>挂载分区</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mount /dev/nvme0n1p2 /mnt</span><br></pre></td></tr></table></figure><p>（挂载目录随意）</p><p>你说为啥p2先挂载，因为你的目录得要在<code>/</code>里面</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mount /dev/nvme0n1p1 /mnt/efi</span><br></pre></td></tr></table></figure><p>(目录随意大小写随意，最后只需在Grub里面设置即可)</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>更改镜像源地址</strong></p><p>默认的源地址为源地址列表的第一个，而连接超时则再试第二个，所以会很慢，而且内置的中文源在好后面…</p><p>所以得换源<br>首先<del>安装</del><code>nano</code>，不过好像有内置你想用<code>vi</code>或者<code>vim</code>也可以不过我个人感觉<code>nano</code>好用</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><p>在第几行（[ ]标志的后面）那里加入</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Server = http://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = http://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = http://mirrors.aliyun.com/archlinuxcn/$arch</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Server = http://mirrors.zju.edu.cn/archlinux/$repo/os/$arch</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = http://mirrors.zju.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure><p><code>Ctrl+O</code>保存</p><p><code>Ctrl+X</code>退出</p><p><strong>安装基本包</strong></p><p>注：安装时出现报错</p><p><strong><em>1</em></strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">perl: warning: Setting locale failed.</span><br><span class="line"></span><br><span class="line">perl: warning: Please check that your locale settings:</span><br><span class="line">LANGUAGE &#x3D; (unset),</span><br><span class="line">LC_ALL &#x3D; (unset),</span><br><span class="line">LANG &#x3D; &quot;en_US.UTF-8&quot;</span><br><span class="line">    are supported and installed on your system.</span><br><span class="line">perl: warning: Falling back to the standard locale (&quot;C&quot;).</span><br><span class="line">locale: Cannot set LC_CTYPE to default locale: No such file or directory</span><br><span class="line">locale: Cannot set LC_MESSAGES to default locale: No such file or directory</span><br><span class="line">locale: Cannot set LC_ALL to default locale: No such file or directory</span><br></pre></td></tr></table></figure><p><strong><em>解决方案1：</em></strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /root/.bashrc</span><br></pre></td></tr></table></figure><p>在最底部添加上一句</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export LC_ALL=C</span><br></pre></td></tr></table></figure><p>或者直接运行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo "export LC_ALL=C" &gt;&gt; /root/.bashrc</span><br></pre></td></tr></table></figure><p>然后执行一下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /root/.bashrc</span><br></pre></td></tr></table></figure><p><strong><em>2</em></strong><br>When you install/update linux kernel you can see these missing firmware warnings. These drivers are not necessary to run your system, at some point they where excluded from kernel. If these errors disturb you then you can get them from user repositories. The wd719x is a driver for “Western Digital WD7193, WD7197 and WD7296 SCSI cards” and aic94xx is the driver for “Adaptec SAS 44300, 48300, 58300 Sequencer”.</p><p><strong><em>解决方案2：</em></strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Download the missing firmware using your favourite AUR package manager.</span><br><span class="line">yay -S aic94xx-firmware wd719x-firmware</span><br><span class="line"> </span><br><span class="line"># When you run kernel install again, you should not see the error any more.</span><br><span class="line">yay -</span><br><span class="line">S linux</span><br></pre></td></tr></table></figure><p>安装上面这些你添加Arch Linux中文源也可以直接用<code>pacman</code>安装<br><strong><em>3</em></strong></p><p><em>解决方案<strong>2</strong>中的yay安装问题</em></p><p>由于<code>yay</code>为第三方包管理器，所以在安装环境中并没有内置所以得自行安装</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;aur.archlinux.org&#x2F;yay.git</span><br><span class="line">cd yay</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p>由于<code>yay</code>不支持在<code>root</code>环境在运行，你还得新建一个账户不过这个好像得在<code>arch-chroot</code>之后进行（捂脸哭/(ㄒoㄒ)/~~）</p><p>说明文件（见下）两种都可以，但是yay就是不支持在<code>root</code>环境在运行，而且你用<code>pacstrap</code>也不行啊，我突然想到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">To install other packages or package groups, append the names to the pacstrap command above (space separated) or use pacman while chrooted into the new system. For comparison, packages available in the live system can be found in packages.x86_64.</span><br></pre></td></tr></table></figure><p><strong>安装</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacstrap -i /mnt base base-devel linux linux-firmware</span><br></pre></td></tr></table></figure><p>（<code>-i</code>给你有选择的权利，不过还是默认的好，如有特俗需求可以改）</p><h2 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h2><p><strong><code>Fstab</code>启动配置文件</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure><p><strong><code>Chroot</code></strong></p><p><strong>切换<code>root</code>环境目录</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><p><strong>设置时区</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -sf &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime</span><br></pre></td></tr></table></figure><p><strong>同步系统时钟到硬件</strong></p><p>这对某些程序来说很好</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><p><strong>更改镜像源地址</strong></p><p><em>见上</em></p><p><strong>配置语言</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/locale.gen</span><br></pre></td></tr></table></figure><p>在文件中找到zh_CN.UTF-8 UTF-8 zh_HK.UTF-8 UTF-8 zh_TW.UTF-8 UTF-8 en_US.UTF-8 UTF-8这四行，去掉行首的#号，保存并退出。</p><p>执行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/locale.conf</span><br></pre></td></tr></table></figure><p>加入</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure><p>如果用中文在某些tty界面会乱码（可以从deepin中学习一下这种配置）</p><p><strong>设置主机名</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/hostname</span><br></pre></td></tr></table></figure><p><strong>设置<code>hosts</code></strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/hosts</span><br></pre></td></tr></table></figure><p>如下</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1   localhost.localdomainlocalhost</span><br><span class="line">::1         localhost.localdomainlocalhost</span><br><span class="line">127.0.1.1   myhostname.localdomain myhostname</span><br></pre></td></tr></table></figure><p>If the system has a permanent IP address, it should be used instead of 127.0.1.1.</p><p><strong>Initramfs</strong></p><p>Creating a new initramfs is usually not required, because mkinitcpio was run on installation of the kernel package with pacstrap.</p><p>For LVM, system encryption or RAID, modify mkinitcpio.conf(5) and recreate the initramfs image:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkinitcpio -P</span><br></pre></td></tr></table></figure><p>好像在安装时会自动执行然后这里就应该会复现<code>pacstrap</code>的问题<em>3</em>,请解决</p><p><strong>设置<code>root</code>密码</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p><strong>安装你熟悉的常用软件</strong></p><p>KDE:<a href="https://wiki.archlinux.org/index.php/KDE" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/KDE</a></p><p>DDE:<a href="https://wiki.archlinux.org/index.php/Deepin_Desktop_Environment" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Deepin_Desktop_Environment</a></p><p>UEFI systems<br>Note:<br>It is recommended to read and understand the Unified Extensible Firmware Interface, Partitioning#GUID Partition Table and Arch boot process#Under UEFI pages.<br>When installing to use UEFI it is important to boot the installation media in UEFI mode, otherwise efibootmgr will not be able to add the GRUB UEFI boot entry. Installing to the fallback boot path will still work even in BIOS mode since it does not touch the NVRAM.<br>To boot from a disk using UEFI, an EFI system partition is required. Follow EFI system partition#Check for an existing partition to find out if you have one already, otherwise you need to create it.<br>Installation<br>Note:<br>UEFI firmwares are not implemented consistently across manufacturers. The procedure described below is intended to work on a wide range of UEFI systems but those experiencing problems despite applying this method are encouraged to share detailed information, and if possible the workarounds found, for their hardware-specific case. A GRUB/EFI examples article has been provided for such cases.<br>The section assumes you are installing GRUB for x86_64 systems. For IA32 (32-bit) UEFI systems (not to be confused with 32-bit CPUs), replace x86_64-efi with i386-efi where appropriate.<br>First, install the packages grub and efibootmgr: GRUB is the bootloader while efibootmgr is used by the GRUB installation script to write boot entries to NVRAM.</p><p>Then follow the below steps to install GRUB:</p><p>Mount the EFI system partition and in the remainder of this section, substitute esp with its mount point.<br>Choose a bootloader identifier, here named GRUB. A directory of that name will be created in esp/EFI/ to store the EFI binary and this is the name that will appear in the UEFI boot menu to identify the GRUB boot entry.<br>Execute the following command to install the GRUB EFI application grubx64.efi to esp/EFI/GRUB/ and install its modules to /boot/grub/x86_64-efi/.</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=GRUB</span><br></pre></td></tr></table></figure><p>After the above install completed the main GRUB directory is located at /boot/grub/. Note that grub-install also tries to create an entry in the firmware boot manager, named GRUB in the above example.</p><p>Remember to #Generate the main configuration file after finalizing the configuration.</p><p>Tip: If you use the option –removable then GRUB will be installed to esp/EFI/BOOT/BOOTX64.EFI (or esp/EFI/BOOT/BOOTIA32.EFI for the i386-efi target) and you will have the additional ability of being able to boot from the drive in case EFI variables are reset or you move the drive to another computer. Usually you can do this by selecting the drive itself similar to how you would using BIOS. If dual booting with Windows, be aware Windows usually places an EFI executable there, but its only purpose is to recreate the UEFI boot entry for Windows.<br>Note:<br>–efi-directory and –bootloader-id are specific to GRUB UEFI, –efi-directory replaces –root-directory which is deprecated.<br>You might note the absence of a device_path option (e.g.: /dev/sda) in the grub-install command. In fact any device_path provided will be ignored by the GRUB UEFI install script. Indeed, UEFI bootloaders do not use a MBR bootcode or partition boot sector at all.<br>Make sure to run the grub-install command from the system in which GRUB will be installed as the boot looader. That means if you are booting from the live installation environment, you need to be inside the chroot when running grub-install. If for some reason it is necessary to run grub-install from outside of the installed system, append the –boot-directory= option with the path to the mounted /boot directory, e.g –boot-directory=/mnt/boot.<br>See UEFI troubleshooting in case of problems. Additionally see GRUB/Tips and tricks#UEFI further reading.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Arch-Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人人通APP的惨痛经历</title>
      <link href="/2020/04/09/the-painful-experience-of-renrentong-app.html"/>
      <url>/2020/04/09/the-painful-experience-of-renrentong-app.html</url>
      
        <content type="html"><![CDATA[<p>当你看到这篇文章的时候我应该已经好多了<br>真的，我今天写完卷子后几分钟交卷然后就提示不让交了<br>好吧，虽然试卷应该按时交，但是我还是很烦<br>甚至作文都是手打的，然后提交了后提示时间过来，不让补交，我真的勺了哎<br>那个惨状是没录视频，不然。。。。。。<br>还不知道怎么办，好吧幸亏只是模拟考试，不过我的作文还是没了<br>当时看着这个一闪而过的红色惊叹号我都。。。<br><img src= "/img/loading.gif" data-src="/2020/04/09/the-painful-experience-of-renrentong-app/renrentong.png" width="100%" alt="人人通"><br>别说了别说了，痛苦<br>这好像是我第一次没交卷子👀😢<br>好吧，希望我以后还是按照时间早点交卷，别交迟了<br>欸，老师看在只有26个同学交了的份上又新建了一张答题卡<br>哈，希望是第一次也是最后一次，有些事还是早做完好，别拖！<br>一定要遵守时间</p>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
          <category> APP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人人通 </tag>
            
            <tag> APP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho迁移Hexo的Python脚本</title>
      <link href="/2020/04/09/typecho-migrates-hexo-python-script.html"/>
      <url>/2020/04/09/typecho-migrates-hexo-python-script.html</url>
      
        <content type="html"><![CDATA[<p>最近换博客Typecho感觉还是有点臃肿。。好吧 虽然相比WordPress好多了<br>所以就换了Hexo，而且在本地也支持方便迁移，哈<br>脚本如下，按照自己的修改</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> Popen, PIPE </span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">123</span>):</span><br><span class="line">    url=<span class="string">'https://your.domain/admin/write-post.php?cid='</span></span><br><span class="line">    url=url+str(i)</span><br><span class="line"></span><br><span class="line">    cookies_text=<span class="string">r'你的cookies'</span></span><br><span class="line"></span><br><span class="line">    cookies = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> cookies_text.split(<span class="string">';'</span>):</span><br><span class="line">        key, value = line.split(<span class="string">'='</span>, <span class="number">1</span>)</span><br><span class="line">        cookies[key] = value</span><br><span class="line"></span><br><span class="line">    resp = requests.get(url,cookies=cookies)</span><br><span class="line">    <span class="comment">#&lt;Response [404]&gt;</span></span><br><span class="line">    <span class="comment">#&lt;Response [200]&gt;</span></span><br><span class="line">    <span class="keyword">if</span> str(resp) == <span class="string">'&lt;Response [200]&gt;'</span>:</span><br><span class="line">        get_text=resp.text</span><br><span class="line">        html=BeautifulSoup(get_text,<span class="string">'html.parser'</span>)</span><br><span class="line">        get_title=html.find(<span class="string">'input'</span>,id=<span class="string">'title'</span>)[<span class="string">"value"</span>]</span><br><span class="line">        get_title_translate=html.find(<span class="string">'input'</span>,id=<span class="string">'slug'</span>)[<span class="string">"value"</span>]</span><br><span class="line">        get_data=html.find(<span class="string">'textarea'</span>,id=<span class="string">'text'</span>).text</span><br><span class="line">        get_time=html.find(<span class="string">'input'</span>,id=<span class="string">'date'</span>)[<span class="string">"value"</span>]+<span class="string">":00"</span>        </span><br><span class="line"></span><br><span class="line">        check_1=html.find(<span class="string">'input'</span>,id=<span class="string">'category-1'</span>).attrs<span class="comment">#常用配置</span></span><br><span class="line">        check_2=html.find(<span class="string">'input'</span>,id=<span class="string">'category-2'</span>).attrs<span class="comment">#技巧</span></span><br><span class="line">        check_3=html.find(<span class="string">'input'</span>,id=<span class="string">'category-3'</span>).attrs<span class="comment">#生活随笔</span></span><br><span class="line">        check_4=html.find(<span class="string">'input'</span>,id=<span class="string">'category-4'</span>).attrs<span class="comment">#学习</span></span><br><span class="line">        check_10=html.find(<span class="string">'input'</span>,id=<span class="string">'category-10'</span>).attrs<span class="comment">#Android Develop</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#替换标题中文件夹禁用字符</span></span><br><span class="line">        get_title_replace=get_title</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">"\\"</span>,<span class="string">""</span>)</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">"/"</span>,<span class="string">""</span>)</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">":"</span>,<span class="string">"："</span>)</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">"*"</span>,<span class="string">""</span>)</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">"?"</span>,<span class="string">"？"</span>)</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">"\""</span>,<span class="string">""</span>)</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">"&lt;"</span>,<span class="string">"《"</span>)</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">"&gt;"</span>,<span class="string">"》"</span>)</span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">"|"</span>,<span class="string">""</span>)</span><br><span class="line">        <span class="comment">#Hexo规则</span></span><br><span class="line">        get_title_replace=get_title_replace.replace(<span class="string">" "</span>,<span class="string">"-"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"checked"</span> <span class="keyword">in</span> check_1:</span><br><span class="line">            check_1_status=check_1[<span class="string">"checked"</span>]</span><br><span class="line">            check_1_name=<span class="string">"常用配置"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            check_1_status=<span class="string">"false"</span></span><br><span class="line">            check_1_name=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"checked"</span> <span class="keyword">in</span> check_2:</span><br><span class="line">            check_2_status=check_2[<span class="string">"checked"</span>]</span><br><span class="line">            check_2_name=<span class="string">"技巧"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            check_2_status=<span class="string">"false"</span></span><br><span class="line">            check_2_name=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"checked"</span> <span class="keyword">in</span> check_3:</span><br><span class="line">            check_3_status=check_3[<span class="string">"checked"</span>]</span><br><span class="line">            check_3_name=<span class="string">"生活随笔"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            check_3_status=<span class="string">"false"</span></span><br><span class="line">            check_3_name=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"checked"</span> <span class="keyword">in</span> check_4:</span><br><span class="line">            check_4_status=check_4[<span class="string">"checked"</span>]</span><br><span class="line">            check_4_name=<span class="string">"学习"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            check_4_status=<span class="string">"false"</span></span><br><span class="line">            check_4_name=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"checked"</span> <span class="keyword">in</span> check_10:</span><br><span class="line">            check_10_status=check_10[<span class="string">"checked"</span>]</span><br><span class="line">            check_10_name=<span class="string">"Android Develop"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            check_10_status=<span class="string">"false"</span></span><br><span class="line">            check_10_name=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#写入hexo</span></span><br><span class="line">        os.chdir(<span class="string">'C:\/Users\/Kylin\/Desktop\/Blog\/source\/_posts'</span>)</span><br><span class="line">        <span class="comment">#os_command_origin="powershell -command "</span></span><br><span class="line">        <span class="comment">#poweshell部分文字输入不进去好像有“”等</span></span><br><span class="line">        os_command_origin=<span class="string">"cmd /c "</span></span><br><span class="line">        hexo_new_posts=<span class="string">'hexo new '</span>+get_title_replace</span><br><span class="line">        <span class="comment">#os.system(os_command_origin+hexo_new_posts)</span></span><br><span class="line">        <span class="comment">#print(os_command_origin+hexo_new_posts)</span></span><br><span class="line">        <span class="comment">#changed_title=os.popen(os_command_origin+hexo_new_posts).read().decode('utf-8')</span></span><br><span class="line">        changed_title=Popen(os_command_origin+hexo_new_posts, shell=<span class="literal">True</span>,stdout=PIPE, stderr=PIPE).stdout.read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        get_true_title_re=re.compile(<span class="string">r'INFO  Created: ~\\Desktop\\Blog\\source\\_posts\\(.*?)\.md'</span>)</span><br><span class="line">        true_title=get_true_title_re.findall(changed_title)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">#图片标签</span></span><br><span class="line">        <span class="comment">#re_img=u'!\[(.*?)\]\[([1-9]*)\]'</span></span><br><span class="line">        <span class="comment">#re_img_get_name=re.search(re_img,get_data)[1]</span></span><br><span class="line">        <span class="comment">#re_img_get_num=re.search(re_img,get_data)[2]</span></span><br><span class="line">        <span class="comment">#img_src_stick='&lt;img src=\"'+'\" width="100%" alt=\"'+'\"&gt;'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#查找写入配置</span></span><br><span class="line">        <span class="comment">#搜寻图片</span></span><br><span class="line">        get_img_name_re=re.compile(<span class="string">r'!\[(.*?)\]\[[0-9]*\]'</span>)</span><br><span class="line">        get_img_url_name_re=re.compile(<span class="string">r'\[[0-9]*\]: https://www\.xyz\.blue/usr/uploads/[0-9]*/[0-9]*/([0-9]*?\.png)'</span>)</span><br><span class="line">        get_img_name_lists=get_img_name_re.findall(get_data)</span><br><span class="line">        get_img_url_lists=get_img_url_name_re.findall(get_data)</span><br><span class="line">        <span class="comment">#替换图片文本</span></span><br><span class="line">        get_data=re.sub(get_img_url_name_re,<span class="string">""</span>,get_data)</span><br><span class="line">        <span class="keyword">if</span> len(get_img_name_lists) == len(get_img_url_lists) <span class="keyword">and</span> get_img_name_lists != []:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(get_img_name_lists)):</span><br><span class="line">                img_src=<span class="string">"&lt;img src=\""</span>+get_img_name_lists[j]+<span class="string">"\" width=\"100%\" alt=\""</span>+get_img_name_lists[j].replace(<span class="string">".png"</span>,<span class="string">""</span>)+<span class="string">"\"&gt;"</span></span><br><span class="line">                get_data=get_data.replace(<span class="string">"!["</span>+get_img_name_lists[j]+<span class="string">"]"</span>+<span class="string">"["</span>+str(j+<span class="number">1</span>)+<span class="string">"]"</span>,img_src)<span class="comment">#![poste.png][1]</span></span><br><span class="line">                <span class="comment">#移动图片</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(true_title+<span class="string">'/'</span>+get_img_name_lists[j]):</span><br><span class="line">                    shutil.move(<span class="string">'uploads/'</span>+get_img_url_lists[j],true_title+<span class="string">'/'</span>+get_img_name_lists[j])</span><br><span class="line">                    print(true_title+<span class="string">'/'</span>+get_img_name_lists[j])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"图片匹配出错"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> get_img_name_lists != []:</span><br><span class="line">            get_top_img=<span class="string">'/'</span>+get_time[<span class="number">0</span>:<span class="number">4</span>]+<span class="string">'/'</span>+get_time[<span class="number">5</span>:<span class="number">7</span>]+<span class="string">'/'</span>+get_time[<span class="number">8</span>:<span class="number">10</span>]+<span class="string">'/'</span>+get_title_translate+<span class="string">'/'</span>+get_img_name_lists[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            get_top_img=<span class="string">''</span></span><br><span class="line">            print(<span class="string">"cid:"</span>,i,<span class="string">"未找到图片"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#合成写入内容</span></span><br><span class="line">        ha_temp_main=[<span class="string">'---\n'</span>]</span><br><span class="line">        ha_temp_main.append(<span class="string">'title: '</span>+get_title+<span class="string">'\n'</span>)<span class="comment">#'title: 使用docker搭建邮件服务器\n'</span></span><br><span class="line">        <span class="comment">#设置分类</span></span><br><span class="line">        ha_temp_main.append(<span class="string">'categories:\n'</span>)</span><br><span class="line">        <span class="keyword">if</span> check_1_status == <span class="string">"true"</span>:</span><br><span class="line">            ha_temp_main.append(<span class="string">'  - ['</span>+check_1_name+<span class="string">']\n'</span>)<span class="comment">#'  - []\n'</span></span><br><span class="line">        <span class="keyword">if</span> check_2_status == <span class="string">"true"</span>:</span><br><span class="line">            ha_temp_main.append(<span class="string">'  - ['</span>+check_2_name+<span class="string">']\n'</span>)<span class="comment">#'  - []\n'</span></span><br><span class="line">        <span class="keyword">if</span> check_3_status == <span class="string">"true"</span>:</span><br><span class="line">            ha_temp_main.append(<span class="string">'  - ['</span>+check_3_name+<span class="string">']\n'</span>)<span class="comment">#'  - []\n'</span></span><br><span class="line">        <span class="keyword">if</span> check_4_status == <span class="string">"true"</span>:</span><br><span class="line">            ha_temp_main.append(<span class="string">'  - ['</span>+check_4_name+<span class="string">']\n'</span>)<span class="comment">#'  - []\n'</span></span><br><span class="line">        <span class="keyword">if</span> check_10_status == <span class="string">"true"</span>:</span><br><span class="line">            ha_temp_main.append(<span class="string">'  - ['</span>+check_10_name+<span class="string">']\n'</span>)<span class="comment">#'  - []\n'</span></span><br><span class="line">        <span class="comment">#标签不知道怎么加，而且之前也没设置过标签，以后自己慢慢加吧</span></span><br><span class="line">        ha_temp_main.append(<span class="string">'tags:\n'</span>)</span><br><span class="line">        ha_temp_main.append(<span class="string">''</span>)<span class="comment">#'  - []\n'</span></span><br><span class="line">        ha_temp_main.append(<span class="string">'date: '</span>+get_time+<span class="string">'\n'</span>)<span class="comment">#date: 2020-04-02 23:12:09\n</span></span><br><span class="line">        ha_temp_main.append(<span class="string">'translate_title: '</span>+get_title_translate+<span class="string">'\n'</span>)<span class="comment">#'translate_title:\n'</span></span><br><span class="line">        <span class="comment">#翻译不同会让头图404</span></span><br><span class="line">        <span class="comment">#ha_temp_main.append('translate_title:\n')#'translate_title:\n'</span></span><br><span class="line">        ha_temp_t_1=[<span class="string">'keywords:\n'</span>, <span class="string">'description:\n'</span>,]</span><br><span class="line">        ha_temp_main.append(ha_temp_t_1)</span><br><span class="line">        ha_temp_main.append(<span class="string">'top_img: '</span>+get_top_img+<span class="string">'\n'</span>)<span class="comment">#'top_img:\n'</span></span><br><span class="line">        ha_temp_t_2=[<span class="string">'toc:\n'</span>, <span class="string">'toc_number:\n'</span>, <span class="string">'copyright:\n'</span>, <span class="string">'mathjax:\n'</span>, <span class="string">'katex:\n'</span>, <span class="string">'hide:\n'</span>, <span class="string">'top:\n'</span>, <span class="string">'---\n'</span>]</span><br><span class="line">        ha_temp_main.append(<span class="string">'comments:\n'</span>)</span><br><span class="line">        ha_temp_main.append(<span class="string">'cover: '</span>+get_top_img+<span class="string">'\n'</span>)<span class="comment">#'cover:\n'</span></span><br><span class="line">        ha_temp_main.append(ha_temp_t_2)</span><br><span class="line">        ha_temp_main.append(get_data)</span><br><span class="line">        <span class="comment">#写入文件</span></span><br><span class="line">        f=open(true_title+<span class="string">".md"</span>,<span class="string">"w"</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">for</span> lines <span class="keyword">in</span> ha_temp_main:</span><br><span class="line">            f.writelines(lines)</span><br><span class="line">        f.close()</span><br><span class="line">        print(<span class="string">'转移cid:'</span>,i,<span class="string">"成功"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'cid:'</span>,i,<span class="string">"找不到"</span>)</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-src="/2020/04/09/typecho-migrates-hexo-python-script/main.png" width="100%" alt="main.py">代码文件：<a href="main.py" download="main.py">点击下载</a>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 脚本 </category>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> Typecho </tag>
            
            <tag> 技巧 </tag>
            
            <tag> 解决方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态页面跳转代码留存</title>
      <link href="/2020/04/04/static-page-jump-code-retention.html"/>
      <url>/2020/04/04/static-page-jump-code-retention.html</url>
      
        <content type="html"><![CDATA[<h2 id="静态页面跳转代码一"><a href="#静态页面跳转代码一" class="headerlink" title="静态页面跳转代码一"></a>静态页面跳转代码一</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"noindex, nofollow"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>页面加载中,请稍候...<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">background-image</span>: <span class="built_in">url</span>(//www.xyz.blue/arv/img/index.jpg);<span class="attribute">background-repeat</span>:no-repeat;<span class="attribute">font-family</span>:Arial,<span class="string">'微软雅黑'</span>,<span class="string">'宋体'</span>,sans-serif&#125;<span class="selector-class">.main</span>&#123;<span class="attribute">position</span>:absolute;<span class="attribute">left</span>:<span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">200px</span>);<span class="attribute">top</span>:<span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">13em</span>)&#125;<span class="selector-class">.alert-box</span>&#123;<span class="attribute">display</span>:none;<span class="attribute">position</span>:relative;<span class="attribute">margin</span>:auto;<span class="attribute">padding</span>:<span class="number">18px</span> <span class="number">85px</span> <span class="number">22px</span>;<span class="attribute">border-radius</span>:<span class="number">10px</span> <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span>;<span class="attribute">background-color</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">75</span>);<span class="attribute">box-shadow</span>:<span class="number">5px</span> <span class="number">9px</span> <span class="number">17px</span> <span class="built_in">rgba</span>(<span class="number">102</span>,<span class="number">102</span>,<span class="number">102</span>,.<span class="number">75</span>);<span class="attribute">width</span>:<span class="number">286px</span>;<span class="attribute">color</span>:<span class="number">#FFF</span>;<span class="attribute">text-align</span>:center&#125;<span class="selector-class">.alert-box</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>&#125;<span class="selector-class">.alert-head</span>&#123;<span class="attribute">color</span>:<span class="number">#242424</span>;<span class="attribute">font-size</span>:<span class="number">28px</span>&#125;<span class="selector-class">.alert-btn</span>&#123;<span class="attribute">display</span>:block;<span class="attribute">border-radius</span>:<span class="number">10px</span>;<span class="attribute">background-color</span>:<span class="number">#4AB0F7</span>;<span class="attribute">height</span>:<span class="number">55px</span>;<span class="attribute">line-height</span>:<span class="number">55px</span>;<span class="attribute">width</span>:<span class="number">286px</span>;<span class="attribute">color</span>:<span class="number">#FFF</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;<span class="attribute">text-decoration</span>:none;<span class="attribute">letter-spacing</span>:<span class="number">2px</span>&#125;<span class="selector-class">.alert-btn</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">background-color</span>:<span class="number">#6BC2FF</span>&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"js-alert-box"</span> <span class="attr">class</span>=<span class="string">"alert-box"</span> <span class="attr">style</span>=<span class="string">"display:block"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"js-alert-head"</span> <span class="attr">class</span>=<span class="string">"alert-head"</span>&gt;</span></span><br><span class="line">点击前往 Kylin's Blog<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"js-alert-btn"</span> <span class="attr">class</span>=<span class="string">"alert-btn"</span> <span class="attr">href</span>=<span class="string">"https://www.xyz.blue/"</span>&gt;</span>立即前往<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图<br><img src= "/img/loading.gif" data-src="/2020/04/04/static-page-jump-code-retention/jump_1.png" width="100%" alt="效果图：一"></p><p>代码文件：<a href="jump_1.html" download="跳转页一">点击下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 跳转 </tag>
            
            <tag> 静态页面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何对Hexo进行标题翻译</title>
      <link href="/2020/03/22/how-to-translate-hexo-titles.html"/>
      <url>/2020/03/22/how-to-translate-hexo-titles.html</url>
      
        <content type="html"><![CDATA[<p>下载hexo-translate-title即可</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-translate-title-unchange --save</span><br></pre></td></tr></table></figure><p>如何对部分文章不进行翻译或者进行手动翻译，以后再出教程</p>]]></content>
      
      
      <categories>
          
          <category> 常用配置 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 常用配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo分类解释</title>
      <link href="/2020/03/22/hexo-classification-explanation.html"/>
      <url>/2020/03/22/hexo-classification-explanation.html</url>
      
        <content type="html"><![CDATA[<p>在Hexo的_config.yaml里面设置category_map和tags_map<br>下面这个是例子</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  学习: Study,</span><br><span class="line">  生活随笔: Life,</span><br><span class="line">  常用配置: common,</span><br><span class="line">  技巧: skill,</span><br><span class="line">  代码: Code,</span><br><span class="line">  安卓开发: android_develop</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-src="/2020/03/22/hexo-classification-explanation/all-maps.png" width="100%" alt="配置文件">]]></content>
      
      
      <categories>
          
          <category> 常用配置 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 常用配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓文本操作菜单相关说明</title>
      <link href="/2020/03/12/description-of-android-text-operation-menu.html"/>
      <url>/2020/03/12/description-of-android-text-operation-menu.html</url>
      
        <content type="html"><![CDATA[<img src= "/img/loading.gif" data-src="/2020/03/12/description-of-android-text-operation-menu/1.png" width="100%" alt="1"><p>关于具体情况我已经发帖到了 <a href="https://club.huawei.com/thread-22993896-1-1.html" target="_blank" rel="noopener">花粉俱乐部</a></p><p>经过一些简单的探究，第一个搜索可能是安卓或者华为系统自身内嵌的一个搜索，之后第二个搜索为华为自带浏览器的搜索，当存在华为浏览器的时候第一个搜索默认指向为华为浏览器。</p><p>现象还原：在设置-应用里面把华为浏览器给禁用了，那么第二个搜索就会消失，第一个搜索回提示你要你选择默认打开的软件。</p><p>实现原理：见简书社区 <a href="https://jianshu.com/p/89970f098012" target="_blank" rel="noopener">简名的文章</a></p><p>后续也有可能按照他的方式去做一些软件，学习一下这个，希望这个刚挖的坑不要太大(ฅ´ω`ฅ)</p><p>然后了解到还有一些其他鬼软件为了流量或者为了方便快捷等因素会把其跳转插入到这个长按的位置上，比如网易新闻，新浪新闻，并且没有关闭的位置</p><p>建议华为系统能够增加长按文本操作菜单的管理设置</p>]]></content>
      
      
      <categories>
          
          <category> Android Develop </category>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 花粉俱乐部 </tag>
            
            <tag> 华为 </tag>
            
            <tag> 花粉 </tag>
            
            <tag> 菜单 </tag>
            
            <tag> 文本操作菜单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，世界！</title>
      <link href="/2020/03/12/hello-world.html"/>
      <url>/2020/03/12/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>你好，世界！</p><img src= "/img/loading.gif" data-src="/2020/03/12/hello-world/Hello-World.png" width="100%" alt="你好，世界！"><p>开始从Typecho转到Hexo，文章会逐步迁移过来的</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于生成手写字体</title>
      <link href="/2020/03/10/about-generating-handwriting-fonts.html"/>
      <url>/2020/03/10/about-generating-handwriting-fonts.html</url>
      
        <content type="html"><![CDATA[<p>网站</p><p><a href="http://flexifont.com/" target="_blank" rel="noopener">http://flexifont.com/</a></p><p>其配置为</p><p>Apache/2.2.21 (Win64) PHP/5.3.8 mod_wsgi/3.5 Python/2.7.6</p><p>做个记录</p><p>手写字体生成</p><p>基于GAN的字体风格迁移</p><p>风格迁移在图像应用</p><p><a href="https://github.com/LDOUBLEV/style_transfer-perceptual_loss" target="_blank" rel="noopener">https://github.com/LDOUBLEV/style_transfer-perceptual_loss</a></p><p>基于风格迁移的手写字体生成</p><p><a href="http://www.dataguru.cn/article-11281-1.html" target="_blank" rel="noopener">http://www.dataguru.cn/article-11281-1.html</a></p><p>论文：<a href="http://www.doc88.com/p-8058499366708.html" target="_blank" rel="noopener">http://www.doc88.com/p-8058499366708.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字体 </tag>
            
            <tag> 手写字体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于暂停AS-Kotlin学习的说明</title>
      <link href="/2020/03/10/notes-on-suspending-as-kotlin-learning.html"/>
      <url>/2020/03/10/notes-on-suspending-as-kotlin-learning.html</url>
      
        <content type="html"><![CDATA[<p>暂停AS-Kotlin学习，改为Java</p><p>理由：网络上面好多程序都是由Java写成的，方便初学者参考，而Kotlin属于新的东西。给予的参考类型太少，对初学者不友好，所以转为学习Java，如果等熟练的话再转学Kotlin吧</p>]]></content>
      
      
      <categories>
          
          <category> Android Develop </category>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android目标一：XML输出 （正在进行中）</title>
      <link href="/2020/03/08/android-target-1-xm-x-l-output.html"/>
      <url>/2020/03/08/android-target-1-xm-x-l-output.html</url>
      
        <content type="html"><![CDATA[<p>创建空白Hello World项目</p><p>进入<code>res/layout/activity_main.xml</code></p><p>可以看见</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line"></span><br><span class="line">    xmlns:app&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res-auto&quot;</span><br><span class="line"></span><br><span class="line">    xmlns:tools&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;tools&quot;</span><br><span class="line"></span><br><span class="line">    android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line"></span><br><span class="line">    android:layout_height&#x3D;&quot;match_parent&quot;</span><br><span class="line"></span><br><span class="line">    tools:context&#x3D;&quot;.MainActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line"></span><br><span class="line">        android:layout_width&#x3D;&quot;wrap_content&quot;</span><br><span class="line"></span><br><span class="line">        android:layout_height&#x3D;&quot;wrap_content&quot;</span><br><span class="line"></span><br><span class="line">        android:text&#x3D;&quot;Hello World!&quot;</span><br><span class="line"></span><br><span class="line">        app:layout_constraintBottom_toBottomOf&#x3D;&quot;parent&quot;</span><br><span class="line"></span><br><span class="line">        app:layout_constraintLeft_toLeftOf&#x3D;&quot;parent&quot;</span><br><span class="line"></span><br><span class="line">        app:layout_constraintRight_toRightOf&#x3D;&quot;parent&quot;</span><br><span class="line"></span><br><span class="line">        app:layout_constraintTop_toTopOf&#x3D;&quot;parent&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><p>其中不谈上面一部分</p><p>看下面一部分</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android:layout_width&#x3D;&quot;wrap_content&quot;</span><br></pre></td></tr></table></figure><p>这个为文字宽度随文本长度变化二变化</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android:layout_height&#x3D;&quot;wrap_content&quot;</span><br></pre></td></tr></table></figure><p>同理这个也是</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android:text&#x3D;&quot;Hello World!&quot;</span><br></pre></td></tr></table></figure><p>这个就是显示内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">app:layout_constraintBottom_toBottomOf&#x3D;&quot;parent&quot;</span><br><span class="line"></span><br><span class="line">app:layout_constraintLeft_toLeftOf&#x3D;&quot;parent&quot;</span><br><span class="line"></span><br><span class="line">app:layout_constraintRight_toRightOf&#x3D;&quot;parent&quot;</span><br><span class="line"></span><br><span class="line">app:layout_constraintTop_toTopOf&#x3D;&quot;parent&quot;</span><br></pre></td></tr></table></figure><p>这个就应该是定位显示内容，都为继承父配置</p><p>当你试着去重新手动设置一个的时候会显示</p><img src= "/img/loading.gif" data-src="/2020/03/08/android-target-1-xm-x-l-output/Wrong.png" width="100%" alt="Wrong"><p>会提示</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints  The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as layout_editor_absoluteX). These attributes are not applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections.  Issue id: MissingConstraints</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">此视图不受约束。它只有设计时位置，因此它将在运行时跳转到（0,0），除非您添加约束，否则布局编辑器允许您将小部件放置在画布上的任何位置，并且它使用设计时属性（例如布局编辑器绝对值）记录当前位置。这些属性在运行时不应用，因此如果您在设备上推送布局，小部件可能会出现在与编辑器中显示的位置不同的位置。要解决此问题，请通过从边缘连接拖动来确保小部件同时具有水平和垂直约束。问题id:缺少约束</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hardcoded string &quot;test&quot;, should use @string resource  Hardcoding text attributes directly in layout files is bad for several reasons:  * When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)  * The application cannot be translated to other languages by just adding new translations for existing string resources.  There are quickfixes to automatically extract this hardcoded string into a resource lookup.  Issue id: HardcodedText</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">硬编码字符串“test”，应该在布局文件中直接使用@string资源硬编码文本属性有几个原因：*创建配置变体（例如横向或纵向）时，必须重复实际文本（并在进行更改时保持最新）*仅添加新的现有字符串资源的翻译。有一些快速修复程序可以自动将此硬编码字符串提取到资源查找中。问题id:HardcodedText</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-src="/2020/03/08/android-target-1-xm-x-l-output/fix_it.png" width="100%" alt="fix_it"><p>对于下面这个我们点fix it</p><img src= "/img/loading.gif" data-src="/2020/03/08/android-target-1-xm-x-l-output/Fix_it_1.png" width="100%" alt="Fix_it_1"><p>则会添加值到<code>res/value/strings</code>里面去</p><img src= "/img/loading.gif" data-src="/2020/03/08/android-target-1-xm-x-l-output/res_strings.png" width="100%" alt="res_strings"><img src= "/img/loading.gif" data-src="/2020/03/08/android-target-1-xm-x-l-output/strings_main.png" width="100%" alt="strings_main"><p>添加约束</p><p>本来不会的不过幸好AS提供图形界面可以直接拖动，真的对初学者很友好</p><p>那么我们就知道了它的道理</p><p>以左上角为原点，往右下增到</p><img src= "/img/loading.gif" data-src="/2020/03/08/android-target-1-xm-x-l-output/lefttop_00.png" width="100%" alt="lefttop_00"><img src= "/img/loading.gif" data-src="/2020/03/08/android-target-1-xm-x-l-output/rightbottom_11.png" width="100%" alt="rightbottom_11"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">app:layout_constraintHorizontal_bias&#x3D;&quot;1.0&quot;</span><br></pre></td></tr></table></figure><p>这个可以说为X轴当到最右边就为1.0</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">app:layout_constraintVertical_bias&#x3D;&quot;0.0&quot;</span><br></pre></td></tr></table></figure><p>这个就可以说是Y轴到最下边就是1.0</p><img src= "/img/loading.gif" data-src="/2020/03/08/android-target-1-xm-x-l-output/Vertical.png" width="100%" alt="Vertical"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android:layout_marginStart&#x3D;&quot;84dp&quot;</span><br></pre></td></tr></table></figure><p>MarginStart指的是控件距离开头View部分的间距大小</p><p>我们在写layout布局的时候，我们会发现有这样几个比较相似的属性：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MarginStart   MarginLeft</span><br><span class="line"></span><br><span class="line">MarginEnd    MarginRight</span><br></pre></td></tr></table></figure><p>这些属性的区别是什么?  根据api注释，我们得知MarginStart指的是控件距离开头View部分的间距大小，MarginLeft则指的是控件距离左边View部分的间距大小，MarginEnd和MarginRight同理。</p><p>一般情况下，View开始部分就是左边，但是有的语言目前为止还是按照从右往左的顺序来书写的，例如阿拉伯语，在Android  4.2系统之后，Google在Android中引入了RTL布局，更好了支持了由右到左文字布局的显示，为了更好的兼容RTL布局，google推荐使用MarginStart和MarginEnd来替代MarginLeft和MarginRight，这样应用可以在正常的屏幕和由右到左显示文字的屏幕上都保持一致的用户体验。</p>]]></content>
      
      
      <categories>
          
          <category> Android Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>准备开始新篇章 -- Android Studio</title>
      <link href="/2020/03/08/ready-to-start-a-new-chapter-android-studio.html"/>
      <url>/2020/03/08/ready-to-start-a-new-chapter-android-studio.html</url>
      
        <content type="html"><![CDATA[<p>准备开始新篇章 – Android Studio</p><p>近日想做做安卓App</p><p>语言选择<del>Kotlin</del>Java</p><p>目标</p><p> <strong><em>总. 制作一个能够调用“今日诗词”API的软件，数据示例如下</em></strong></p><img src= "/img/loading.gif" data-src="/2020/03/08/ready-to-start-a-new-chapter-android-studio/JINRISHICI_API.png" width="100%" alt="JINRISHICI_API"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;&quot;status&quot;:&quot;success&quot;,&quot;data&quot;:&#123;&quot;id&quot;:&quot;5b8b9572e116fb3714e6fba1&quot;,&quot;content&quot;:&quot;谁家玉笛暗飞声，散入春风满洛城。&quot;,&quot;popularity&quot;:607000,&quot;origin&quot;:&#123;&quot;title&quot;:&quot;春夜洛城闻笛 &#x2F; 春夜洛阳城闻笛&quot;,&quot;dynasty&quot;:&quot;唐代&quot;,&quot;author&quot;:&quot;李白&quot;,&quot;content&quot;:[&quot;谁家玉笛暗飞声，散入春风满洛城。&quot;,&quot;此夜曲中闻折柳，何人不起故园情。&quot;],&quot;translate&quot;:[&quot;是谁家精美的笛子暗暗地发出悠扬的笛声。随着春风飘扬，传遍洛阳全城。&quot;,&quot;就在今夜的曲中，听到故乡的《折杨柳》，哪个人的思乡之情不会因此而油然而生呢？&quot;]&#125;,&quot;matchTags&quot;:[&quot;春&quot;,&quot;风&quot;],&quot;recommendedReason&quot;:&quot;&quot;,&quot;cacheAt&quot;:&quot;2020-03-08T00:28:56.013294&quot;&#125;,&quot;token&quot;:&quot;Uz2&#x2F;+bh5Dt+n7INLEr&#x2F;iYzpclPxy7Rzg&quot;,&quot;ipAddress&quot;:&quot;27.18.69.224&quot;,&quot;warning&quot;:null&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p> <strong><em>1. 完成Hello World项目，研究输出TextView</em></strong></p><p>开始时间：2020/03/07</p><p>结束时间：？？？</p><p>[post cid=”107” /]</p><p> <strong><em>2. 列表项目</em></strong></p><p> <strong><em>3. 列表项目</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> Android Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL修改默认用户</title>
      <link href="/2020/03/06/wsl-modify-default-user.html"/>
      <url>/2020/03/06/wsl-modify-default-user.html</url>
      
        <content type="html"><![CDATA[<p>以管理员的方式打开PowerShell或者cmd</p><p>①：如果你是在Microsoft Store里面安装的，则切换到<code>C:\Users\Kylin\AppData\Local\Microsoft\WindowsApps</code>目录下</p><p>②：如果你是在GitHub等其他位置通过源码安装的请切换到你的源码目录</p><p>注：一下fedoraremix可以更换为ubuntu、debian等已安装的发行版</p><p>输入下面这个查看帮助</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;fedoraremix --help</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-src="/2020/03/06/wsl-modify-default-user/WSL_help.png" width="100%" alt="WSL_help"><p>由于用Microsoft Store安装的已经预先设置好了环境变量所以可以不加<code>./</code></p><p>输入下面这个修改默认用户</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fedoraremix config  --default-user root</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-src="/2020/03/06/wsl-modify-default-user/WSL_Change_User.png" width="100%" alt="WSL_Change_User">]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> 默认用户 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你喝的水-水的三相点</title>
      <link href="/2020/03/05/the-water-you-drink-the-threephase-point-of-water.html"/>
      <url>/2020/03/05/the-water-you-drink-the-threephase-point-of-water.html</url>
      
        <content type="html"><![CDATA[<p>如图<br><img src= "/img/loading.gif" data-src="/2020/03/05/the-water-you-drink-the-threephase-point-of-water/the-water-you-drink.png" width="100%" alt="the-water-you-drink"></p>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活随笔 </tag>
            
            <tag> 水 </tag>
            
            <tag> H2O </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何一键删除微博</title>
      <link href="/2020/03/01/how-to-delete-weibo-with-one-click.html"/>
      <url>/2020/03/01/how-to-delete-weibo-with-one-click.html</url>
      
        <content type="html"><![CDATA[<p>浏览器代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x3D;&#x3D;UserScript&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; @name Weibored.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; @namespace http:&#x2F;&#x2F;vito.sdf.org</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; @version 0.1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; @description 删除所有微博</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; @author Vito Van</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; @match http:&#x2F;&#x2F;weibo.com&#x2F;p&#x2F;*</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; @grant none</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#x3D;&#x3D;&#x2F;UserScript&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">&#39;use strict&#39;;</span><br><span class="line"></span><br><span class="line">var s &#x3D; document.createElement(&quot;script&quot;);</span><br><span class="line"></span><br><span class="line">s.setAttribute(&quot;src&quot;,&quot;https:&#x2F;&#x2F;lib.sinaapp.com&#x2F;js&#x2F;jquery&#x2F;2.0.3&#x2F;jquery-2.0.3.min.js &quot;);</span><br><span class="line"></span><br><span class="line">s.onload &#x3D; function()&#123;</span><br><span class="line"></span><br><span class="line">for(var i&#x3D;0;i&lt;100;i++)&#123;</span><br><span class="line"></span><br><span class="line">setTimeout(function()&#123;</span><br><span class="line"></span><br><span class="line">$(&#39;a[action-type&#x3D;&quot;fl_menu&quot;]&#39;)[0].click();</span><br><span class="line"></span><br><span class="line">$(&#39;a[title&#x3D;&quot;删除此条微博&quot;]&#39;)[0].click();</span><br><span class="line"></span><br><span class="line">$(&#39;a[action-type&#x3D;&quot;ok&quot;]&#39;)[0].click();</span><br><span class="line"></span><br><span class="line">&#125;,1000*i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.head.appendChild(s);</span><br></pre></td></tr></table></figure><p>网络收集，侵权联系删除</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微博 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Server 2012 将我的电脑放到桌面</title>
      <link href="/2020/02/26/windows-server-2012-putting-my-computer-on-the-desktop.html"/>
      <url>/2020/02/26/windows-server-2012-putting-my-computer-on-the-desktop.html</url>
      
        <content type="html"><![CDATA[<p>WIN+R</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">rundll32.exe shell32.dll,Control_RunDLL desk.cpl,,0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Windows Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Caddy_V2 Websocket说明</title>
      <link href="/2020/02/17/caddy-v2-websocket-description.html"/>
      <url>/2020/02/17/caddy-v2-websocket-description.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://caddy.community/t/unrecognized-subdirective-websocket/6493" target="_blank" rel="noopener">https://caddy.community/t/unrecognized-subdirective-websocket/6493</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">header_up Connection &#123;http.request.header.Connection&#125;</span><br><span class="line"></span><br><span class="line">header_up Upgrade &#123;http.request.header.Upgrade&#125;</span><br></pre></td></tr></table></figure><p>In v2, you do not need to do anything to enable websockets.</p><p>Websockets should work with v2’s reverse proxy by default.</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Caddy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派更改IP地址为静态地址 --测试版</title>
      <link href="/2020/02/13/raspberry-pie-change-ip-address-to-static-address.html"/>
      <url>/2020/02/13/raspberry-pie-change-ip-address-to-static-address.html</url>
      
        <content type="html"><![CDATA[<p>树莓派更改IP地址为静态地址，方便端口映射</p><p>首先，官方镜像的树莓派是基于Debian系统，所以命令会宇它有类似</p><img src= "/img/loading.gif" data-src="/2020/02/13/raspberry-pie-change-ip-address-to-static-address/pi_debian.png" width="100%" alt="pi_debian"><p>那么更改IP也是一样</p><p><strong><em>注意：未经过测试可能出现连不上网的情况</em></strong></p><p>恢复方法</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo rm -rf &#x2F;etc&#x2F;dhcpcd.conf</span><br><span class="line"></span><br><span class="line">sudo cp &#x2F;etc&#x2F;dhcpcd.conf.bak &#x2F;etc&#x2F;dhcpcd.conf</span><br><span class="line"></span><br><span class="line">systemctl restart dhcpcd</span><br></pre></td></tr></table></figure><hr><p>一：明确网络连接方式，及网卡名称</p><p>如通过网线连接会出现eth0网卡或ens0网卡</p><p>WiFi连接则出现wlan0等</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>如果提示<code>command not found</code>则需要安装<code>net-tools</code>包</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt-get install net-tools -y</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-src="/2020/02/13/raspberry-pie-change-ip-address-to-static-address/pi_ifconfig.png" width="100%" alt="pi_ifconfig"><p>第一个为Docker虚拟网卡不管</p><p>第二个则为真实网卡</p><p>二：修改配置</p><p>复制来备份配置文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo cp &#x2F;etc&#x2F;dhcpcd.conf &#x2F;etc&#x2F;dhcpcd.conf.bak</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo nano &#x2F;etc&#x2F;dhcpcd.conf</span><br></pre></td></tr></table></figure><p>如果提示<code>command not found</code>则需要安装<code>nano</code>包,当然你也可以用vi或者vim</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt-get install nano -y</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-src="/2020/02/13/raspberry-pie-change-ip-address-to-static-address/pi_dhcpcd.png" width="100%" alt="pi_dhcpcd"><p>再末尾添加配置</p><p>请勿直接复制</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">interface eth0</span><br><span class="line"></span><br><span class="line">static ip_address&#x3D;192.168.0.10&#x2F;24</span><br><span class="line"></span><br><span class="line">static routers&#x3D;192.168.0.1</span><br><span class="line"></span><br><span class="line">static domain_name_servers&#x3D;192.168.0.1 8.8.8.8</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">interface wlan0</span><br><span class="line"></span><br><span class="line">static ip_address&#x3D;192.168.0.10&#x2F;24</span><br><span class="line"></span><br><span class="line">static routers&#x3D;192.168.0.1</span><br><span class="line"></span><br><span class="line">static domain_name_servers&#x3D;192.168.0.1 8.8.8.8</span><br></pre></td></tr></table></figure><p>eth0或wlan0为你真实网卡的名称</p><p>ip_address就是静态IP , 后面要接/24 , 最好往后设一点</p><p>routers是网关</p><p>static domain_name_servers是DNS</p><p>Ctrl+o 回车保存 Ctrl+x退出编辑，当然你用vi或者vim也可以</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">systemctl restart dhcpcd</span><br></pre></td></tr></table></figure><p>重启dhcpcd网络</p><p>三：登录路由器查看IP地址</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> IP </tag>
            
            <tag> 静态地址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP编译选项--with和--enable的区别</title>
      <link href="/2020/02/02/the-difference-between-php-compile-options-with-and-enable.html"/>
      <url>/2020/02/02/the-difference-between-php-compile-options-with-and-enable.html</url>
      
        <content type="html"><![CDATA[<p>enable多代表不依赖外部库便可以直接编译</p><p>with大多需要依赖于第三方的lib</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&quot;/usr/share/cracklib/pw_dict.pwd: No such file or directory&quot;解决方法</title>
      <link href="/2020/02/01/usr-share-cracklib-pwdictpwd-no-such-file-or-directory-solution.html"/>
      <url>/2020/02/01/usr-share-cracklib-pwdictpwd-no-such-file-or-directory-solution.html</url>
      
        <content type="html"><![CDATA[<p>在Linux下修改用户密码</p><p>1.直接运行  passwd 用户名,输入新密码，再确认一遍，重启生效</p><p>2.如果出现以下错误：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;share&#x2F;cracklib&#x2F;pw_dict.pwd: No such file or directory</span><br></pre></td></tr></table></figure><p>原因是缺少cracklib库</p><p>解决办法：安装cracklib-dicts</p><p>Fedora </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">dnf -y install cracklib-dicts</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker内安装Mysql/Mariadb提示&quot;服务器和客户端上指示的 HTTPS 之间不匹配&quot;解决方案</title>
      <link href="/2020/01/30/when-installing-mysql-mariadb-in-docker-the-solution-of-mismatch-between-https-indicated-on-server-and-client-will-be-prompted.html"/>
      <url>/2020/01/30/when-installing-mysql-mariadb-in-docker-the-solution-of-mismatch-between-https-indicated-on-server-and-client-will-be-prompted.html</url>
      
        <content type="html"><![CDATA[<p>使用docker安装phpmyadmin，启动成功登录，出现提示：服务器和客户端上指示的 HTTPS 之间不匹配。这可能导致 phpMyAdmin 无法正常工作或存在安全风险。请修复您的服务器配置以正确指示 HTTPS。</p><img src= "/img/loading.gif" data-src="/2020/01/30/when-installing-mysql-mariadb-in-docker-the-solution-of-mismatch-between-https-indicated-on-server-and-client-will-be-prompted/phpmyadmin_ssl.png" width="100%" alt="phpmyadmin_ssl"><p>以前phpmyadmin是直接安装在nginx里的，没有这个问题。现在用caddy做为代理。外部访问使用https，内部用http。</p><p>解决方法是修改参数：</p><p>$cfg[‘PmaAbsoluteUri’] = ‘<a href="https://pma.xxx.com’" target="_blank" rel="noopener">https://pma.xxx.com’</a>;</p><p>在docker中启动，可以在启动时指定环境参数（该参数在官方文档里没有但是有效）：</p><p>-e PMA_ABSOLUTE_URI=<a href="https://pma.xxx.com" target="_blank" rel="noopener">https://pma.xxx.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云运维编排实用配置</title>
      <link href="/2020/01/28/alibaba-cloud-operation-and-maintenance-choreography-practical-configuration.html"/>
      <url>/2020/01/28/alibaba-cloud-operation-and-maintenance-choreography-practical-configuration.html</url>
      
        <content type="html"><![CDATA[<p>当你使用便宜的的竞价云服务器时，肯定会担心数据问题那么，一下就可以帮你解决问题。</p><p>具体为：定时任务-关机-创建镜像-恢复镜像-开机-邮件提醒</p><p>后续可能会更新</p><p>请关注我的Github：<a href="https://github.com/arkylin/Aliyun_OOS_Backup_ECS" target="_blank" rel="noopener">https://github.com/arkylin/Aliyun_OOS_Backup_ECS</a></p><p><strong>此文未经本人允许，禁止转载！</strong></p><p>框架如下</p><img src= "/img/loading.gif" data-src="/2020/01/28/alibaba-cloud-operation-and-maintenance-choreography-practical-configuration/Aliyun-OOS-view.png" width="100%" alt="Aliyun-OOS-view"><hr><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">FormatVersion: OOS-2019-06-01</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line"></span><br><span class="line">  en: Regularly create ECS images.</span><br><span class="line"></span><br><span class="line">  zh-cn: 定时创建ECS镜像。</span><br><span class="line"></span><br><span class="line">  name-en: Regularly-create-ECS-images</span><br><span class="line"></span><br><span class="line">  name-zh-cn: 定时创建ECS镜像</span><br><span class="line"></span><br><span class="line">Parameters:</span><br><span class="line"></span><br><span class="line">  targets:</span><br><span class="line"></span><br><span class="line">    Type: Json</span><br><span class="line"></span><br><span class="line">    AssociationProperty: Targets</span><br><span class="line"></span><br><span class="line">    AssociationPropertyMetadata:</span><br><span class="line"></span><br><span class="line">      ResourceType: &#39;ALIYUN::ECS::Instance&#39;</span><br><span class="line"></span><br><span class="line">  instanceId:</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: The ID of ECS instance.</span><br><span class="line"></span><br><span class="line">      zh-cn: ECS实例ID。</span><br><span class="line"></span><br><span class="line">    Type: String</span><br><span class="line"></span><br><span class="line">  Imagesbasic:</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: The ID of Imagees.</span><br><span class="line"></span><br><span class="line">      zh-cn: 基本镜像ID。</span><br><span class="line"></span><br><span class="line">    Type: String</span><br><span class="line"></span><br><span class="line">  cron:</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: &#39;The cron expression, refer them here: https:&#x2F;&#x2F;www.alibabacloud.com&#x2F;help&#x2F;zh&#x2F;faq-detail&#x2F;64769.htm. The minimum interval is one minute.&#39;</span><br><span class="line"></span><br><span class="line">      zh-cn: &#39;cron表达式，详情参考：https:&#x2F;&#x2F;www.alibabacloud.com&#x2F;help&#x2F;zh&#x2F;faq-detail&#x2F;64769.htm&#39;</span><br><span class="line"></span><br><span class="line">    Type: String</span><br><span class="line"></span><br><span class="line">    AssociationProperty: Cron</span><br><span class="line"></span><br><span class="line">    Default: 0 0 12 ? * *</span><br><span class="line"></span><br><span class="line">  endDate:</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: &#39;The end date of time trigger. Format: yyyy-MM-ddThh:mm:ssZ.&#39;</span><br><span class="line"></span><br><span class="line">      zh-cn: &#39;时间触发器结束时间。格式：yyyy-MM-ddThh:mm:ssZ&#39;</span><br><span class="line"></span><br><span class="line">    Type: String</span><br><span class="line"></span><br><span class="line">    AssociationProperty: DateTime</span><br><span class="line"></span><br><span class="line">    AssociationPropertyMetadata:</span><br><span class="line"></span><br><span class="line">      Format: &#39;YYYY-MM-DDThh:mm:ssZ&#39;</span><br><span class="line"></span><br><span class="line">  rateControl:</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: Concurrency ratio of task execution.</span><br><span class="line"></span><br><span class="line">      zh-cn: 任务执行的并发比率。</span><br><span class="line"></span><br><span class="line">    Type: Json</span><br><span class="line"></span><br><span class="line">    AssociationProperty: RateControl</span><br><span class="line"></span><br><span class="line">    Default:</span><br><span class="line"></span><br><span class="line">      Mode: Concurrency</span><br><span class="line"></span><br><span class="line">      MaxErrors: 0</span><br><span class="line"></span><br><span class="line">      Concurrency: 10</span><br><span class="line"></span><br><span class="line">  OOSAssumeRole:</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: The RAM role to be assumed by OOS.</span><br><span class="line"></span><br><span class="line">      zh-cn: OOS扮演的RAM角色。</span><br><span class="line"></span><br><span class="line">    Type: String</span><br><span class="line"></span><br><span class="line">    Default: OOSServiceRole</span><br><span class="line"></span><br><span class="line">RamRole: &#39;&#123;&#123; OOSAssumeRole &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Tasks:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: timerTrigger</span><br><span class="line"></span><br><span class="line">    Action: &#39;ACS::TimerTrigger&#39;</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: Triggers a task as scheduled by specifying Cron expression.</span><br><span class="line"></span><br><span class="line">      zh-cn: 通过指定Cron表达式按计划触发任务。</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">      Type: cron</span><br><span class="line"></span><br><span class="line">      Expression: &#39;&#123;&#123; cron &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">      EndDate: &#39;&#123;&#123; endDate &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: getInstance</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: Views the ECS instances.</span><br><span class="line"></span><br><span class="line">      zh-cn: 获取ECS实例。</span><br><span class="line"></span><br><span class="line">    Action: &#39;ACS::SelectTargets&#39;</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">      ResourceType: &#39;ALIYUN::ECS::Instance&#39;</span><br><span class="line"></span><br><span class="line">      Filters:</span><br><span class="line"></span><br><span class="line">        - &#39;&#123;&#123; targets &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">    Outputs:</span><br><span class="line"></span><br><span class="line">      instanceIds:</span><br><span class="line"></span><br><span class="line">        Type: List</span><br><span class="line"></span><br><span class="line">        ValueSelector: &#39;Instances.Instance[].InstanceId&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: StopInstance</span><br><span class="line"></span><br><span class="line">    Action: &#39;ACS::ECS::StopInstance&#39;</span><br><span class="line"></span><br><span class="line">    Description: Stops an ECS instance.</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">      instanceId: &#39;&#123;&#123; ACS::TaskLoopItem &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">    OnError: &#39;ACS::NEXT&#39;</span><br><span class="line"></span><br><span class="line">    Loop:</span><br><span class="line"></span><br><span class="line">      RateControl: &#39;&#123;&#123; rateControl &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">      Items: &#39;&#123;&#123; getInstance.instanceIds &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: createImage</span><br><span class="line"></span><br><span class="line">    Action: &#39;ACS::ECS::CreateImage&#39;</span><br><span class="line"></span><br><span class="line">    Description:</span><br><span class="line"></span><br><span class="line">      en: Create new image with the specified image name and instance ID.</span><br><span class="line"></span><br><span class="line">      zh-cn: 通过指定实例ID和镜像名称创建新的镜像。</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">      instanceId: &#39;&#123;&#123; ACS::TaskLoopItem &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">      imageName: &#39;Auto_&#123;&#123; ACS::ExecutionId &#125;&#125;_&#123;&#123; ACS::TaskLoopItem &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">    Loop:</span><br><span class="line"></span><br><span class="line">      Items: &#39;&#123;&#123; getInstance.instanceIds &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">      RateContral: &#39;&#123;&#123; rateControl &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">      Outputs:</span><br><span class="line"></span><br><span class="line">        imageIds:</span><br><span class="line"></span><br><span class="line">          AggregateType: &#39;Fn::ListJoin&#39;</span><br><span class="line"></span><br><span class="line">          AggregateField: imageId</span><br><span class="line"></span><br><span class="line">    OnError: ReplaceSystemDiskBasic</span><br><span class="line"></span><br><span class="line">    Outputs:</span><br><span class="line"></span><br><span class="line">      imageId:</span><br><span class="line"></span><br><span class="line">        ValueSelector: imageId</span><br><span class="line"></span><br><span class="line">        Type: String</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: ReplaceSystemDisk</span><br><span class="line"></span><br><span class="line">    Action: &#39;ACS::ECS::ReplaceSystemDisk&#39;</span><br><span class="line"></span><br><span class="line">    Description: Replaces the system disk of an ECS instance.</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">      instanceId: &#39;&#123;&#123; instanceId &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">      imageId: &#39;&#123;&#123; ACS::TaskLoopItem &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">    OnError: ReplaceSystemDiskBasic</span><br><span class="line"></span><br><span class="line">    OnSuccess: NotifyByMailYES</span><br><span class="line"></span><br><span class="line">    Loop:</span><br><span class="line"></span><br><span class="line">      Items: &#39;&#123;&#123; createImage.ImageIds &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">      Outputs:</span><br><span class="line"></span><br><span class="line">        ImageIds:</span><br><span class="line"></span><br><span class="line">          AggregateType: &#39;Fn::ListJoin&#39;</span><br><span class="line"></span><br><span class="line">          AggregateField: ImageId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: ReplaceSystemDiskBasic</span><br><span class="line"></span><br><span class="line">    Action: &#39;ACS::ECS::ReplaceSystemDisk&#39;</span><br><span class="line"></span><br><span class="line">    Description: Replaces the system disk of an ECS instance.</span><br><span class="line"></span><br><span class="line">    OnError: NotifyByMailNONO</span><br><span class="line"></span><br><span class="line">    OnSuccess: NotifyByMailNO</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">      instanceId: &#39;&#123;&#123; instanceId &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">      imageId: &#39;&#123;&#123; Imagesbasic &#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: NotifyByMailNONO</span><br><span class="line"></span><br><span class="line">    Action: ACS::Notify</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">        NotifyType: Mail</span><br><span class="line"></span><br><span class="line">        Mail:</span><br><span class="line"></span><br><span class="line">            Host: hwsmtp.exmail.qq.com</span><br><span class="line"></span><br><span class="line">            Port: 465</span><br><span class="line"></span><br><span class="line">            Username: notify@xyz.blue</span><br><span class="line"></span><br><span class="line">            Password: XXXXXXXXXXXXXXX</span><br><span class="line"></span><br><span class="line">            Subject: BIG Error Auto Images</span><br><span class="line"></span><br><span class="line">            Body: Unable return to Basic</span><br><span class="line"></span><br><span class="line">            From: notify@xyz.blue</span><br><span class="line"></span><br><span class="line">            To:  [123456789@qq.com,987654321@qq.com]</span><br><span class="line"></span><br><span class="line">    OnSuccess: &#39;ACS::END&#39;</span><br><span class="line"></span><br><span class="line">    OnError: &#39;ACS::END&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: NotifyByMailNO</span><br><span class="line"></span><br><span class="line">    Action: ACS::Notify</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">        NotifyType: Mail</span><br><span class="line"></span><br><span class="line">        Mail:</span><br><span class="line"></span><br><span class="line">            Host: hwsmtp.exmail.qq.com</span><br><span class="line"></span><br><span class="line">            Port: 465</span><br><span class="line"></span><br><span class="line">            Username: notify@xyz.blue</span><br><span class="line"></span><br><span class="line">            Password: XXXXXXXXXXXXXXX</span><br><span class="line"></span><br><span class="line">            Subject: Error Auto Images</span><br><span class="line"></span><br><span class="line">            Body: Return to Basic</span><br><span class="line"></span><br><span class="line">            From: notify@xyz.blue</span><br><span class="line"></span><br><span class="line">            To:  [123456789@qq.com,987654321@qq.com]</span><br><span class="line"></span><br><span class="line">    OnSuccess: &#39;ACS::END&#39;</span><br><span class="line"></span><br><span class="line">    OnError: &#39;ACS::END&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - Name: NotifyByMailYES</span><br><span class="line"></span><br><span class="line">    Action: ACS::Notify</span><br><span class="line"></span><br><span class="line">    Properties:</span><br><span class="line"></span><br><span class="line">        NotifyType: Mail</span><br><span class="line"></span><br><span class="line">        Mail:</span><br><span class="line"></span><br><span class="line">            Host: hwsmtp.exmail.qq.com</span><br><span class="line"></span><br><span class="line">            Port: 465</span><br><span class="line"></span><br><span class="line">            Username: notify@xyz.blue</span><br><span class="line"></span><br><span class="line">            Password: XXXXXXXXXXXXXXX</span><br><span class="line"></span><br><span class="line">            Subject: YES Auto Images</span><br><span class="line"></span><br><span class="line">            Body: YES TO MAKE</span><br><span class="line"></span><br><span class="line">            From: notify@xyz.blue</span><br><span class="line"></span><br><span class="line">            To:  [123456789@qq.com,987654321@qq.com</span><br><span class="line"></span><br><span class="line">    OnSuccess: &#39;ACS::END&#39;</span><br><span class="line"></span><br><span class="line">    OnError: &#39;ACS::END&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Outputs:</span><br><span class="line"></span><br><span class="line">  imageIds:</span><br><span class="line"></span><br><span class="line">    Type: List</span><br><span class="line"></span><br><span class="line">    Value: &#39;&#123;&#123; createImage.imageIds &#125;&#125;&#39;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 运维编排 </tag>
            
            <tag> OSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>非交互式修改SSH密码</title>
      <link href="/2020/01/28/non-interactive-ssh-password-modification.html"/>
      <url>/2020/01/28/non-interactive-ssh-password-modification.html</url>
      
        <content type="html"><![CDATA[<p>方式1：</p><pre><code>echo &quot;password&quot; | passwd testuser --stdin &gt; /dev/null 2&gt;&amp;1</code></pre><p>方式2：</p><pre><code>echo testuser:password|chpasswd</code></pre><p><strong>在shell脚本和Dockerfile中请使用方式2</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>阿里云Nas加密和非加密区别以及实机评测</title>
      <link href="/2020/01/28/alibaba-cloud-nas-encryption-and-non-encryption-differences-and-real-machine-evaluation.html"/>
      <url>/2020/01/28/alibaba-cloud-nas-encryption-and-non-encryption-differences-and-real-machine-evaluation.html</url>
      
        <content type="html"><![CDATA[<p><em>什么是文件存储NAS</em></p><p>阿里云文件存储（Network Attached Storage，简称 NAS）是面向阿里云 ECS 实例、E-HPC 和容器服务等计算节点的文件存储服务。</p><p>定义</p><p>阿里云文件存储 NAS 是一个可共享访问、弹性扩展、高可靠以及高性能的分布式文件系统。它基于 POSIX 文件接口，天然适配原生操作系统，提供共享访问，同时保证数据一致性和锁互斥。</p><p>NAS 提供了简单的可扩展文件存储以供与 ECS 配合使用，多个ECS实例可以同时访问 NAS 文件系统，并且存储容量会随着您添加和删除文件而自动弹性增长和收缩，为在多个实例或服务器上运行的工作负载和应用程序提供通用数据源。</p><p>NAS 支持丰富的应用场景，详情请参见应用场景。</p><p>NAS 提供了容量型、性能型以及极速型存储类型，更多详情请参见存储类型。</p><p>产品优势</p><p>NAS 在成本、安全、简单、可靠性以及性能上都具有自身的优势。</p><p>成本</p><p>一个 NAS 文件系统可以同时挂载到多个计算节点上，由这些节点共享访问，从而节约大量拷贝与同步成本。</p><p>单个 NAS 文件系统的性能能够随存储容量线性扩展，使用户无需购买高端的文件存储设备，大幅降低硬件成本。</p><p>使用 NAS文件存储，您只需为文件系统使用的存储空间付费，不需要提前配置存储，并且不存在最低费用或设置费用。更多详情，请参见计量项和计费说明。</p><p>NAS 的高可靠性能够降低数据安全风险，从而大幅节约维护成本。</p><p>简单</p><p>一键创建文件系统，无需部署维护文件系统。</p><p>安全</p><p>基于 RAM 实现的资源访问控制，基于VPC实现的网络访问隔离，结合文件存储 NAS 的传输加密与存储加密特性，保障数据不被窃取或篡改。</p><p>高可靠性</p><p>NAS 提供 99.999999999% 的数据可靠性，能够有效降低数据安全风险。</p><p>高性能</p><p>基于分布式架构文件系统，随着容量的增长性能线性扩展，提供远高于传统存储的性能。</p><p>兼容性</p><p>NAS 文件存储提供良好的协议兼容性，支持 NFS 和 SMB 协议方案，兼容POSIX 文件系统访问语义，提供强大的数据一致性和文件锁定。</p><p>在 NAS 中，任何文件修改成功后，用户都能够立刻看到修改结果，便于用户实时修改存储内容。</p><img src= "/img/loading.gif" data-src="/2020/01/28/alibaba-cloud-nas-encryption-and-non-encryption-differences-and-real-machine-evaluation/Aliyun_Nas.png" width="100%" alt="Aliyun_Nas"><p><strong>test1为加密，test2为非加密</strong></p><p>test1 随机读IOPS设置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@super &#x2F;]# fio -numjobs&#x3D;1 -iodepth&#x3D;128 -direct&#x3D;1 -ioengine&#x3D;libaio -sync&#x3D;1 -rw&#x3D;randread -bs&#x3D;4K -size&#x3D;1G -time_based -runtime&#x3D;60 -name&#x3D;Fio -directory&#x3D;&#x2F;test1</span><br><span class="line"></span><br><span class="line">Fio: (g&#x3D;0): rw&#x3D;randread, bs&#x3D;(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine&#x3D;libaio, iodepth&#x3D;128</span><br><span class="line"></span><br><span class="line">fio-3.17</span><br><span class="line"></span><br><span class="line">Starting 1 process</span><br><span class="line"></span><br><span class="line">Fio: Laying out IO file (1 file &#x2F; 1024MiB)</span><br><span class="line"></span><br><span class="line">Jobs: 1 (f&#x3D;1): [r(1)][100.0%][r&#x3D;97.8MiB&#x2F;s][r&#x3D;25.0k IOPS][eta 00m:00s]</span><br><span class="line"></span><br><span class="line">Fio: (groupid&#x3D;0, jobs&#x3D;1): err&#x3D; 0: pid&#x3D;1482: Mon Jan 27 23:33:22 2020</span><br><span class="line"></span><br><span class="line">  read: IOPS&#x3D;24.1k, BW&#x3D;94.3MiB&#x2F;s (98.9MB&#x2F;s)(5659MiB&#x2F;60006msec)</span><br><span class="line"></span><br><span class="line">    slat (nsec): min&#x3D;1871, max&#x3D;4225.7k, avg&#x3D;8454.96, stdev&#x3D;17814.51</span><br><span class="line"></span><br><span class="line">    clat (usec): min&#x3D;1150, max&#x3D;66695, avg&#x3D;5291.30, stdev&#x3D;1830.86</span><br><span class="line"></span><br><span class="line">     lat (usec): min&#x3D;1157, max&#x3D;66711, avg&#x3D;5299.96, stdev&#x3D;1830.83</span><br><span class="line"></span><br><span class="line">    clat percentiles (usec):</span><br><span class="line"></span><br><span class="line">     |  1.00th&#x3D;[ 2409],  5.00th&#x3D;[ 2933], 10.00th&#x3D;[ 3294], 20.00th&#x3D;[ 3785],</span><br><span class="line"></span><br><span class="line">     | 30.00th&#x3D;[ 4228], 40.00th&#x3D;[ 4621], 50.00th&#x3D;[ 5080], 60.00th&#x3D;[ 5473],</span><br><span class="line"></span><br><span class="line">     | 70.00th&#x3D;[ 5997], 80.00th&#x3D;[ 6587], 90.00th&#x3D;[ 7504], 95.00th&#x3D;[ 8455],</span><br><span class="line"></span><br><span class="line">     | 99.00th&#x3D;[10683], 99.50th&#x3D;[11994], 99.90th&#x3D;[17171], 99.95th&#x3D;[19268],</span><br><span class="line"></span><br><span class="line">     | 99.99th&#x3D;[35914]</span><br><span class="line"></span><br><span class="line">   bw (  KiB&#x2F;s): min&#x3D;87160, max&#x3D;104926, per&#x3D;99.98%, avg&#x3D;96554.23, stdev&#x3D;3373.87, samples&#x3D;120</span><br><span class="line"></span><br><span class="line">   iops        : min&#x3D;21790, max&#x3D;26231, avg&#x3D;24138.51, stdev&#x3D;843.44, samples&#x3D;120</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 2&#x3D;0.13%, 4&#x3D;24.57%, 10&#x3D;73.71%, 20&#x3D;1.56%, 50&#x3D;0.03%</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 100&#x3D;0.01%</span><br><span class="line"></span><br><span class="line">  cpu          : usr&#x3D;5.74%, sys&#x3D;15.74%, ctx&#x3D;800135, majf&#x3D;0, minf&#x3D;137</span><br><span class="line"></span><br><span class="line">  IO depths    : 1&#x3D;0.1%, 2&#x3D;0.1%, 4&#x3D;0.1%, 8&#x3D;0.1%, 16&#x3D;0.1%, 32&#x3D;0.1%, &gt;&#x3D;64&#x3D;100.0%</span><br><span class="line"></span><br><span class="line">     submit    : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.0%</span><br><span class="line"></span><br><span class="line">     complete  : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.1%</span><br><span class="line"></span><br><span class="line">     issued rwts: total&#x3D;1448757,0,0,0 short&#x3D;0,0,0,0 dropped&#x3D;0,0,0,0</span><br><span class="line"></span><br><span class="line">     latency   : target&#x3D;0, window&#x3D;0, percentile&#x3D;100.00%, depth&#x3D;128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line"></span><br><span class="line">   READ: bw&#x3D;94.3MiB&#x2F;s (98.9MB&#x2F;s), 94.3MiB&#x2F;s-94.3MiB&#x2F;s (98.9MB&#x2F;s-98.9MB&#x2F;s), io&#x3D;5659MiB (5934MB), run&#x3D;60006-60006msec</span><br></pre></td></tr></table></figure><p>test2不 随机读IOPS设置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@super &#x2F;]# fio -numjobs&#x3D;1 -iodepth&#x3D;128 -direct&#x3D;1 -ioengine&#x3D;libaio -sync&#x3D;1 -rw&#x3D;randread -bs&#x3D;4K -size&#x3D;1G -time_based -runtime&#x3D;60 -name&#x3D;Fio -directory&#x3D;&#x2F;test2</span><br><span class="line"></span><br><span class="line">Fio: (g&#x3D;0): rw&#x3D;randread, bs&#x3D;(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine&#x3D;libaio, iodepth&#x3D;128</span><br><span class="line"></span><br><span class="line">fio-3.17</span><br><span class="line"></span><br><span class="line">Starting 1 process</span><br><span class="line"></span><br><span class="line">Fio: Laying out IO file (1 file &#x2F; 1024MiB)</span><br><span class="line"></span><br><span class="line">Jobs: 1 (f&#x3D;1): [r(1)][100.0%][r&#x3D;104MiB&#x2F;s][r&#x3D;26.5k IOPS][eta 00m:00s] </span><br><span class="line"></span><br><span class="line">Fio: (groupid&#x3D;0, jobs&#x3D;1): err&#x3D; 0: pid&#x3D;1494: Mon Jan 27 23:35:30 2020</span><br><span class="line"></span><br><span class="line">  read: IOPS&#x3D;25.7k, BW&#x3D;100MiB&#x2F;s (105MB&#x2F;s)(6023MiB&#x2F;60005msec)</span><br><span class="line"></span><br><span class="line">    slat (nsec): min&#x3D;1848, max&#x3D;1328.1k, avg&#x3D;8603.01, stdev&#x3D;21240.04</span><br><span class="line"></span><br><span class="line">    clat (usec): min&#x3D;1126, max&#x3D;152365, avg&#x3D;4971.28, stdev&#x3D;2067.07</span><br><span class="line"></span><br><span class="line">     lat (usec): min&#x3D;1132, max&#x3D;152368, avg&#x3D;4980.10, stdev&#x3D;2067.06</span><br><span class="line"></span><br><span class="line">    clat percentiles (usec):</span><br><span class="line"></span><br><span class="line">     |  1.00th&#x3D;[ 2245],  5.00th&#x3D;[ 2671], 10.00th&#x3D;[ 2999], 20.00th&#x3D;[ 3458],</span><br><span class="line"></span><br><span class="line">     | 30.00th&#x3D;[ 3884], 40.00th&#x3D;[ 4293], 50.00th&#x3D;[ 4752], 60.00th&#x3D;[ 5145],</span><br><span class="line"></span><br><span class="line">     | 70.00th&#x3D;[ 5669], 80.00th&#x3D;[ 6259], 90.00th&#x3D;[ 7111], 95.00th&#x3D;[ 7963],</span><br><span class="line"></span><br><span class="line">     | 99.00th&#x3D;[10290], 99.50th&#x3D;[11731], 99.90th&#x3D;[17957], 99.95th&#x3D;[22676],</span><br><span class="line"></span><br><span class="line">     | 99.99th&#x3D;[40633]</span><br><span class="line"></span><br><span class="line">   bw (  KiB&#x2F;s): min&#x3D;86856, max&#x3D;111976, per&#x3D;99.98%, avg&#x3D;102751.36, stdev&#x3D;3685.76, samples&#x3D;120</span><br><span class="line"></span><br><span class="line">   iops        : min&#x3D;21714, max&#x3D;27994, avg&#x3D;25687.74, stdev&#x3D;921.31, samples&#x3D;120</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 2&#x3D;0.28%, 4&#x3D;32.38%, 10&#x3D;66.15%, 20&#x3D;1.11%, 50&#x3D;0.06%</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 100&#x3D;0.01%, 250&#x3D;0.01%</span><br><span class="line"></span><br><span class="line">  cpu          : usr&#x3D;5.96%, sys&#x3D;15.47%, ctx&#x3D;789134, majf&#x3D;0, minf&#x3D;138</span><br><span class="line"></span><br><span class="line">  IO depths    : 1&#x3D;0.1%, 2&#x3D;0.1%, 4&#x3D;0.1%, 8&#x3D;0.1%, 16&#x3D;0.1%, 32&#x3D;0.1%, &gt;&#x3D;64&#x3D;100.0%</span><br><span class="line"></span><br><span class="line">     submit    : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.0%</span><br><span class="line"></span><br><span class="line">     complete  : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.1%</span><br><span class="line"></span><br><span class="line">     issued rwts: total&#x3D;1541761,0,0,0 short&#x3D;0,0,0,0 dropped&#x3D;0,0,0,0</span><br><span class="line"></span><br><span class="line">     latency   : target&#x3D;0, window&#x3D;0, percentile&#x3D;100.00%, depth&#x3D;128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line"></span><br><span class="line">   READ: bw&#x3D;100MiB&#x2F;s (105MB&#x2F;s), 100MiB&#x2F;s-100MiB&#x2F;s (105MB&#x2F;s-105MB&#x2F;s), io&#x3D;6023MiB (6315MB), run&#x3D;60005-60005msec</span><br></pre></td></tr></table></figure><p>test1随机写IOPS设置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@super &#x2F;]# fio -numjobs&#x3D;1 -iodepth&#x3D;128 -direct&#x3D;1 -ioengine&#x3D;libaio -sync&#x3D;1 -rw&#x3D;randwrite -bs&#x3D;4K -size&#x3D;1G -time_based -runtime&#x3D;60 -name&#x3D;Fio -directory&#x3D;&#x2F;test1</span><br><span class="line"></span><br><span class="line">Fio: (g&#x3D;0): rw&#x3D;randwrite, bs&#x3D;(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine&#x3D;libaio, iodepth&#x3D;128</span><br><span class="line"></span><br><span class="line">fio-3.17</span><br><span class="line"></span><br><span class="line">Starting 1 process</span><br><span class="line"></span><br><span class="line">Jobs: 1 (f&#x3D;1): [w(1)][100.0%][w&#x3D;75.7MiB&#x2F;s][w&#x3D;19.4k IOPS][eta 00m:00s]</span><br><span class="line"></span><br><span class="line">Fio: (groupid&#x3D;0, jobs&#x3D;1): err&#x3D; 0: pid&#x3D;1498: Mon Jan 27 23:37:40 2020</span><br><span class="line"></span><br><span class="line">  write: IOPS&#x3D;18.2k, BW&#x3D;71.2MiB&#x2F;s (74.7MB&#x2F;s)(4282MiB&#x2F;60113msec); 0 zone resets</span><br><span class="line"></span><br><span class="line">    slat (usec): min&#x3D;2, max&#x3D;616, avg&#x3D; 7.55, stdev&#x3D; 6.92</span><br><span class="line"></span><br><span class="line">    clat (msec): min&#x3D;2, max&#x3D;232, avg&#x3D; 7.01, stdev&#x3D; 7.15</span><br><span class="line"></span><br><span class="line">     lat (msec): min&#x3D;2, max&#x3D;232, avg&#x3D; 7.02, stdev&#x3D; 7.15</span><br><span class="line"></span><br><span class="line">    clat percentiles (msec):</span><br><span class="line"></span><br><span class="line">     |  1.00th&#x3D;[    4],  5.00th&#x3D;[    4], 10.00th&#x3D;[    5], 20.00th&#x3D;[    5],</span><br><span class="line"></span><br><span class="line">     | 30.00th&#x3D;[    5], 40.00th&#x3D;[    6], 50.00th&#x3D;[    6], 60.00th&#x3D;[    7],</span><br><span class="line"></span><br><span class="line">     | 70.00th&#x3D;[    7], 80.00th&#x3D;[    8], 90.00th&#x3D;[   10], 95.00th&#x3D;[   12],</span><br><span class="line"></span><br><span class="line">     | 99.00th&#x3D;[   36], 99.50th&#x3D;[   47], 99.90th&#x3D;[  116], 99.95th&#x3D;[  140],</span><br><span class="line"></span><br><span class="line">     | 99.99th&#x3D;[  197]</span><br><span class="line"></span><br><span class="line">   bw (  KiB&#x2F;s): min&#x3D;48336, max&#x3D;85600, per&#x3D;100.00%, avg&#x3D;73062.90, stdev&#x3D;7091.42, samples&#x3D;120</span><br><span class="line"></span><br><span class="line">   iops        : min&#x3D;12084, max&#x3D;21400, avg&#x3D;18265.67, stdev&#x3D;1772.83, samples&#x3D;120</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 4&#x3D;9.40%, 10&#x3D;82.41%, 20&#x3D;6.18%, 50&#x3D;1.56%, 100&#x3D;0.30%</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 250&#x3D;0.14%</span><br><span class="line"></span><br><span class="line">  cpu          : usr&#x3D;5.55%, sys&#x3D;14.95%, ctx&#x3D;735321, majf&#x3D;0, minf&#x3D;10</span><br><span class="line"></span><br><span class="line">  IO depths    : 1&#x3D;0.1%, 2&#x3D;0.1%, 4&#x3D;0.1%, 8&#x3D;0.1%, 16&#x3D;0.1%, 32&#x3D;0.1%, &gt;&#x3D;64&#x3D;100.0%</span><br><span class="line"></span><br><span class="line">     submit    : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.0%</span><br><span class="line"></span><br><span class="line">     complete  : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.1%</span><br><span class="line"></span><br><span class="line">     issued rwts: total&#x3D;0,1096310,0,0 short&#x3D;0,0,0,0 dropped&#x3D;0,0,0,0</span><br><span class="line"></span><br><span class="line">     latency   : target&#x3D;0, window&#x3D;0, percentile&#x3D;100.00%, depth&#x3D;128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line"></span><br><span class="line">  WRITE: bw&#x3D;71.2MiB&#x2F;s (74.7MB&#x2F;s), 71.2MiB&#x2F;s-71.2MiB&#x2F;s (74.7MB&#x2F;s-74.7MB&#x2F;s), io&#x3D;4282MiB (4490MB), run&#x3D;60113-60113msec</span><br></pre></td></tr></table></figure><p>test2随机写IOPS设置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@super &#x2F;]# fio -numjobs&#x3D;1 -iodepth&#x3D;128 -direct&#x3D;1 -ioengine&#x3D;libaio -sync&#x3D;1 -rw&#x3D;randwrite -bs&#x3D;4K -size&#x3D;1G -time_based -runtime&#x3D;60 -name&#x3D;Fio -directory&#x3D;&#x2F;test2</span><br><span class="line"></span><br><span class="line">Fio: (g&#x3D;0): rw&#x3D;randwrite, bs&#x3D;(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine&#x3D;libaio, iodepth&#x3D;128</span><br><span class="line"></span><br><span class="line">fio-3.17</span><br><span class="line"></span><br><span class="line">Starting 1 process</span><br><span class="line"></span><br><span class="line">Jobs: 1 (f&#x3D;1): [w(1)][100.0%][w&#x3D;79.6MiB&#x2F;s][w&#x3D;20.4k IOPS][eta 00m:00s]</span><br><span class="line"></span><br><span class="line">Fio: (groupid&#x3D;0, jobs&#x3D;1): err&#x3D; 0: pid&#x3D;1503: Mon Jan 27 23:39:14 2020</span><br><span class="line"></span><br><span class="line">  write: IOPS&#x3D;19.1k, BW&#x3D;74.5MiB&#x2F;s (78.1MB&#x2F;s)(4468MiB&#x2F;60007msec); 0 zone resets</span><br><span class="line"></span><br><span class="line">    slat (nsec): min&#x3D;1997, max&#x3D;791752, avg&#x3D;7377.43, stdev&#x3D;6986.23</span><br><span class="line"></span><br><span class="line">    clat (msec): min&#x3D;2, max&#x3D;281, avg&#x3D; 6.71, stdev&#x3D; 7.43</span><br><span class="line"></span><br><span class="line">     lat (msec): min&#x3D;2, max&#x3D;281, avg&#x3D; 6.71, stdev&#x3D; 7.43</span><br><span class="line"></span><br><span class="line">    clat percentiles (msec):</span><br><span class="line"></span><br><span class="line">     |  1.00th&#x3D;[    4],  5.00th&#x3D;[    4], 10.00th&#x3D;[    4], 20.00th&#x3D;[    5],</span><br><span class="line"></span><br><span class="line">     | 30.00th&#x3D;[    5], 40.00th&#x3D;[    6], 50.00th&#x3D;[    6], 60.00th&#x3D;[    6],</span><br><span class="line"></span><br><span class="line">     | 70.00th&#x3D;[    7], 80.00th&#x3D;[    8], 90.00th&#x3D;[    9], 95.00th&#x3D;[   11],</span><br><span class="line"></span><br><span class="line">     | 99.00th&#x3D;[   36], 99.50th&#x3D;[   47], 99.90th&#x3D;[  121], 99.95th&#x3D;[  157],</span><br><span class="line"></span><br><span class="line">     | 99.99th&#x3D;[  220]</span><br><span class="line"></span><br><span class="line">   bw (  KiB&#x2F;s): min&#x3D;46232, max&#x3D;89360, per&#x3D;99.99%, avg&#x3D;76228.64, stdev&#x3D;7455.48, samples&#x3D;120</span><br><span class="line"></span><br><span class="line">   iops        : min&#x3D;11558, max&#x3D;22340, avg&#x3D;19057.13, stdev&#x3D;1863.88, samples&#x3D;120</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 4&#x3D;11.69%, 10&#x3D;81.90%, 20&#x3D;4.37%, 50&#x3D;1.60%, 100&#x3D;0.31%</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 250&#x3D;0.13%, 500&#x3D;0.01%</span><br><span class="line"></span><br><span class="line">  cpu          : usr&#x3D;6.16%, sys&#x3D;14.79%, ctx&#x3D;714669, majf&#x3D;0, minf&#x3D;10</span><br><span class="line"></span><br><span class="line">  IO depths    : 1&#x3D;0.1%, 2&#x3D;0.1%, 4&#x3D;0.1%, 8&#x3D;0.1%, 16&#x3D;0.1%, 32&#x3D;0.1%, &gt;&#x3D;64&#x3D;100.0%</span><br><span class="line"></span><br><span class="line">     submit    : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.0%</span><br><span class="line"></span><br><span class="line">     complete  : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.1%</span><br><span class="line"></span><br><span class="line">     issued rwts: total&#x3D;0,1143725,0,0 short&#x3D;0,0,0,0 dropped&#x3D;0,0,0,0</span><br><span class="line"></span><br><span class="line">     latency   : target&#x3D;0, window&#x3D;0, percentile&#x3D;100.00%, depth&#x3D;128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line"></span><br><span class="line">  WRITE: bw&#x3D;74.5MiB&#x2F;s (78.1MB&#x2F;s), 74.5MiB&#x2F;s-74.5MiB&#x2F;s (78.1MB&#x2F;s-78.1MB&#x2F;s), io&#x3D;4468MiB (4685MB), run&#x3D;60007-60007msec</span><br></pre></td></tr></table></figure><p>test1随机读吞吐</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@super &#x2F;]# fio -numjobs&#x3D;1 -iodepth&#x3D;128 -direct&#x3D;1 -ioengine&#x3D;libaio -sync&#x3D;1 -rw&#x3D;randread -bs&#x3D;1M -size&#x3D;1G -time_based -runtime&#x3D;60 -name&#x3D;Fio -directory&#x3D;&#x2F;test1</span><br><span class="line"></span><br><span class="line">Fio: (g&#x3D;0): rw&#x3D;randread, bs&#x3D;(R) 1024KiB-1024KiB, (W) 1024KiB-1024KiB, (T) 1024KiB-1024KiB, ioengine&#x3D;libaio, iodepth&#x3D;128</span><br><span class="line"></span><br><span class="line">fio-3.17</span><br><span class="line"></span><br><span class="line">Starting 1 process</span><br><span class="line"></span><br><span class="line">Jobs: 1 (f&#x3D;1): [r(1)][100.0%][r&#x3D;1024KiB&#x2F;s][r&#x3D;1 IOPS][eta 00m:00s] </span><br><span class="line"></span><br><span class="line">Fio: (groupid&#x3D;0, jobs&#x3D;1): err&#x3D; 0: pid&#x3D;1511: Mon Jan 27 23:41:49 2020</span><br><span class="line"></span><br><span class="line">  read: IOPS&#x3D;119, BW&#x3D;119MiB&#x2F;s (125MB&#x2F;s)(7292MiB&#x2F;61170msec)</span><br><span class="line"></span><br><span class="line">    slat (usec): min&#x3D;54, max&#x3D;3004, avg&#x3D;163.83, stdev&#x3D;196.42</span><br><span class="line"></span><br><span class="line">    clat (msec): min&#x3D;10, max&#x3D;2494, avg&#x3D;1072.78, stdev&#x3D;189.89</span><br><span class="line"></span><br><span class="line">     lat (msec): min&#x3D;10, max&#x3D;2495, avg&#x3D;1072.94, stdev&#x3D;189.86</span><br><span class="line"></span><br><span class="line">    clat percentiles (msec):</span><br><span class="line"></span><br><span class="line">     |  1.00th&#x3D;[  241],  5.00th&#x3D;[  902], 10.00th&#x3D;[  961], 20.00th&#x3D;[ 1028],</span><br><span class="line"></span><br><span class="line">     | 30.00th&#x3D;[ 1053], 40.00th&#x3D;[ 1070], 50.00th&#x3D;[ 1083], 60.00th&#x3D;[ 1099],</span><br><span class="line"></span><br><span class="line">     | 70.00th&#x3D;[ 1116], 80.00th&#x3D;[ 1133], 90.00th&#x3D;[ 1200], 95.00th&#x3D;[ 1250],</span><br><span class="line"></span><br><span class="line">     | 99.00th&#x3D;[ 1754], 99.50th&#x3D;[ 2005], 99.90th&#x3D;[ 2198], 99.95th&#x3D;[ 2265],</span><br><span class="line"></span><br><span class="line">     | 99.99th&#x3D;[ 2500]</span><br><span class="line"></span><br><span class="line">   bw (  KiB&#x2F;s): min&#x3D; 2048, max&#x3D;247808, per&#x3D;99.33%, avg&#x3D;121252.40, stdev&#x3D;27860.84, samples&#x3D;121</span><br><span class="line"></span><br><span class="line">   iops        : min&#x3D;    2, max&#x3D;  242, avg&#x3D;118.36, stdev&#x3D;27.22, samples&#x3D;121</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 20&#x3D;0.16%, 50&#x3D;0.08%, 100&#x3D;0.29%, 250&#x3D;0.48%, 500&#x3D;1.54%</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 750&#x3D;0.37%, 1000&#x3D;12.53%, 2000&#x3D;84.01%, &gt;&#x3D;2000&#x3D;0.53%</span><br><span class="line"></span><br><span class="line">  cpu          : usr&#x3D;0.08%, sys&#x3D;1.19%, ctx&#x3D;16345, majf&#x3D;0, minf&#x3D;32778</span><br><span class="line"></span><br><span class="line">  IO depths    : 1&#x3D;0.1%, 2&#x3D;0.1%, 4&#x3D;0.1%, 8&#x3D;0.1%, 16&#x3D;0.2%, 32&#x3D;0.4%, &gt;&#x3D;64&#x3D;99.1%</span><br><span class="line"></span><br><span class="line">     submit    : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.0%</span><br><span class="line"></span><br><span class="line">     complete  : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.1%</span><br><span class="line"></span><br><span class="line">     issued rwts: total&#x3D;7292,0,0,0 short&#x3D;0,0,0,0 dropped&#x3D;0,0,0,0</span><br><span class="line"></span><br><span class="line">     latency   : target&#x3D;0, window&#x3D;0, percentile&#x3D;100.00%, depth&#x3D;128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line"></span><br><span class="line">   READ: bw&#x3D;119MiB&#x2F;s (125MB&#x2F;s), 119MiB&#x2F;s-119MiB&#x2F;s (125MB&#x2F;s-125MB&#x2F;s), io&#x3D;7292MiB (7646MB), run&#x3D;61170-61170msec</span><br></pre></td></tr></table></figure><p>test2随机读吞吐</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@super &#x2F;]# fio -numjobs&#x3D;1 -iodepth&#x3D;128 -direct&#x3D;1 -ioengine&#x3D;libaio -sync&#x3D;1 -rw&#x3D;randread -bs&#x3D;1M -size&#x3D;1G -time_based -runtime&#x3D;60 -name&#x3D;Fio -directory&#x3D;&#x2F;test2</span><br><span class="line"></span><br><span class="line">Fio: (g&#x3D;0): rw&#x3D;randread, bs&#x3D;(R) 1024KiB-1024KiB, (W) 1024KiB-1024KiB, (T) 1024KiB-1024KiB, ioengine&#x3D;libaio, iodepth&#x3D;128</span><br><span class="line"></span><br><span class="line">fio-3.17</span><br><span class="line"></span><br><span class="line">Starting 1 process</span><br><span class="line"></span><br><span class="line">Jobs: 1 (f&#x3D;1): [r(1)][100.0%][r&#x3D;11.0MiB&#x2F;s][r&#x3D;11 IOPS][eta 00m:00s]</span><br><span class="line"></span><br><span class="line">Fio: (groupid&#x3D;0, jobs&#x3D;1): err&#x3D; 0: pid&#x3D;1514: Mon Jan 27 23:43:58 2020</span><br><span class="line"></span><br><span class="line">  read: IOPS&#x3D;119, BW&#x3D;119MiB&#x2F;s (125MB&#x2F;s)(7304MiB&#x2F;61174msec)</span><br><span class="line"></span><br><span class="line">    slat (usec): min&#x3D;52, max&#x3D;5598, avg&#x3D;183.95, stdev&#x3D;270.59</span><br><span class="line"></span><br><span class="line">    clat (msec): min&#x3D;146, max&#x3D;2256, avg&#x3D;1071.05, stdev&#x3D;171.09</span><br><span class="line"></span><br><span class="line">     lat (msec): min&#x3D;146, max&#x3D;2257, avg&#x3D;1071.23, stdev&#x3D;171.04</span><br><span class="line"></span><br><span class="line">    clat percentiles (msec):</span><br><span class="line"></span><br><span class="line">     |  1.00th&#x3D;[  317],  5.00th&#x3D;[  902], 10.00th&#x3D;[  961], 20.00th&#x3D;[ 1020],</span><br><span class="line"></span><br><span class="line">     | 30.00th&#x3D;[ 1053], 40.00th&#x3D;[ 1070], 50.00th&#x3D;[ 1083], 60.00th&#x3D;[ 1099],</span><br><span class="line"></span><br><span class="line">     | 70.00th&#x3D;[ 1116], 80.00th&#x3D;[ 1133], 90.00th&#x3D;[ 1200], 95.00th&#x3D;[ 1234],</span><br><span class="line"></span><br><span class="line">     | 99.00th&#x3D;[ 1636], 99.50th&#x3D;[ 1989], 99.90th&#x3D;[ 2140], 99.95th&#x3D;[ 2265],</span><br><span class="line"></span><br><span class="line">     | 99.99th&#x3D;[ 2265]</span><br><span class="line"></span><br><span class="line">   bw (  KiB&#x2F;s): min&#x3D; 2048, max&#x3D;288768, per&#x3D;99.35%, avg&#x3D;121466.95, stdev&#x3D;25110.94, samples&#x3D;121</span><br><span class="line"></span><br><span class="line">   iops        : min&#x3D;    2, max&#x3D;  282, avg&#x3D;118.60, stdev&#x3D;24.52, samples&#x3D;121</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 250&#x3D;0.21%, 500&#x3D;2.01%, 750&#x3D;0.77%, 1000&#x3D;13.81%, 2000&#x3D;82.79%</span><br><span class="line"></span><br><span class="line">  lat (msec)   : &gt;&#x3D;2000&#x3D;0.41%</span><br><span class="line"></span><br><span class="line">  cpu          : usr&#x3D;0.09%, sys&#x3D;1.19%, ctx&#x3D;16454, majf&#x3D;0, minf&#x3D;32778</span><br><span class="line"></span><br><span class="line">  IO depths    : 1&#x3D;0.1%, 2&#x3D;0.1%, 4&#x3D;0.1%, 8&#x3D;0.1%, 16&#x3D;0.2%, 32&#x3D;0.4%, &gt;&#x3D;64&#x3D;99.1%</span><br><span class="line"></span><br><span class="line">     submit    : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.0%</span><br><span class="line"></span><br><span class="line">     complete  : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.1%</span><br><span class="line"></span><br><span class="line">     issued rwts: total&#x3D;7304,0,0,0 short&#x3D;0,0,0,0 dropped&#x3D;0,0,0,0</span><br><span class="line"></span><br><span class="line">     latency   : target&#x3D;0, window&#x3D;0, percentile&#x3D;100.00%, depth&#x3D;128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line"></span><br><span class="line">   READ: bw&#x3D;119MiB&#x2F;s (125MB&#x2F;s), 119MiB&#x2F;s-119MiB&#x2F;s (125MB&#x2F;s-125MB&#x2F;s), io&#x3D;7304MiB (7659MB), run&#x3D;61174-61174msec</span><br></pre></td></tr></table></figure><p>test1随机写吞吐</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@super &#x2F;]# fio -numjobs&#x3D;1 -iodepth&#x3D;128 -direct&#x3D;1 -ioengine&#x3D;libaio -sync&#x3D;1 -rw&#x3D;randwrite -bs&#x3D;1M -size&#x3D;1G -time_based -runtime&#x3D;60 -name&#x3D;Fio -directory&#x3D;&#x2F;test1</span><br><span class="line"></span><br><span class="line">Fio: (g&#x3D;0): rw&#x3D;randwrite, bs&#x3D;(R) 1024KiB-1024KiB, (W) 1024KiB-1024KiB, (T) 1024KiB-1024KiB, ioengine&#x3D;libaio, iodepth&#x3D;128</span><br><span class="line"></span><br><span class="line">fio-3.17</span><br><span class="line"></span><br><span class="line">Starting 1 process</span><br><span class="line"></span><br><span class="line">Jobs: 1 (f&#x3D;1): [w(1)][100.0%][w&#x3D;28.0MiB&#x2F;s][w&#x3D;28 IOPS][eta 00m:00s]</span><br><span class="line"></span><br><span class="line">Fio: (groupid&#x3D;0, jobs&#x3D;1): err&#x3D; 0: pid&#x3D;1522: Mon Jan 27 23:48:33 2020</span><br><span class="line"></span><br><span class="line">  write: IOPS&#x3D;127, BW&#x3D;127MiB&#x2F;s (134MB&#x2F;s)(7771MiB&#x2F;61014msec); 0 zone resets</span><br><span class="line"></span><br><span class="line">    slat (usec): min&#x3D;104, max&#x3D;941, avg&#x3D;172.70, stdev&#x3D;37.40</span><br><span class="line"></span><br><span class="line">    clat (msec): min&#x3D;55, max&#x3D;2021, avg&#x3D;1004.46, stdev&#x3D;156.46</span><br><span class="line"></span><br><span class="line">     lat (msec): min&#x3D;55, max&#x3D;2021, avg&#x3D;1004.64, stdev&#x3D;156.46</span><br><span class="line"></span><br><span class="line">    clat percentiles (msec):</span><br><span class="line"></span><br><span class="line">     |  1.00th&#x3D;[  150],  5.00th&#x3D;[  986], 10.00th&#x3D;[ 1011], 20.00th&#x3D;[ 1020],</span><br><span class="line"></span><br><span class="line">     | 30.00th&#x3D;[ 1020], 40.00th&#x3D;[ 1020], 50.00th&#x3D;[ 1020], 60.00th&#x3D;[ 1020],</span><br><span class="line"></span><br><span class="line">     | 70.00th&#x3D;[ 1020], 80.00th&#x3D;[ 1028], 90.00th&#x3D;[ 1028], 95.00th&#x3D;[ 1045],</span><br><span class="line"></span><br><span class="line">     | 99.00th&#x3D;[ 1401], 99.50th&#x3D;[ 1720], 99.90th&#x3D;[ 1972], 99.95th&#x3D;[ 2005],</span><br><span class="line"></span><br><span class="line">     | 99.99th&#x3D;[ 2022]</span><br><span class="line"></span><br><span class="line">   bw (  KiB&#x2F;s): min&#x3D; 2048, max&#x3D;370688, per&#x3D;99.19%, avg&#x3D;129364.72, stdev&#x3D;25090.44, samples&#x3D;121</span><br><span class="line"></span><br><span class="line">   iops        : min&#x3D;    2, max&#x3D;  362, avg&#x3D;126.29, stdev&#x3D;24.51, samples&#x3D;121</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 100&#x3D;0.23%, 250&#x3D;1.90%, 500&#x3D;0.48%, 750&#x3D;0.50%, 1000&#x3D;3.53%</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 2000&#x3D;93.31%, &gt;&#x3D;2000&#x3D;0.05%</span><br><span class="line"></span><br><span class="line">  cpu          : usr&#x3D;1.07%, sys&#x3D;1.22%, ctx&#x3D;8135, majf&#x3D;0, minf&#x3D;9</span><br><span class="line"></span><br><span class="line">  IO depths    : 1&#x3D;0.1%, 2&#x3D;0.1%, 4&#x3D;0.1%, 8&#x3D;0.1%, 16&#x3D;0.2%, 32&#x3D;0.4%, &gt;&#x3D;64&#x3D;99.2%</span><br><span class="line"></span><br><span class="line">     submit    : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.0%</span><br><span class="line"></span><br><span class="line">     complete  : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.1%</span><br><span class="line"></span><br><span class="line">     issued rwts: total&#x3D;0,7771,0,0 short&#x3D;0,0,0,0 dropped&#x3D;0,0,0,0</span><br><span class="line"></span><br><span class="line">     latency   : target&#x3D;0, window&#x3D;0, percentile&#x3D;100.00%, depth&#x3D;128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line"></span><br><span class="line">  WRITE: bw&#x3D;127MiB&#x2F;s (134MB&#x2F;s), 127MiB&#x2F;s-127MiB&#x2F;s (134MB&#x2F;s-134MB&#x2F;s), io&#x3D;7771MiB (8148MB), run&#x3D;61014-61014msec</span><br></pre></td></tr></table></figure><p>test2随机写吞吐</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@super &#x2F;]# fio -numjobs&#x3D;1 -iodepth&#x3D;128 -direct&#x3D;1 -ioengine&#x3D;libaio -sync&#x3D;1 -rw&#x3D;randwrite -bs&#x3D;1M -size&#x3D;1G -time_based -runtime&#x3D;60 -name&#x3D;Fio -directory&#x3D;&#x2F;test2</span><br><span class="line"></span><br><span class="line">Fio: (g&#x3D;0): rw&#x3D;randwrite, bs&#x3D;(R) 1024KiB-1024KiB, (W) 1024KiB-1024KiB, (T) 1024KiB-1024KiB, ioengine&#x3D;libaio, iodepth&#x3D;128</span><br><span class="line"></span><br><span class="line">fio-3.17</span><br><span class="line"></span><br><span class="line">Starting 1 process</span><br><span class="line"></span><br><span class="line">Jobs: 1 (f&#x3D;1): [w(1)][100.0%][w&#x3D;28.0MiB&#x2F;s][w&#x3D;28 IOPS][eta 00m:00s]</span><br><span class="line"></span><br><span class="line">Fio: (groupid&#x3D;0, jobs&#x3D;1): err&#x3D; 0: pid&#x3D;1533: Mon Jan 27 23:51:47 2020</span><br><span class="line"></span><br><span class="line">  write: IOPS&#x3D;127, BW&#x3D;127MiB&#x2F;s (134MB&#x2F;s)(7772MiB&#x2F;61020msec); 0 zone resets</span><br><span class="line"></span><br><span class="line">    slat (usec): min&#x3D;101, max&#x3D;1754, avg&#x3D;173.58, stdev&#x3D;42.61</span><br><span class="line"></span><br><span class="line">    clat (msec): min&#x3D;52, max&#x3D;2019, avg&#x3D;1004.43, stdev&#x3D;161.16</span><br><span class="line"></span><br><span class="line">     lat (msec): min&#x3D;52, max&#x3D;2019, avg&#x3D;1004.60, stdev&#x3D;161.16</span><br><span class="line"></span><br><span class="line">    clat percentiles (msec):</span><br><span class="line"></span><br><span class="line">     |  1.00th&#x3D;[  133],  5.00th&#x3D;[  894], 10.00th&#x3D;[ 1003], 20.00th&#x3D;[ 1011],</span><br><span class="line"></span><br><span class="line">     | 30.00th&#x3D;[ 1020], 40.00th&#x3D;[ 1020], 50.00th&#x3D;[ 1020], 60.00th&#x3D;[ 1020],</span><br><span class="line"></span><br><span class="line">     | 70.00th&#x3D;[ 1020], 80.00th&#x3D;[ 1028], 90.00th&#x3D;[ 1028], 95.00th&#x3D;[ 1070],</span><br><span class="line"></span><br><span class="line">     | 99.00th&#x3D;[ 1401], 99.50th&#x3D;[ 1720], 99.90th&#x3D;[ 1972], 99.95th&#x3D;[ 2005],</span><br><span class="line"></span><br><span class="line">     | 99.99th&#x3D;[ 2022]</span><br><span class="line"></span><br><span class="line">   bw (  KiB&#x2F;s): min&#x3D; 2048, max&#x3D;371992, per&#x3D;99.20%, avg&#x3D;129375.29, stdev&#x3D;26928.24, samples&#x3D;121</span><br><span class="line"></span><br><span class="line">   iops        : min&#x3D;    2, max&#x3D;  363, avg&#x3D;126.30, stdev&#x3D;26.28, samples&#x3D;121</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 100&#x3D;0.39%, 250&#x3D;1.71%, 500&#x3D;0.49%, 750&#x3D;0.46%, 1000&#x3D;5.96%</span><br><span class="line"></span><br><span class="line">  lat (msec)   : 2000&#x3D;90.97%, &gt;&#x3D;2000&#x3D;0.03%</span><br><span class="line"></span><br><span class="line">  cpu          : usr&#x3D;1.31%, sys&#x3D;0.98%, ctx&#x3D;8027, majf&#x3D;0, minf&#x3D;10</span><br><span class="line"></span><br><span class="line">  IO depths    : 1&#x3D;0.1%, 2&#x3D;0.1%, 4&#x3D;0.1%, 8&#x3D;0.1%, 16&#x3D;0.2%, 32&#x3D;0.4%, &gt;&#x3D;64&#x3D;99.2%</span><br><span class="line"></span><br><span class="line">     submit    : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.0%</span><br><span class="line"></span><br><span class="line">     complete  : 0&#x3D;0.0%, 4&#x3D;100.0%, 8&#x3D;0.0%, 16&#x3D;0.0%, 32&#x3D;0.0%, 64&#x3D;0.0%, &gt;&#x3D;64&#x3D;0.1%</span><br><span class="line"></span><br><span class="line">     issued rwts: total&#x3D;0,7772,0,0 short&#x3D;0,0,0,0 dropped&#x3D;0,0,0,0</span><br><span class="line"></span><br><span class="line">     latency   : target&#x3D;0, window&#x3D;0, percentile&#x3D;100.00%, depth&#x3D;128</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line"></span><br><span class="line">  WRITE: bw&#x3D;127MiB&#x2F;s (134MB&#x2F;s), 127MiB&#x2F;s-127MiB&#x2F;s (134MB&#x2F;s-134MB&#x2F;s), io&#x3D;7772MiB (8150MB), run&#x3D;61020-61020msec</span><br></pre></td></tr></table></figure><hr><p>可以看出还是非加密好一点😁😁😁</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 测评 </category>
          
          <category> 阿里云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> Nas </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Mariadb和Mysql高版本的本地登录无需密码问题及说明</title>
      <link href="/2020/01/08/no-password-problem-and-instructions-for-local-login-of-mariadb-and-mysql.html"/>
      <url>/2020/01/08/no-password-problem-and-instructions-for-local-login-of-mariadb-and-mysql.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; show grants for &#39;root&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><p>输入命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;localhost&#39; IDENTIFIED VIA mysql_native_password USING &#39;*那一坨东西&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MariaDB </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查询正在使用的端口</title>
      <link href="/2020/01/01/query-ports-in-use.html"/>
      <url>/2020/01/01/query-ports-in-use.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">netstat -tunlp | grep 端口号</span><br></pre></td></tr></table></figure><p>-t (tcp) 仅显示tcp相关选项</p><p>-u (udp)仅显示udp相关选项</p><p>-n 拒绝显示别名，能显示数字的全部转化为数字</p><p>-l 仅列出在Listen(监听)的服务状态</p><p>-p 显示建立相关链接的程序名</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 端口 </tag>
            
            <tag> 查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键传附件脚本</title>
      <link href="/2019/12/30/one-click-attachment-script.html"/>
      <url>/2019/12/30/one-click-attachment-script.html</url>
      
        <content type="html"><![CDATA[<p>额，学校搞了个一体机，嗯，所以。。。</p><p>懒 见我的Github：<a href="https://github.com/arkylin/Mail-Files-Tools" target="_blank" rel="noopener">https://github.com/arkylin/Mail-Files-Tools</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> 附件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Newest_lamp项目</title>
      <link href="/2019/12/26/new-est-lamp-project.html"/>
      <url>/2019/12/26/new-est-lamp-project.html</url>
      
        <content type="html"><![CDATA[<h1 id="Newest-lamp"><a href="#Newest-lamp" class="headerlink" title="Newest_lamp"></a>Newest_lamp</h1><img src= "/img/loading.gif" data-src="/2019/12/26/new-est-lamp-project/Newest_lamp.png" width="100%" alt="Newest_lamp"><p>我的Github：<a href="https://github.com/arkylin/Newest_lamp" target="_blank" rel="noopener">https://github.com/arkylin/Newest_lamp</a></p><p>我的Docker Hub：<a href="https://hub.docker.com/r/arkylin/newest_lamp" target="_blank" rel="noopener">https://hub.docker.com/r/arkylin/newest_lamp</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">docker pull arkylin&#x2F;newest_lamp:v0.1.6</span><br></pre></td></tr></table></figure><p>此项目旨在创建一个通用的lamp安装脚本，来使那些“特别想用新版本，但又不会自己编译安装或者不想自己花时间去弄”的人得到方便<br></p><p>后续可能也可能会推出一些其他环境来弄或者一些有意思的软件<br></p><p>安装脚本<br></p><p>一、添加目录<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mkdir -p &#x2F;data&#x2F;&#123;ssl,vhost&#x2F;apache,mysql,wwwroot,wwwroot&#x2F;default,wwwlogs&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mkdir -p &#x2F;data&#x2F;&#123;ssl,vhost&#x2F;apache,wwwroot,wwwroot&#x2F;default,wwwlogs&#125;</span><br></pre></td></tr></table></figure><p>二、运行<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">docker run -itd --name super --hostname super.xyz.blue --net host --restart always --privileged -v &#x2F;data:&#x2F;data -v &#x2F;data&#x2F;mysql:&#x2F;var&#x2F;lib&#x2F;mysql arkylin&#x2F;newest_lamp:latest &#x2F;usr&#x2F;sbin&#x2F;init</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">docker run -itd --name super --hostname super.xyz.blue --net host --restart always --privileged -v &#x2F;data:&#x2F;data arkylin&#x2F;newest_lamp:latest &#x2F;usr&#x2F;sbin&#x2F;init</span><br></pre></td></tr></table></figure><p>三、初始化Mysql</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>注：-V 冒号”:”前面的目录是宿主机目录，后面的目录是容器内目录。<br></p><p>Apache配置命令<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">cp -f &#x2F;app&#x2F;apache&#x2F;conf&#x2F;vhost&#x2F;0.conf &#x2F;data&#x2F;vhost&#x2F;apache</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mkdir &#x2F;data&#x2F;vhost&#x2F;apache</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">domain&#x3D;super.xyz.blue</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Apache_fcgi&#x3D;$(echo -e &quot;&lt;Files ~ (\\.user.ini|\\.htaccess|\\.git|\\.svn|\\.project|LICENSE|README.md)\$&gt;\n    Order allow,deny\n    Deny from all\n  &lt;&#x2F;Files&gt;\n  &lt;FilesMatch \\.php\$&gt;\n    SetHandler \&quot;proxy:unix:&#x2F;dev&#x2F;shm&#x2F;php-cgi.sock|fcgi:&#x2F;&#x2F;localhost\&quot;\n  &lt;&#x2F;FilesMatch&gt;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Apache_log&#x3D;&quot;CustomLog \&quot;&#x2F;data&#x2F;wwwlogs&#x2F;$&#123;domain&#125;_apache.log\&quot; common&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">cat &gt; &#x2F;data&#x2F;vhost&#x2F;apache&#x2F;$&#123;domain&#125;.conf &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:88&gt;</span><br><span class="line"></span><br><span class="line">  ServerAdmin admin@xyz.blue</span><br><span class="line"></span><br><span class="line">  DocumentRoot &#x2F;data&#x2F;wwwroot&#x2F;$&#123;domain&#125;</span><br><span class="line"></span><br><span class="line">  ServerName $&#123;domain&#125;</span><br><span class="line"></span><br><span class="line">  # ServerAlias xyz.blue</span><br><span class="line"></span><br><span class="line">  SSLEngine on</span><br><span class="line"></span><br><span class="line">  SSLCertificateFile &#x2F;data&#x2F;ssl&#x2F;my.crt</span><br><span class="line"></span><br><span class="line">  SSLCertificateKeyFile &#x2F;data&#x2F;ssl&#x2F;my.key</span><br><span class="line"></span><br><span class="line">  ErrorLog &#x2F;data&#x2F;wwwlogs&#x2F;$&#123;domain&#125;_error_apache.log</span><br><span class="line"></span><br><span class="line">  $&#123;Apache_log&#125;</span><br><span class="line"></span><br><span class="line">  $&#123;Apache_fcgi&#125;</span><br><span class="line"></span><br><span class="line">&lt;Directory &#x2F;data&#x2F;wwwroot&#x2F;$&#123;domain&#125;&gt;</span><br><span class="line"></span><br><span class="line">  SetOutputFilter DEFLATE</span><br><span class="line"></span><br><span class="line">  Options FollowSymLinks ExecCGI</span><br><span class="line"></span><br><span class="line">  Require all granted</span><br><span class="line"></span><br><span class="line">  AllowOverride All</span><br><span class="line"></span><br><span class="line">  Order allow,deny</span><br><span class="line"></span><br><span class="line">  Allow from all</span><br><span class="line"></span><br><span class="line">  DirectoryIndex index.html index.php</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>使Apache生效<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">apachectl -t</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">apachectl -k graceful</span><br></pre></td></tr></table></figure><p>USELESS<br></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">cat &gt;&gt; &#x2F;root&#x2F;.bashrc &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">systemctl restart php-fpm</span><br><span class="line"></span><br><span class="line">systemctl restart httpd</span><br><span class="line"></span><br><span class="line">systemctl restart mariadb</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>博客配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;VirtualHost *:88&gt;</span><br><span class="line"></span><br><span class="line">  ServerAdmin admin@xyz.blue</span><br><span class="line"></span><br><span class="line">  DocumentRoot &#x2F;data&#x2F;wwwroot&#x2F;www.xyz.blue</span><br><span class="line"></span><br><span class="line">  ServerName www.xyz.blue</span><br><span class="line"></span><br><span class="line">  ServerAlias xyz.blue</span><br><span class="line"></span><br><span class="line">  #SSLEngine on</span><br><span class="line"></span><br><span class="line">  #SSLCertificateFile &#x2F;data&#x2F;ssl&#x2F;my.crt</span><br><span class="line"></span><br><span class="line">  #SSLCertificateKeyFile &#x2F;data&#x2F;ssl&#x2F;my.key</span><br><span class="line"></span><br><span class="line">  ErrorLog &#x2F;data&#x2F;wwwlogs&#x2F;www.xyz.blue_error_apache.log</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  &lt;Files ~ (\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)$&gt;</span><br><span class="line"></span><br><span class="line">    Order allow,deny</span><br><span class="line"></span><br><span class="line">    Deny from all</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;Files&gt;</span><br><span class="line"></span><br><span class="line">  &lt;FilesMatch \.php$&gt;</span><br><span class="line"></span><br><span class="line">    SetHandler &quot;proxy:unix:&#x2F;dev&#x2F;shm&#x2F;php-cgi.sock|fcgi:&#x2F;&#x2F;localhost&quot;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;FilesMatch&gt;</span><br><span class="line"></span><br><span class="line">&lt;Directory &#x2F;data&#x2F;wwwroot&#x2F;www.xyz.blue&gt;</span><br><span class="line"></span><br><span class="line">  SetOutputFilter DEFLATE</span><br><span class="line"></span><br><span class="line">  Options FollowSymLinks ExecCGI</span><br><span class="line"></span><br><span class="line">  Require all granted</span><br><span class="line"></span><br><span class="line">  AllowOverride All</span><br><span class="line"></span><br><span class="line">  Order allow,deny</span><br><span class="line"></span><br><span class="line">  Allow from all</span><br><span class="line"></span><br><span class="line">  DirectoryIndex index.html index.php</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>前端用Caddy</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;app&#x2F;caddy&#x2F;c* start --config &#x2F;app&#x2F;caddy&#x2F;C</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">http_port 80</span><br><span class="line"></span><br><span class="line">https_port 443</span><br><span class="line"></span><br><span class="line">experimental_http3</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xyz.blue www.xyz.blue &#123;</span><br><span class="line"></span><br><span class="line">tls &#x2F;data&#x2F;ssl&#x2F;my.crt &#x2F;data&#x2F;ssl&#x2F;my.key</span><br><span class="line"></span><br><span class="line">header Strict-Transport-Security &quot;max-age&#x3D;15552000; includeSubDomains; preload&quot;</span><br><span class="line"></span><br><span class="line">reverse_proxy 127.0.0.1:88</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分享一个Nextcloud/Owncloud的Caddy 2前端配置文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">aaa.com &#123;</span><br><span class="line"></span><br><span class="line">tls &#x2F;data&#x2F;ssl&#x2F;my.crt &#x2F;data&#x2F;ssl&#x2F;my.key</span><br><span class="line"></span><br><span class="line">header Strict-Transport-Security &quot;max-age&#x3D;15552000; includeSubDomains; preload&quot;</span><br><span class="line"></span><br><span class="line">reverse_proxy &#x2F; 127.0.0.1:88 &#123;</span><br><span class="line"></span><br><span class="line">header_up Host &#123;http.request.host&#125;</span><br><span class="line"></span><br><span class="line">header_up X-Real-IP &#123;http.request.remote.host&#125;</span><br><span class="line"></span><br><span class="line">header_up X-Forwarded-For &#123;http.request.remote.host&#125;</span><br><span class="line"></span><br><span class="line">header_up X-Forwarded-Port &#123;http.request.port&#125;</span><br><span class="line"></span><br><span class="line">header_up X-Forwarded-Proto &#123;http.request.scheme&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">redir &#x2F;.well-known&#x2F;carddav &#x2F;remote.php&#x2F;carddav 301</span><br><span class="line"></span><br><span class="line">redir &#x2F;.well-known&#x2F;caldav &#x2F;remote.php&#x2F;caldav 301</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请关注我的博客 <a href="https://www.xyz.blue">https://www.xyz.blue</a><br></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> LAMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Whcms开启SSL提示重定向次数过多[ERR_TOO_MANY_REDIRECTS]</title>
      <link href="/2019/12/07/too-many-times-for-whcms-to-enable-ssl-prompt-redirection.html"/>
      <url>/2019/12/07/too-many-times-for-whcms-to-enable-ssl-prompt-redirection.html</url>
      
        <content type="html"><![CDATA[<p>问题描述：</p><p>环境：Linux+Nginx</p><p>WHMCS系统配置SSL证书，安装都正常，并且https也可以访问。然后做了301跳转，将原来的域名http转到https上，均正常。 </p><p>之后到后台设置网站连接为<a href="https://xxx.com，网站直接挂掉。提示错误。" target="_blank" rel="noopener">https://xxx.com，网站直接挂掉。提示错误。</a></p><p>Chrome提示： ERR_TOO_MANY_REDIRECTS</p><p>IE提示错误: INET_E_REDIRECT_FAILED</p><p>问题解决：</p><p>多方排查，包括重装whmcs，均无法解决。联系官方也无法给出更多的答案。唯独可以通过https访问网站，但是无法在后台设置连接为https。这样带来的问题是https可以访问，但是用户无法注册和验证Email连接等操作。</p><p>最终解决方案为：在configuration.php的文件中，加入一条： </p><pre><code>$_SERVER[&apos;HTTPS&apos;] = &apos;On&apos;;</code></pre><p>然后重启Nginx。在后台设置https后，问题得到解决。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>阿里云开启安全组并在服务器内开启防火墙还是访问不了的解决方案</title>
      <link href="/2019/10/02/solution-for-aliyun-to-open-security-group-and-firewall-in-server.html"/>
      <url>/2019/10/02/solution-for-aliyun-to-open-security-group-and-firewall-in-server.html</url>
      
        <content type="html"><![CDATA[<p>将软件的监听地址改为0.0.0.0</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis开启unix socket</title>
      <link href="/2019/10/02/redis-opens-unix-socket.html"/>
      <url>/2019/10/02/redis-opens-unix-socket.html</url>
      
        <content type="html"><![CDATA[<p>unixsocket /tmp/redis.sock<br>unixsocketperm 777</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker从容器里面拷文件到宿主机或从宿主机拷文件到docker容器里面</title>
      <link href="/2019/10/02/docker-copies-files-from-container-to-host-or-from-host-to-docker-container.html"/>
      <url>/2019/10/02/docker-copies-files-from-container-to-host-or-from-host-to-docker-container.html</url>
      
        <content type="html"><![CDATA[<p>1、从容器里面拷文件到宿主机？</p><p>假设容器名为testtomcat,要从容器里面拷贝的文件路为：/usr/local/tomcat/webapps/test/js/test.js,  现在要将test.js从容器里面拷到宿主机的/opt路径下面，那么命令应该怎么写呢？</p><pre><code>docker cp testtomcat：/usr/local/tomcat/webapps/test/js/test.js /opt</code></pre><p>2、从宿主机拷文件到容器里面</p><p>假设容器名为testtomcat,现在要将宿主机/opt/test.js文件拷贝到容器里面的/usr/local/tomcat/webapps/test/js路径下面，那么命令该怎么写呢？   </p><pre><code>docker cp /opt/test.js testtomcat：/usr/local/tomcat/webapps/test/js</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决申请 HSTS 时 Warning： Unnecessary HSTS header over HTTP 的方法</title>
      <link href="/2019/10/02/warning-unnecessary-hsts-header-over-http-method-for-hsts-application.html"/>
      <url>/2019/10/02/warning-unnecessary-hsts-header-over-http-method-for-hsts-application.html</url>
      
        <content type="html"><![CDATA[<p><strong>Nginx</strong></p><p>修改配置文件为如下所示：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">map $scheme $hsts_header &#123;</span><br><span class="line"></span><br><span class="line">    https   &quot;max-age&#x3D;31536000; includeSubDomains; preload&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">......(others)</span><br><span class="line"></span><br><span class="line">  add_header Strict-Transport-Security $hsts_header;</span><br><span class="line"></span><br><span class="line">......(others)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后重启Nginx。</p><p><strong>Apache</strong></p><p>修改配置文件为如下所示：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line"></span><br><span class="line">......(others)</span><br><span class="line"></span><br><span class="line">    Header always set Strict-Transport-Security &quot;max-age&#x3D;31536000; includeSubDomains; preload&quot;</span><br><span class="line"></span><br><span class="line">......(others)</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>修改后重启Apache。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 443 </tag>
            
            <tag> HSTS </tag>
            
            <tag> HTTPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建drawio</title>
      <link href="/2019/10/02/build-drawio.html"/>
      <url>/2019/10/02/build-drawio.html</url>
      
        <content type="html"><![CDATA[<p>搭建drawio<br>draw.io的github地址在<a href="https://github.com/jgraph/drawio，可以在release下载正式版本，我们此次下载的是源码版本。" target="_blank" rel="noopener">https://github.com/jgraph/drawio，可以在release下载正式版本，我们此次下载的是源码版本。</a></p><pre><code>git clone https://github.com/jgraph/drawio.git</code></pre><p>编译的话，需要安装ant等环境。</p><pre><code>yum install -y ant java-1.8.0-openjdk-devel</code></pre><p>接下来，就是需要编译了。</p><pre><code>cd etc/build &amp;&amp; ant</code></pre><p>如果需要生成war包的话，则如下编译</p><pre><code>cd etc/build &amp;&amp; ant war</code></pre><p>编译成功后，war包会生成在drawio/build/draw.war，如果你有tomcat或java的服务环境，可以使用war包部署。整体来说，还是不用war的方便一些，只要有Apache或Nginx就可以搞定了。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安装LDAP-php扩展</title>
      <link href="/2019/10/02/install-ldapphp-extensions.html"/>
      <url>/2019/10/02/install-ldapphp-extensions.html</url>
      
        <content type="html"><![CDATA[<p>LDAP<br>−−with-ldap=DIR         Include LDAP support<br> −−with-ldap-sasl=DIR    LDAP: Include Cyrus SASL support<br> Debian/Ubuntu 需安装 libldap-2.4-2, libldap2-dev 依赖包。<br> Redhat/CentOS 需安装 openldap, openldap-devel 依赖包。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NextCloud上传失败或删除失败解决方法</title>
      <link href="/2019/09/21/nextcloud-upload-failure-or-delete-failure-solution.html"/>
      <url>/2019/09/21/nextcloud-upload-failure-or-delete-failure-solution.html</url>
      
        <content type="html"><![CDATA[<pre><code>#!/bin/bashphp /你的网站目录/occ maintenance:mode --onmysql -u数据库账号 -p你的数据库密码 -e &quot;use 数据库名称;DELETE FROM oc_file_locks WHERE 1;exit&quot;php /你的网站目录/occ maintenance:mode --off</code></pre><p>将以上保存为.sh脚本<br>在你的网站目录下面新建.php文件</p><pre><code>&lt;?php        passthru(&quot;bash 上面你的脚本名称.sh&quot;);?&gt;</code></pre><p>那么访问这个php文件就会运行之前的那个脚本<br>会比每次在SSH中输入会简便很多运行程序的目录是你的网站目录，如需修改请使用绝对路径</p><p>注意：在php.ini中删除禁用函数passthru()</p><hr><p>在NextCloud中添加应用–那个自定义链接的<br><img src= "/img/loading.gif" data-src="/2019/09/21/nextcloud-upload-failure-or-delete-failure-solution/Nextcloud-show.png" width="100%" alt="Nextcloud-show"></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Annie视频下载感觉很好</title>
      <link href="/2019/09/21/annie-video-download-feels-good.html"/>
      <url>/2019/09/21/annie-video-download-feels-good.html</url>
      
        <content type="html"><![CDATA[<img src= "/img/loading.gif" data-src="/2019/09/21/annie-video-download-feels-good/annie-download.png" width="100%" alt="annie-download"><img src= "/img/loading.gif" data-src="/2019/09/21/annie-video-download-feels-good/annie-c.png" width="100%" alt="annie-c"><img src= "/img/loading.gif" data-src="/2019/09/21/annie-video-download-feels-good/annie.png" width="100%" alt="annie">https://github.com/iawia002/annie]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>运行Python-bilibili脚本视频出现的问题</title>
      <link href="/2019/09/21/problems-with-running-pythonbilibilibili-script-videos.html"/>
      <url>/2019/09/21/problems-with-running-pythonbilibilibili-script-videos.html</url>
      
        <content type="html"><![CDATA[<p>[post cid=”62” /]<br>Imageio: ‘ffmpeg-linux64-v3.3.1’ was not found on your computer; downloading it now.</p><p>在使用Python的moviepy模块的时候，报出以下错误：</p><pre><code>Imageio: &apos;ffmpeg.linux64&apos; was not found on your computer; downloading it now.Error while fetching file: &lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:726)&gt;.Error while fetching file: &lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:726)&gt;.Error while fetching file: &lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:726)&gt;.Error while fetching file: &lt;urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:726)&gt;.Traceback (most recent call last):  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;  File &quot;/home/me/anaconda2/lib/python3.7/site-packages/imageio/plugins/ffmpeg.py&quot;, line 73, in download    force_download=force_download)  File &quot;/home/me/anaconda2/lib/python3.7/site-packages/imageio/core/fetching.py&quot;, line 127, in get_remote_file    _fetch_file(url, filename)  File &quot;/home/me/anaconda2/lib/python3.7/site-packages/imageio/core/fetching.py&quot;, line 183, in _fetch_file    os.path.basename(file_name))IOError: Unable to download &apos;ffmpeg.linux64&apos;. Perhaps there is a no internet connection? If there is, please report this problem.</code></pre><p>错误原因：<br>imageio模块下载ffmpeg的时候，无法连接网络。<br>下载的路径可以参看:<br>./site-packages/imageio/core/fetching.py:63<br>./site-packages/imageio/plugins/ffmpeg.py:70</p><pre><code>wget https://github.com/imageio/imageio-binaries/raw/master/ffmpeg/ffmpeg.linux64</code></pre><pre><code>mv ffmpeg.linux64 ~/.imageio/ffmpeg/</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用python脚本下载bilibili视频</title>
      <link href="/2019/09/21/download-bilibilibili-videos-using-python-scripts.html"/>
      <url>/2019/09/21/download-bilibilibili-videos-using-python-scripts.html</url>
      
        <content type="html"><![CDATA[<p>Github地址：<a href="https://github.com/Henryhaohao/Bilibili_video_download" target="_blank" rel="noopener">https://github.com/Henryhaohao/Bilibili_video_download</a><br>这个下载很耗服务器资源小CPU|RAM就别用了用下面这个<br>[post cid=”65” cover=”https://<a href="http://www.xyz.blue\/usr\/uploads\/2019\/09\/3014905791.png&quot;/]">www.xyz.blue\/usr\/uploads\/2019\/09\/3014905791.png&quot;/]</a><br><img src= "/img/loading.gif" data-src="/2019/09/21/download-bilibilibili-videos-using-python-scripts/Python-BILIBILI.png" width="100%" alt="Python-BILIBILI"></p><pre><code>#下载静态文件wget https://github.com/q3aql/aria2-static-builds/releases/download/v1.34.0/aria2-1.34.0-linux-gnu-64bit-build1.tar.bz2#解压文件并进入文件夹tar jxvf aria2-*.tar.bz2 &amp;&amp; rm -rf aria2-*.tar.bz2 &amp;&amp; cd aria2-*#开始安装make install</code></pre><p>如果安装的时候提示-bash: make: command not found错误，需要先运行命令：<br>Debian/Ubuntu系统：apt install make -y<br>CentOS系统：yum install make -y</p><p>安装Python3</p><pre><code>apt-get install python3-pip -y</code></pre><p>Centos百度<br>安装ffmpeg</p><pre><code>apt-get install ffmpeg</code></pre><p>Centos百度</p><pre><code>git clone https://github.com/Henryhaohao/Bilibili_video_download.git</code></pre><p>进入安装</p><pre><code>pip3 install -r requirements.txt</code></pre><p>按照提示输入即可</p><hr><p>问题<br>[post cid=”63” /]</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>apache 反向代理的时候，通过域名访问是，出现跳转到ip或者无权访问的情况</title>
      <link href="/2019/09/19/when-apache-reverse-proxy-is-accessed-through-domain-name-there-is-a-jump-to-ip-or-no-access.html"/>
      <url>/2019/09/19/when-apache-reverse-proxy-is-accessed-through-domain-name-there-is-a-jump-to-ip-or-no-access.html</url>
      
        <content type="html"><![CDATA[<p>在配置反向代理的时候加上一行：</p><p>ProxyPreserveHost On</p><p>例如：<br>ProxyPass / <a href="http://202.112.0.1/" target="_blank" rel="noopener">http://202.112.0.1/</a><br>ProxyPassReverse / <a href="http://202.112.0.1/" target="_blank" rel="noopener">http://202.112.0.1/</a><br>ProxyPreserveHost On #在这里加上就行</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>为NextCloud中的OnlyOffice配置中文访问</title>
      <link href="/2019/09/18/configure-chinese-access-for-onlyoffice-in-nextcloud.html"/>
      <url>/2019/09/18/configure-chinese-access-for-onlyoffice-in-nextcloud.html</url>
      
        <content type="html"><![CDATA[<p>感觉他那个自带的自动识别网站语言有问题<br>所以进行了修改<br>进入<br><img src= "/img/loading.gif" data-src="/2019/09/18/configure-chinese-access-for-onlyoffice-in-nextcloud/OnlyOffice-1.png" width="100%" alt="OnlyOffice-1"><br>修改两项内容<br>下面这个是指新建文档时默认进入编辑页面的中英文<br><img src= "/img/loading.gif" data-src="/2019/09/18/configure-chinese-access-for-onlyoffice-in-nextcloud/OnlyOffice-2.png" width="100%" alt="OnlyOffice-2"><br>下面这个是指编辑文档时默认进入编辑页面的中英文<br><img src= "/img/loading.gif" data-src="/2019/09/18/configure-chinese-access-for-onlyoffice-in-nextcloud/OnlyOffice-3.png" width="100%" alt="OnlyOffice-3"><br>代码跟之前的一样<br>[post cid=”37” /]</p><pre><code>if(!empty($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;])){    $lang = substr($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;],0,4);    if(preg_match(&quot;/zh-c/i&quot;,$lang)){        $langConfig = &quot;zh-CN&quot;;    }    elseif(preg_match(&quot;/en/i&quot;,$lang)){        $langConfig = &quot;en&quot;;    }    else{        $langConfig = &quot;en&quot;;    }}else{    $langConfig = &apos;en&apos;;}$lang = $langConfig;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Typecho 文章链接转外链</title>
      <link href="/2019/08/30/typecho-articles-link-external-chain.html"/>
      <url>/2019/08/30/typecho-articles-link-external-chain.html</url>
      
        <content type="html"><![CDATA[<p>用JS</p><pre><code>&lt;script&gt;window.location.href = &quot;https://www.baidu.com&quot;&lt;/script&gt;</code></pre><p>其他的方法见<br><a href="https://paugram.com/coding/typecho-article-links-external.html" target="_blank" rel="noopener">https://paugram.com/coding/typecho-article-links-external.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Typecho在使用CDN的情况下获取真实IP</title>
      <link href="/2019/08/30/typecho-gets-real-ip-using-cdn.html"/>
      <url>/2019/08/30/typecho-gets-real-ip-using-cdn.html</url>
      
        <content type="html"><![CDATA[<p>当我的文章或页面被评论时，网站后台会看到他们发评论的IP地址<br><img src= "/img/loading.gif" data-src="/2019/08/30/typecho-gets-real-ip-using-cdn/CDN-con.png" width="100%" alt="CDN-con"><br><img src= "/img/loading.gif" data-src="/2019/08/30/typecho-gets-real-ip-using-cdn/CDN-IP.png" width="100%" alt="CDN-IP"><br>那么如何在使用CDN的情况下获取用户的真实IP呢？<br>其实很简单<br>在<code>config.inc.php</code>末尾添加即可</p><pre><code>if(isset($_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;])){    $list = explode(&apos;,&apos;,$_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]);    $_SERVER[&apos;REMOTE_ADDR&apos;] = $list[0];}</code></pre><img src= "/img/loading.gif" data-src="/2019/08/30/typecho-gets-real-ip-using-cdn/CDN-config.png" width="100%" alt="CDN-config"><hr><p>效果<br><img src= "/img/loading.gif" data-src="/2019/08/30/typecho-gets-real-ip-using-cdn/CDN-new-con.png" width="100%" alt="CDN-new-con"><br><img src= "/img/loading.gif" data-src="/2019/08/30/typecho-gets-real-ip-using-cdn/CDN-new-IP.png" width="100%" alt="CDN-new-IP"></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>让你的网站文字“抖”起来</title>
      <link href="/2019/08/30/let-your-website-text-shake-up.html"/>
      <url>/2019/08/30/let-your-website-text-shake-up.html</url>
      
        <content type="html"><![CDATA[<img src= "/img/loading.gif" data-src="/2019/08/30/let-your-website-text-shake-up/shake.png" width="100%" alt="抖"><style>@keyframes shake-it{0%{text-shadow:0 0 rgba(0,255,255,.5),0 0 rgba(255,0,0,.5)}25%{text-shadow:-2px 0 rgba(0,255,255,.5),2px 0 rgba(255,0,0,.5)}50%{text-shadow:-5px 0 rgba(0,255,255,.5),3px 0 rgba(255,0,0,.5)}100%{text-shadow:3px 0 rgba(0,255,255,.5),5px 0 rgba(255,0,0,.5)}}</style><p>点击以查看效果</p><p><button class="btn small" id="shake-it">点我！</button></p><script>var text_obj=[document.body,document.getElementById("shake-it")];    text_obj[1].onclick=function(){    text_obj[0].style="animation: shake-it .5s reverse infinite cubic-bezier(0.68, -0.55, 0.27, 1.55);";    setTimeout(function(){        text_obj[0].style=""        },13000)    };</script><p>直接在文章编辑器里面输入即可</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;style&gt;@keyframes shake-it&#123;0%&#123;text-shadow:0 0 rgba(0,255,255,.5),0 0 rgba(255,0,0,.5)&#125;25%&#123;text-shadow:-2px 0 rgba(0,255,255,.5),2px 0 rgba(255,0,0,.5)&#125;50%&#123;text-shadow:-5px 0 rgba(0,255,255,.5),3px 0 rgba(255,0,0,.5)&#125;100%&#123;text-shadow:3px 0 rgba(0,255,255,.5),5px 0 rgba(255,0,0,.5)&#125;&#125;&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;button class&#x3D;&quot;btn small&quot; id&#x3D;&quot;shake-it&quot;&gt;抖！&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;var text_obj&#x3D;[document.body,document.getElementById(&quot;shake-it&quot;)];</span><br><span class="line"></span><br><span class="line">    text_obj[1].onclick&#x3D;function()&#123;</span><br><span class="line"></span><br><span class="line">text_obj[0].style&#x3D;&quot;animation: shake-it .5s reverse infinite cubic-bezier(0.68, -0.55, 0.27, 1.55);&quot;;</span><br><span class="line"></span><br><span class="line">setTimeout(function()&#123;</span><br><span class="line"></span><br><span class="line">text_obj[0].style&#x3D;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&#125;,13000)</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>如果需要在抖的时候添加音乐</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;style&gt;@keyframes shake-it&#123;0%&#123;text-shadow:0 0 rgba(0,255,255,.5),0 0 rgba(255,0,0,.5)&#125;25%&#123;text-shadow:-2px 0 rgba(0,255,255,.5),2px 0 rgba(255,0,0,.5)&#125;50%&#123;text-shadow:-5px 0 rgba(0,255,255,.5),3px 0 rgba(255,0,0,.5)&#125;100%&#123;text-shadow:3px 0 rgba(0,255,255,.5),5px 0 rgba(255,0,0,.5)&#125;&#125;&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;@keyframes shake-it&#123;0%&#123;text-shadow:0 0 rgba(0,255,255,.5),0 0 rgba(255,0,0,.5)&#125;25%&#123;text-shadow:-2px 0 rgba(0,255,255,.5),2px 0 rgba(255,0,0,.5)&#125;50%&#123;text-shadow:-5px 0 rgba(0,255,255,.5),3px 0 rgba(255,0,0,.5)&#125;100%&#123;text-shadow:3px 0 rgba(0,255,255,.5),5px 0 rgba(255,0,0,.5)&#125;&#125;&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;var text_obj&#x3D;[document.body,document.getElementById(&quot;shake-it&quot;)];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">text_obj[1].onclick&#x3D;function()&#123;</span><br><span class="line"></span><br><span class="line">text_obj[0].style&#x3D;&quot;animation: shake-it .5s reverse infinite cubic-bezier(0.68, -0.55, 0.27, 1.55);&quot;;</span><br><span class="line"></span><br><span class="line">setTimeout(function()&#123;</span><br><span class="line"></span><br><span class="line">text_obj[0].style&#x3D;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&#125;,13000)</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;var text_obj&#x3D;[document.body,document.getElementById(&quot;shake-it&quot;)];</span><br><span class="line"></span><br><span class="line">text_obj[1].onclick&#x3D;function()&#123;</span><br><span class="line"></span><br><span class="line">text_obj[0].style&#x3D;&quot;animation: shake-it .5s reverse infinite cubic-bezier(0.68, -0.55, 0.27, 1.55);&quot;;</span><br><span class="line"></span><br><span class="line">setTimeout(function()&#123;</span><br><span class="line"></span><br><span class="line">text_obj[0].style&#x3D;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&#125;,13000)</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>根据<a href="https://paugram.com/coding/shake-your-text.html修改" target="_blank" rel="noopener">https://paugram.com/coding/shake-your-text.html修改</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho配置多语言</title>
      <link href="/2019/08/21/typecho-configuration-multilingualism.html"/>
      <url>/2019/08/21/typecho-configuration-multilingualism.html</url>
      
        <content type="html"><![CDATA[<p>[post cid=”37” cover=”https://<a href="http://www.xyz.blue\/usr\/uploads\/2019\/08\/1378905739.png&quot;/]">www.xyz.blue\/usr\/uploads\/2019\/08\/1378905739.png&quot;/]</a><br>更新一下，上次的那个方法太复杂。<br>增加en站点，就是重新搭建一个博客，数据库还是同一个不过数据库前缀可以修改<br>如果分开数据库的话对Sqlite不友好，Mysql随意<br>编辑config.inc.php<br><strong>禁止直接复制，具体内容需要修改为你自己的数据库</strong><br>Mysql的话对照你原来的配置修改，大体框架不变</p><pre><code>/** 定义数据库参数 */#$db = new Typecho_Db(&apos;Pdo_SQLite&apos;, &apos;&apos;);#$db-&gt;addServer(array (#  &apos;file&apos; =&gt; &apos;/home/wwwroot/www.xyz.blue/usr/.db&apos;,#), Typecho_Db::READ | Typecho_Db::WRITE);#Typecho_Db::set($db);if(!empty($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;])){  $lang = substr($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;],0,4);  if(preg_match(&quot;/zh-c/i&quot;,$lang)){      $db = new Typecho_Db(&apos;Pdo_SQLite&apos;, &apos;&apos;);      $db-&gt;addServer(array (      &apos;file&apos; =&gt; &apos;/home/wwwroot/www.xyz.blue/usr/.db&apos;,      ), Typecho_Db::READ | Typecho_Db::WRITE);      Typecho_Db::set($db);  }  elseif(preg_match(&quot;/en/i&quot;,$lang)){      $db = new Typecho_Db(&apos;Pdo_SQLite&apos;, &apos;en_&apos;);      $db-&gt;addServer(array (      &apos;file&apos; =&gt; &apos;/home/wwwroot/www.xyz.blue/usr/.db&apos;,      ), Typecho_Db::READ | Typecho_Db::WRITE);      Typecho_Db::set($db);  }  else{      $db = new Typecho_Db(&apos;Pdo_SQLite&apos;, &apos;en_&apos;);      $db-&gt;addServer(array (      &apos;file&apos; =&gt; &apos;/home/wwwroot/www.xyz.blue/usr/.db&apos;,      ), Typecho_Db::READ | Typecho_Db::WRITE);      Typecho_Db::set($db);  }}else{  $db = new Typecho_Db(&apos;Pdo_SQLite&apos;, &apos;en_&apos;);      $db-&gt;addServer(array (      &apos;file&apos; =&gt; &apos;/home/wwwroot/www.xyz.blue/usr/.db&apos;,      ), Typecho_Db::READ | Typecho_Db::WRITE);      Typecho_Db::set($db);}</code></pre><p>上面这个就是以你访客的浏览器的第一语言为参考来调用不同数据库来实现多语言</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Handsome主题遇到的问题</title>
      <link href="/2019/08/21/problems-encountered-with-using-handsome-topics.html"/>
      <url>/2019/08/21/problems-encountered-with-using-handsome-topics.html</url>
      
        <content type="html"><![CDATA[<img src= "/img/loading.gif" data-src="/2019/08/21/problems-encountered-with-using-handsome-topics/wrong.png" width="100%" alt="wrong">----------<p>主题作者：<br>第一个错误 不用管  你要是想消除  就在外观设置  速度优化  选择公共cdn 不要选择百度<br>第二个是全剧播放器  暂时不要用QQ音乐  换个平台试试</p><hr><p>确定问题：使用了自定义歌单没配置内容或者使用了云解析歌单<br>解决方法：如果使用了自定义歌单，那么就按照说明添加，如果云解析歌单，就暂时把歌单链接删掉。或者直接关闭音乐解析</p><hr><p>解决之后<br><img src= "/img/loading.gif" data-src="/2019/08/21/problems-encountered-with-using-handsome-topics/right.png" width="100%" alt="right"></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何使用typecho输出有颜色的字</title>
      <link href="/2019/08/21/how-to-use-typecho-to-output-colored-words.html"/>
      <url>/2019/08/21/how-to-use-typecho-to-output-colored-words.html</url>
      
        <content type="html"><![CDATA[<p>typecho输出html教程<br>只需要用!!!包裹html即可实现！<br>用法</p><pre><code>!!!&lt;font color=&quot;red&quot;&gt;这里是红色&lt;/font&gt;!!!</code></pre><p>color颜色代码大全：<br>!!!<br>1 <font color="FFFFFF">白颜色</font> #FFFFFF <br><br>2 <font color="#FF0000">红颜色</font> #FF0000 <br><br>3 <font color="#00FF00">绿颜色</font> #00FF00 <br><br>4 <font color="#0000FF">蓝颜色</font> #0000FF <br><br>5 <font color="#FF00FF">牡丹红</font> #FF00FF <br><br>6 <font color="#00FFFF">青颜色</font> #00FFFF <br><br>7 <font color="#FFFF00">黄颜色</font> #FFFF00 <br><br>8 <font color="#000000">黑颜色</font> #000000 <br><br>9 <font color="#70DB93">海颜蓝</font> #70DB93 <br><br>10 <font color="#5C3317">巧克力色</font> #5C3317 <br></p><p>11 蓝紫色 #9F5F9F<br>12 黄铜色 #B5A642<br>13 亮金色 #D9D919<br>14 棕色 #A67D3D<br>15 青铜色 #8C7853<br>16 2号青铜色 #A67D3D<br>17 士官服蓝色 #5F9F9F<br>18 冷铜色 #D98719<br>19 铜色 #B87333<br>20 珊瑚红 #FF7F00</p><p>21 紫蓝色 #42426F<br>22 深棕 #5C4033<br>23 深绿 #2F4F2F<br>24 深铜绿色 #4A766E<br>25 深橄榄绿 #4F4F2F<br>26 深兰花色 #9932CD<br>27 深紫色 #871F78<br>28 深石板蓝 #6B238E<br>29 深铅灰色 #2F4F4F<br>30 深棕褐色 #97694F</p><p>32 深绿松石色 #7093DB<br>33 暗木色 #855E42<br>34 淡灰色 #545454<br>35 土灰玫瑰红色#856363<br>36 长石色 #D19275<br>37 火砖色 #8E2323<br>38 森林绿 #238E23<br>39 金色 #CD7F32<br>40 鲜黄色 #DBDB70</p><p>41 灰色 #C0C0C0<br>42 铜绿色 #527F76<br>43 青黄色 #93DB70<br>44 猎人绿 #215E21<br>45 印度红 #4E2F2F<br>46 土黄色 #9F9F5F<br>47 浅蓝色 #C0D9D9<br>48 浅灰色 #A8A8A8<br>49 浅钢蓝色 #8F8FBD</p><p>59 浅木色 #E9C2A6<br>60 石灰绿色 #32CD32<br>61 桔黄色 #E47833<br>62 褐红色 #8E236B<br>63 中海蓝色 #32CD99<br>64 中蓝色 #3232CD<br>65 中森林绿 #6B8E23<br>66 中鲜黄色 #EAEAAE<br>67 中兰花色 #9370DB<br>68 中海绿色 #426F42<br>69 中石板蓝色 #7F00FF<br>70 中春绿色 #7FFF00</p><p>71 中绿松石色 #70DBDB<br>72 中紫红色 #DB7093<br>73 中木色 #A68064<br>74 深藏青色 #2F2F4F<br>75 海军蓝 #23238E<br>76 霓虹篮 #4D4DFF<br>77 霓虹粉红 #FF6EC7<br>78 新深藏青色 #00009C<br>79 新棕褐色 #EBC79E<br>80 暗金黄色 #CFB53B</p><p>81 橙色 #FF7F00<br>82 橙红色 #FF2400<br>83 淡紫色 #DB70DB<br>84 浅绿色 #8FBC8F<br>85 粉红色 #BC8F8F<br>86 李子色 #EAADEA<br>87 石英色 #D9D9F3<br>88 艳蓝色 #5959AB<br>89 鲑鱼色 #6F4242<br>90 猩红色 #BC1717</p><p>91 海绿色 #238E68<br>92 半甜巧克力色#6B4226<br>93 赭色 #8E6B23<br>94 银色 #E6E8FA<br>95 天蓝 #3299CC<br>96 石板蓝 #007FFF<br>97 艳粉红色 #FF1CAE<br>98 春绿色 #00FF7F<br>99 钢蓝色 #236B8E<br>100 亮天蓝色 #38B0DE</p><p>101 棕褐色 #DB9370<br>102 紫红色 #D8BFD8<br>103 石板蓝色 #ADEAEA<br>104 浓深棕色 #5C4033<br>105 淡浅灰色 #CDCDCD<br>106 紫罗兰色 #4F2F4F<br>107 紫罗兰红色 #CC3299<br>108 麦黄色 #D8D8BF<br>109 黄绿色 #99CC<br>!!!</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于Windows下部分代理提示1080端口被占用问题</title>
      <link href="/2019/08/20/about-the-occupancy-of-port-1080-under-windows-agent-tips.html"/>
      <url>/2019/08/20/about-the-occupancy-of-port-1080-under-windows-agent-tips.html</url>
      
        <content type="html"><![CDATA[<p>拿比较热门的￥￥R举例<br>会提示：<img src= "/img/loading.gif" data-src="/2019/08/20/about-the-occupancy-of-port-1080-under-windows-agent-tips/ssr1080.png" width="100%" alt="ssr1080"><br><strong><em>一</em></strong></p><pre><code>netstat -aon|findstr &quot;1080&quot;</code></pre><p>查看端口是否被占用</p><p><strong><em>二</em></strong><br>由于更新系统导致安装了某种安全更新<a href="https://docs.microsoft.com/en-us/windows/win32/winsock/windows-sockets-error-codes-2" target="_blank" rel="noopener">Windows Sockets Error Codes</a><br>运行命令</p><pre><code>netsh interface ipv4 show excludedportrange protocol=tcp</code></pre><p>下面是我的电脑<br>![ssrport.png][3]<br>提示1031-1130被占用，那么方法就是使用里面未提及的端口，或者删除更新。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>typecho文章界面设置多国语言-Handsome主题</title>
      <link href="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages.html"/>
      <url>/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages.html</url>
      
        <content type="html"><![CDATA[<p><strong>手动切换英文需要在浏览器语言中把英文挪到最前</strong><br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/changlang.png" width="100%" alt="changlang"></p><hr><p>此文章内容自动生成<br>主要适配handsome，其他主题稍微修改</p><hr><p>[collapse status=”false” title=”0.0.1”]<br>无<br>[/collapse]<br>[collapse status=”false” title=”0.0.2”]<br>替换原有<code>@</code>为不易输入的字符<code>&amp;</code><br>为避免输入麻烦将原有&amp;zh_CN&amp;改为&amp;CN&amp;<br>[/collapse]<br>[collapse status=”false” title=”0.0.3”]<br>使首页标题，浏览器标题支持多语言<br>[/collapse]<br>[collapse status=”false” title=”0.0.4”]<br>更新代码</p><pre><code>if(!empty($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;])){                    $lang = substr($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;],0,4);                    if(preg_match(&quot;/zh-c/i&quot;,$lang)){                        $langConfig = &quot;CN&quot;;                    }                    elseif(preg_match(&quot;/en/i&quot;,$lang)){                        $langConfig = &quot;US&quot;;                    }                    else{                        $langConfig = &quot;US&quot;;                    }                }                else{                    $langConfig = &apos;US&apos;;                }</code></pre><p><strong>0.0.4修改只取前4位，这样只判断最优先的语言。如果取前5位，可能出现en,zh的情况，影响判断。</strong><br>[/collapse]<br>[collapse status=”false” title=”0.0.5”]<br>使侧栏热门文章、随机文章支持多语言<br>前<img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/change-old.png" width="100%" alt="change-old"><br>后<img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/change-new.png" width="100%" alt="change-new"><br><strong>方法</strong><br>在/libs/Content.php中添加<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/Content.png" width="100%" alt="Content"><br>随机文章同理<br>[/collapse]<br>[collapse status=”false” title=”0.0.6”]<br>使文章内引用文章支持多语言<br><strong>方法</strong><br>在/libs/Content.php中添加<br>更改quoteOtherPostCallback函数<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/Content-006.png" width="100%" alt="Content-006"><br>[/collapse]<br>[collapse status=”false” title=”0.0.7”]<br>使归档支持多语言<br><strong>方法</strong><br>在/files.php中更改<br>大约55行的位置<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/files-007.png" width="100%" alt="files-007"><br>效果<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/arv-007.png" width="100%" alt="arv-007"><br>[/collapse]</p><hr><p><strong>0.0.3教程开始</strong><br>在主题的functions.php末尾增加两段函数</p><pre><code>function getLang($content, $lang){    preg_match_all(&apos;%&amp;&apos;.$lang.&apos;.*?&amp;(.*?)&amp;/&apos;.$lang.&apos;&amp;%si&apos;,$content,$match);    return(str_replace(&quot;&amp;/$lang&amp;&quot; , &quot;&quot;,str_replace(&quot;&amp;$lang&amp;&quot; , &quot;&quot;,str_replace(&quot;&amp;$lang&amp;&lt;br&gt;&quot; ,&quot;&quot; ,$match[0][0]))));}</code></pre><p>以上函数可自定义修改<br>如<code>$pa = &#39;%@&#39;.$lang.&#39;.*?@(.*?)@/&#39;.$lang.&#39;@%si&#39;;</code>中的<code>@(.*?)@</code>。<br><code>(.*?)</code>匹配任意长度的任意字符非贪婪模式遇到<code>/</code>字符停止</p><pre><code>function _lan($content){    if(!empty($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;])){        $lang = $_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;];        if(preg_match(&quot;/zh-cn/i&quot;,$lang)){ #此处见0.0.4更新            $langConfig = &quot;CN&quot;;        }        else{            $langConfig = &quot;US&quot;;#此处见0.0.4更新        }    }    else{        $langConfig = &apos;US&apos;;    }    print(getLang($content, $langConfig));}</code></pre><p>在post.php中找到</p><pre><code>&lt;?php echo Content::postContent($this,$this-&gt;user-&gt;hasLogin());?&gt;</code></pre><p>改为</p><pre><code>&lt;?php echo _lan(Content::postContent($this,$this-&gt;user-&gt;hasLogin()));?&gt;</code></pre><p>在libs目录下找到Content.php<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/Content-003tech.png" width="100%" alt="Content-003tech"><br>这个是为了更改摘要显示<br>更改为以下</p><pre><code>if(!empty($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;])){    $lang = $_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;];        if(preg_match(&quot;/zh-cn/i&quot;,$lang)){#此处见0.0.4更新            $langConfig = &quot;CN&quot;;            }        else{            $langConfig = &quot;US&quot;;#此处见0.0.4更新            }    }    else{        $langConfig = &apos;US&apos;;        }        $content = getLang($content, $langConfig);</code></pre><p>由于<code>$langConfig</code>为局部变量，所以就把程序复制了一份</p><p><strong><em>标题设置多国语言</em></strong><br>在主题functions.php中添加两段函数</p><pre><code>function getLanPi($content, $lang){    preg_match_all($lang,$content,$match);    if($lang == &quot;CN&quot;){        preg_match_all (&apos;/`.*`/&apos;, $content,$match);        return(str_replace(&quot;`&quot; , &quot;&quot;,$match[0][0]));    }    else{        preg_match_all (&apos;/~.*~/&apos;, $content,$match);        return(str_replace(&quot;~&quot; , &quot;&quot;,$match[0][0]));    }}</code></pre><pre><code>function _lanPi($content){    if(!empty($_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;])){        $lang = $_SERVER[&apos;HTTP_ACCEPT_LANGUAGE&apos;];        if(preg_match(&quot;/zh-cn/i&quot;,$lang)){#此处见0.0.4更新            $langConfig = &quot;CN&quot;;            #$langConfig = &quot;en_US&quot;;        }        else{            $langConfig = &quot;US&quot;;#此处见0.0.4更新        }    }    else{        $langConfig = &apos;US&apos;;    }    return(getLanPi($content, $langConfig));}</code></pre><p>中文用`标题`,英文用<del>标题</del>隔开<br>然后<br>在/var/Widget/Archive.php中添加如图<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/arv-003tech.png" width="100%" alt="arv-003tech"><br>以修改archiveTitle()<br>然后<br>在主题pages.php中修改文章页面标题<br>如图<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/pages-003tech.png" width="100%" alt="pages-003tech"><br>然后<br>在主题libs/Content.php修改echoPostList()来修改首页标题<br>如图<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/Content-echo-003tech.png" width="100%" alt="Content-echo-003tech"></p><p>实现方法</p><pre><code>&amp;CN&amp;你好，世界！&amp;/CN&amp;&amp;US&amp;Hello,World!&amp;/US&amp;标题\`中文\`~英文~</code></pre><p>后台界面，（如果看不下去，以后可能会修改）。<br><img src= "/img/loading.gif" data-src="/2019/08/19/typeecho-articles-interface-setting-up-multilingual-languages/change-lang-admin-003.png" width="100%" alt="change-lang-admin-003"></p><hr><p><strong>然后问题就是针对AMP/MIP的插件还需要修改</strong><br><strong>Handsome阅读模式出现全部内容显示，还需修改</strong><br><del>Handsome引用文章页面出现全部内容显示，还需修改</del> 已解决见0.0.6<br><strong>以后会配置typecho后台文章界面显示单语言</strong><br><del>侧栏热门文章出现全标题，还需修改</del> 已解决 见0.0.5<br><strong>以后会添加其他功能如可以手动切换语言等</strong><br><del>文章归档页面出现全标题，还需修改</del> 已解决 见0.0.7</p><hr><p>!!!<br>[scode type=”blue”]<br>版权声明：本文为原创文章，版权归 KYLIN 所有，转载请注明出处！<br><br>本文链接：<font color="#0000FF"><a href="https://www.xyz.blue/archives/typeecho-articles-interface-setting-up-multilingual-languages.html">https://www.xyz.blue/archives/typeecho-articles-interface-setting-up-multilingual-languages.html</a></font><br><br>如教程需要更新，或者相关链接出现404，可以在文章下面评论留言。<br>[/scode]<br>!!!</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nftables一些常用配置文件</title>
      <link href="/2019/08/18/some-common-configuration-files-for-nftables.html"/>
      <url>/2019/08/18/some-common-configuration-files-for-nftables.html</url>
      
        <content type="html"><![CDATA[<p>[post cid=”23” cover=”https://<a href="http://www.xyz.blue\/usr\/uploads\/2019\/08\/3488367350.png&quot;/]">www.xyz.blue\/usr\/uploads\/2019\/08\/3488367350.png&quot;/]</a></p><pre><code>table inet filter {    chain input {        type filter hook input priority 0; policy drop;        # established/related connections        ct state established,related accept        # invalid connections        ct state invalid drop        # loopback interface        iif lo accept        # ICMP &amp; IGMP        ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, mld-listener-query, mld-listener-report, mld-listener-reduction, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, ind-neighbor-solicit, ind-neighbor-advert, mld2-listener-report } accept        ip protocol icmp icmp type { destination-unreachable, router-solicitation, router-advertisement, time-exceeded, parameter-problem } accept        ip protocol igmp accept        # SSH (port 22)        tcp dport ssh accept        # HTTP (ports 80 &amp; 443)        tcp dport { http, https } accept    }    chain forward {        type filter hook forward priority 0; policy drop;    }    chain output {        type filter hook output priority 0; policy accept;    }}</code></pre><p>ssh限流</p><pre><code>table inet filter {    chain input {        type filter hook input priority 0; policy drop;        ct state invalid drop        iif lo accept        # no ping floods:        ip protocol icmp icmp type echo-request limit rate over 10/second burst 4 packets  drop        ip6 nexthdr icmpv6 icmpv6 type echo-request limit rate over 10/second burst 4 packets drop        ct state established,related accept        # ICMP &amp; IGMP        ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, mld-listener-query, mld-listener-report, mld-listener-reduction, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, ind-neighbor-solicit, ind-neighbor-advert, mld2-listener-report } accept        ip protocol icmp icmp type { destination-unreachable, router-solicitation, router-advertisement, time-exceeded, parameter-problem } accept        ip protocol igmp accept        # avoid brute force on ssh限流15次/分钟:        tcp dport ssh ct state new limit rate 15/minute accept    }    chain forward {        type filter hook forward priority 0; policy drop;    }    chain output {        type filter hook output priority 0; policy accept;    }}</code></pre><p>要分TCP、UDP的话使用tcp、udp参数即可<br>详情可见：<a href="https://wiki.debian.org/nftables" target="_blank" rel="noopener">https://wiki.debian.org/nftables</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何使用firewall、ufw、iptables的替代品nftables</title>
      <link href="/2019/08/18/how-to-use-nftables-as-an-alternative-to-firewall-ufw-and-iptables.html"/>
      <url>/2019/08/18/how-to-use-nftables-as-an-alternative-to-firewall-ufw-and-iptables.html</url>
      
        <content type="html"><![CDATA[<p>更改默认设置</p><pre><code># update-alternatives --set iptables /usr/sbin/iptables-nft# update-alternatives --set ip6tables /usr/sbin/ip6tables-nft# update-alternatives --set arptables /usr/sbin/arptables-nft# update-alternatives --set ebtables /usr/sbin/ebtables-nft</code></pre><p>清空当前规则集：</p><pre><code># nft flush ruleset</code></pre><p>添加一个表：</p><pre><code># nft add table inet filter</code></pre><p>添加input、forward和output三个基本链。input和forward的默认策略是drop。output的默认策略是accept。</p><pre><code># nft add chain inet filter input { type filter hook input priority 0 \; policy drop \; }# nft add chain inet filter forward { type filter hook forward priority 0 \; policy drop \; }# nft add chain inet filter output { type filter hook output priority 0 \; policy accept \; }</code></pre><p>添加两个与TCP和UDP关联的常规链：</p><pre><code># nft add chain inet filter TCP# nft add chain inet filter UDP</code></pre><p>related和established的流量会accept：</p><pre><code># nft add rule inet filter input ct state related,established accept</code></pre><p>loopback接口的流量会accept：</p><pre><code># nft add rule inet filter input iif lo accept</code></pre><p>无效的流量会drop：</p><pre><code># nft add rule inet filter input ct state invalid drop</code></pre><p>新的echo请求（ping）会accept：</p><pre><code># nft add rule inet filter input ip protocol icmp icmp type echo-request ct state new accept</code></pre><p>新的UDP流量跳转到UDP链：</p><pre><code># nft add rule inet filter input ip protocol udp ct state new jump UDP</code></pre><p>新的TCP流量跳转到TCP链：</p><pre><code># nft add rule inet filter input ip protocol tcp tcp flags \&amp; \(fin\|syn\|rst\|ack\) == syn ct state new jump TCP</code></pre><p>未由其他规则处理的所有通信会reject：</p><pre><code># nft add rule inet filter input ip protocol udp reject# nft add rule inet filter input ip protocol tcp reject with tcp reset# nft add rule inet filter input counter reject with icmp type prot-unreachable</code></pre><p>此时，应决定对传入连接打开哪些端口，这些由TCP和UDP链处理。例如，要打开web服务器的连接端口，添加：</p><pre><code># nft add rule inet filter TCP tcp dport 80 accept</code></pre><p>要打开web服务器HTTPS连接端口443：</p><pre><code># nft add rule inet filter TCP tcp dport 443 accept</code></pre><p>允许SSH连接端口22：</p><pre><code># nft add rule inet filter TCP tcp dport 22 accept</code></pre><p>允许传入DNS请求：</p><pre><code># nft add rule inet filter TCP tcp dport 53 accept# nft add rule inet filter UDP udp dport 53 accept</code></pre><p>确保更改是永久的（写入到文件）。</p><pre><code># nft list ruleset &gt; /etc/nftables.conf</code></pre><p>参考：<a href="https://wiki.archlinux.org/index.php/Nftables_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Nftables_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络重装Centos，Fedora</title>
      <link href="/2019/08/17/linux-network-reload-centos-fedora.html"/>
      <url>/2019/08/17/linux-network-reload-centos-fedora.html</url>
      
        <content type="html"><![CDATA[<pre><code>wget -O /boot/initrd.img http://mirror.centos.org/centos/7/os/x86_64/images/pxeboot/initrd.imgwget -O /boot/vmlinuz http://mirror.centos.org/centos/7/os/x86_64/images/pxeboot/vmlinuzcp /boot/initrd.img /cp /boot/vmlinuz /</code></pre><pre><code>nano /etc/grub.d/40_custom</code></pre><pre><code>menuentry &quot;InstallCentOS7&quot; {    set root=&apos;(hd0,msdos1)&apos;    linux /vmlinuz repo=http://mirror.centos.org/centos/7/os/x86_64/ ip=45.129.2.183 netmask=255.255.254.0 gateway=45.129.2.1 nameserver=1.1.1.1    initrd /initrd.img}</code></pre><p>ip可以直接写<code>ip=dhcp</code>也可以，如果是用dncp的话</p><pre><code>grub2-mkconfig --output=/boot/grub2/grub.cfggrub2-set-default InstallCentOS7</code></pre><p>或</p><pre><code>grub-mkconfig --output=/boot/grub/grub.cfggrub-set-default InstallCentOS7</code></pre><p><strong>Fedora同理</strong></p><pre><code>wget -O /boot/initrd.img https://dl.fedoraproject.org/pub/fedora/linux/development/rawhide/Everything/x86_64/os/images/pxeboot/initrd.imgwget -O /boot/vmlinuz https://dl.fedoraproject.org/pub/fedora/linux/development/rawhide/Everything/x86_64/os/images/pxeboot/vmlinuzcp /boot/initrd.img /cp /boot/vmlinuz /</code></pre><pre><code>nano /etc/grub.d/40_custom</code></pre><pre><code>menuentry &quot;InstallFedora30&quot; {    set root=&apos;(hd0,msdos1)&apos;    linux /vmlinuz repo=https://dl.fedoraproject.org/pub/fedora/linux/development/rawhide/Everything/x86_64/os/ ip=dhcp    initrd /initrd.img}</code></pre><p>注：这是rawhide版，也就相当于测试版，如需正式版，自己找</p><pre><code>grub2-mkconfig --output=/boot/grub2/grub.cfggrub2-set-default InstallFedora30</code></pre><p>如果系统是grub的话</p><pre><code>grub-mkconfig --output=/boot/grub/grub.cfggrub-set-default InstallCentOS7</code></pre><p>即可</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Fedora中设置开机脚本，并配置he-ipv6</title>
      <link href="/2019/08/13/set-up-boot-script-in-fedora-and-configure-heipv6.html"/>
      <url>/2019/08/13/set-up-boot-script-in-fedora-and-configure-heipv6.html</url>
      
        <content type="html"><![CDATA[<pre><code>sudo touch /etc/rc.d/rc.localsudo nano /etc/rc.d/rc.local</code></pre><pre><code>#!/bin/bashsh /mycmd/getipv6.sh</code></pre><pre><code>chmod +x /etc/rc.d/rc.localsudo nano /usr/lib/systemd/system/rc-local.service</code></pre><pre><code>[Install]WantedBy=multi-user.targetsudo systemctl enable rc-local.service</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在开启selinux的情况下更换ssh端口</title>
      <link href="/2019/08/13/replacement-of-ssh-port-with-selinux-enabled.html"/>
      <url>/2019/08/13/replacement-of-ssh-port-with-selinux-enabled.html</url>
      
        <content type="html"><![CDATA[<p>semanage port -a -t ssh_port_t -p tcp 22122</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用docker搭建邮件服务器</title>
      <link href="/2019/08/10/using-docker-to-build-mail-server.html"/>
      <url>/2019/08/10/using-docker-to-build-mail-server.html</url>
      
        <content type="html"><![CDATA[<p>使用<code>Poste.io</code>搭建<br><img src= "/img/loading.gif" data-src="/2019/08/10/using-docker-to-build-mail-server/poste.png" width="100%" alt="poste"></p><pre><code>docker run -d \    --net=host \    -v /etc/localtime:/etc/localtime:ro \    -v /poste/data:/data \    --name &quot;mailserver&quot; \    --privileged=true \    --restart=always \    -h &quot;mail.xyz.blue&quot; \    -t analogic/poste.io</code></pre><p>具体见官网：<a href="https://poste.io" target="_blank" rel="noopener">https://poste.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小内存服务器设置swap虚拟内存，及优化参数</title>
      <link href="/2019/08/08/setting-up-swap-virtual-memory-on-small-memory-server-and-optimizing-parameters.html"/>
      <url>/2019/08/08/setting-up-swap-virtual-memory-on-small-memory-server-and-optimizing-parameters.html</url>
      
        <content type="html"><![CDATA[<p>避免应用程序内存不足错误的最简单方法之一是为服务器添加一些Swap空间。Swap分区在系统的物理内存不够用的时候，把物理内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到Swap分区中，等到那些程序要运行时，再从Swap分区中恢复保存的数据到内存中。</p><p>注意：虽然我们建议对使用传统机械硬盘驱动器的系统进行交换，但对于SSD来说，使用Swap可能会导致硬件随着时间的推移而出现问题。出于这种考虑，我们不建议在任何其他使用SSD存储上启用Swap。这样做会影响底层硬件的可靠性。本教程更建议采用传统机械硬盘的用户使用。</p><p><strong>第一步、检查系统的交换信息</strong><br>我们可以先来检查一下系统是否已经有可用的Swap空间。我们可以有多个Swap文件或Swap分区，但通常来讲一个便足够了。</p><p>我们可以通过输入以下内容来查看系统是否已配置Swap：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo swapon --show</span><br></pre></td></tr></table></figure><p>如果您没有收到任何输出，这意味着您的系统当前没有可用的Swap空间。</p><p>您可以使用free命令证有没有活动的swap：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free -h</span><br><span class="line">              total        used        free      shared  buff&#x2F;cache   available</span><br><span class="line">Mem:           985M         84M        222M        680K        678M        721M</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure><p>正如您在输出的Swap行中所看到的，系统上没有正在活动的swap。</p><p><strong>第二步、检查硬盘驱动器分区上的可用空间</strong><br>在我们创建swap文件之前，我们将检查当前的磁盘使用情况，以确保我们有足够的空间。通过输入：<br><img src= "/img/loading.gif" data-src="/2019/08/08/setting-up-swap-virtual-memory-on-small-memory-server-and-optimizing-parameters/swap.png" width="100%" alt="Swap"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev            481M     0  481M   0% &#x2F;dev</span><br><span class="line">tmpfs            99M  656K   98M   1% &#x2F;run</span><br><span class="line">&#x2F;dev&#x2F;vda1        25G  1.4G   23G   6% &#x2F;</span><br><span class="line">tmpfs           493M     0  493M   0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs           5.0M     0  5.0M   0% &#x2F;run&#x2F;lock</span><br><span class="line">tmpfs           493M     0  493M   0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;vda15      105M  3.4M  102M   4% &#x2F;boot&#x2F;efi</span><br><span class="line">tmpfs            99M     0   99M   0% &#x2F;run&#x2F;user&#x2F;1000</span><br></pre></td></tr></table></figure><p>Mounted on列中的<code>/dev/vda1</code>是我们的磁盘。在这个例子中我们有足够的空间（仅有1.4G被使用）。</p><p>对swap空间的适当大小实际上取决于您的个人偏好和您的应用程序要求。通常，等于或双倍于系统内存的量是一个很好的选择。如果您只是将其用作RAM后备，那么你的swap分区尽可能不要超过4G。</p><p><strong>第三步、创建Swap分区文件</strong><br>我们可以在文件系统上创建一个swap分区。我们将在根/目录中分配我们想要调用的swap大小的文件swapfile。</p><p>创建交换文件的最佳方法是使用fallocate。此命令将创建指定大小的文件。</p><p>由于我们示例中的服务器具有1G的RAM，因此我们将在本教程中创建1G文件：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo fallocate -l 1G &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>我们可以通过输入以下内容来验证其是否保留了正确的空间量：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -lh &#x2F;swapfile</span><br><span class="line">-rw-r--r-- 1 root root 1.0G Apr 25 11:14 &#x2F;swapfile</span><br></pre></td></tr></table></figure><p><strong>第四步、启用Swap分区</strong><br>我们需要将swap文件转换为swap分区。首先，我们需要锁定文件的权限，以便只有具有root权限的用户才能读取内容。</p><p>通过输入以下内容使该文件只能由root访问：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chmod 600 &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>输入以下命令验证权限更改：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -lh &#x2F;swapfile</span><br><span class="line">-rw------- 1 root root 1.0G Apr 25 11:14 &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>如您所见，只有root用户启用了读写标志。</p><p>我们现在可以通过输入以下内容将文件标记为swap空间</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mkswap &#x2F;swapfile</span><br><span class="line">Setting up swapspace version 1, size &#x3D; 1024 MiB (1073737728 bytes)</span><br><span class="line">no label, UUID&#x3D;6e965805-2ab9-450f-aed6-577e74089dbf</span><br></pre></td></tr></table></figure><p>标记文件后，我们可以启用swap文件：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo swapon &#x2F;swapfile</span><br></pre></td></tr></table></figure><p>输入以下内容验证交换是否可用：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo swapon --show</span><br><span class="line">NAME      TYPE  SIZE USED PRIO</span><br><span class="line">&#x2F;swapfile file 1024M   0B   -2</span><br></pre></td></tr></table></figure><p>我们可以用free命令再次检查：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free -h</span><br><span class="line">              total        used        free      shared  buff&#x2F;cache   available</span><br><span class="line">Mem:           985M         84M        220M        680K        680M        722M</span><br><span class="line">Swap:          1.0G          0B        1.0G</span><br></pre></td></tr></table></figure><p>我们的swap已成功设置，我们的操作系统将在必要时使用它。</p><p><strong>第五步、永久化swap文件</strong><br>我们已启用当前会话中的swap文件。但是，如果我们重新启动的话，服务器将不会自动保留swap设置。我们可以通过将交换文件添加到我们的<code>/etc/fstab</code>来进行更改。</p><p>为了避免出现任何问题，先备份<code>/etc/fstab</code>文件：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp &#x2F;etc&#x2F;fstab &#x2F;etc&#x2F;fstab.bak</span><br></pre></td></tr></table></figure><p>输入以下内容，将swap文件信息添加到<code>/etc/fstab</code>文件末尾：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;&#x2F;swapfile none swap sw 0 0&#39; | sudo tee -a &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure><p>接下来，我们将调整我们的swap空间。</p><p><strong>第六步、调整您的Swap设置</strong><br>您可以配置一些选项，这些选项会在处理swap时对系统的性能产生影响。</p><p>调整Swappiness参数<br>该swappiness参数主要配置系统将数据从RAM交换到交换空间的频率。该参数的值是介于0和100之间的百分比。</p><p>当值接近于零时，除非绝对必要，否则内核不会将数据交换到磁盘。请记住，与swap文件的交互是“费时的”，因为它们比与RAM的交互花费更长的时间，并且它们可能导致性能的显着降低。</p><p>当该值接近100时，其将尝试将更多数据放入交换中以努力保留更多的RAM空间。我们可以通过输入以下内容来查看当前的swappiness值：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness</span><br><span class="line">60</span><br></pre></td></tr></table></figure><p>对于服务器本身来说，您可能希望这个数值更接近于0。我们可以使用<code>sysctl</code>命令将swappiness设置为不同的值。</p><p>例如，要将swappiness设置为10，我们可以输入：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo sysctl vm.swappiness&#x3D;10</span><br><span class="line">vm.swappiness &#x3D; 10</span><br></pre></td></tr></table></figure><p>我们可以通过在<code>/etc/sysctl.conf</code>文件中添加以下行来自动设置此值：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;sysctl.conf</span><br></pre></td></tr></table></figure><p>在底部，您可以添加：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vm.swappiness&#x3D;10</span><br></pre></td></tr></table></figure><p>完成后保存并关闭文件。</p><p>调整缓存压力设置<br>您可能想要修改的另一个相关值是<code>vfs_cache_pressure</code>。这将关系到系统选择多少缓存inode和dentry信息。</p><p>您可以通过proc命令来查看当前值：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;vfs_cache_pressure</span><br><span class="line">100</span><br></pre></td></tr></table></figure><p>我的设置系统会很快地从缓存中删除inode信息。我们可以通过输入以下内容将其设置为更保守的值（如50）更快就200：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo sysctl vm.vfs_cache_pressure&#x3D;50</span><br><span class="line">vm.vfs_cache_pressure &#x3D; 50</span><br></pre></td></tr></table></figure><p>同样，这仅适用于我们当前的会话。我们可以通过将其添加到配置文件来改变它，就像我们使用swappiness设置一样：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;sysctl.conf</span><br></pre></td></tr></table></figure><p>在底部，添加指定新值的行：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vm.vfs_cache_pressure&#x3D;50</span><br></pre></td></tr></table></figure><p>完成后保存并关闭文件。</p><p>结论<br>本教程将为您提供一些额外的空间来避免内存不足的异常。swap空间可以避免一些常见问题。如果遇到内存不足错误，或者发现系统无法使用所需的应用程序，您的最佳解决方案是优化应用程序配置或升级服务器。</p><p>转自：<a href="https://cloud.tencent.com/developer/article/1165387修改了部分" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1165387修改了部分</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小内存 </tag>
            
            <tag> Swap </tag>
            
            <tag> 虚拟内存 </tag>
            
            <tag> 优化参数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转义字符含义，方便记忆</title>
      <link href="/2019/08/08/conversion-character-meaning-convenient-memory.html"/>
      <url>/2019/08/08/conversion-character-meaning-convenient-memory.html</url>
      
        <content type="html"><![CDATA[<p>\n是newline<br>\t是tabulator（也就是键盘上的tab）<br>\v是vertical tab<br>\b是backspace（也就是键盘上的退格键）<br>\r是return （也就是键盘上的回车，只不过键盘上写的是enter，意为进入）<br>\f是form feed（或feed）<br>\a是alarm</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转义字符 </tag>
            
            <tag> 转义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在CloudFlare中使用非80、443端口通信</title>
      <link href="/2019/08/05/how-to-use-non80-and-443-ports-to-communicate-in-cloudflare.html"/>
      <url>/2019/08/05/how-to-use-non80-and-443-ports-to-communicate-in-cloudflare.html</url>
      
        <content type="html"><![CDATA[<p>网页使用80，443端口<br>Cloudflare几乎可以代理所有TCP端口。支持两种代理：<br>应用程序级别（第7层）HTTP代理，频谱，传输级别（第4层）TCP代理<br>HTTP代理<br>Cloudflare可以代理通过下面列出的HTTP / HTTPS端口的流量。</p><p>如果您的流量位于不同的端口，则可以将其作为我们不代理的内容添加为Cloudflare DNS区域文件中的记录（灰色云=没有Cloudflare代理或记录缓存）。</p><p>Cloudflare支持的HTTP端口是：<br>80<br>8080<br>8880<br>2052<br>2082<br>2086<br>2095</p><p>Cloudflare支持的HTTPs端口是：<br>443<br>2053<br>2083<br>2087<br>2096<br>8443</p><p>对于Pro计划及更高版本，您可以使用WAF规则ID 100015阻止80和443以外的端口上的流量：“阻止对除80和443之外的所有端口的请求”。</p><p>端口80和443是唯一的端口：</p><p>对于启用了中国网络的区域内的中国境内的HTTP / HTTPS流量<br>对于Cloudflare应用程序能够代理<br>当CloudFlare的缓存可用</p><p>当然如果你有钱，可以自定义端口，基本所有TCP端口都可以<br><img src= "/img/loading.gif" data-src="/2019/08/05/how-to-use-non80-and-443-ports-to-communicate-in-cloudflare/port.png" width="100%" alt="端口"></p><p>官网说明：<a href="https://support.cloudflare.com/hc/en-us/articles/200169156-Which-ports-will-Cloudflare-work-with-" target="_blank" rel="noopener">https://support.cloudflare.com/hc/en-us/articles/200169156-Which-ports-will-Cloudflare-work-with-</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
            <tag> 通信 </tag>
            
            <tag> 80 </tag>
            
            <tag> 443 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部分电信光猫查看超级管理员密码</title>
      <link href="/2019/08/03/some-telecom-optical-cats-view-super-administrator-password.html"/>
      <url>/2019/08/03/some-telecom-optical-cats-view-super-administrator-password.html</url>
      
        <content type="html"><![CDATA[<p>打开<a href="http://192.168.1.1/cgi-bin/baseinfoSet.cgi" target="_blank" rel="noopener">http://192.168.1.1/cgi-bin/baseinfoSet.cgi</a><br>部分可以，其实还是通过某个”网页”来查看用户信息<br>如图<br><img src= "/img/loading.gif" data-src="/2019/08/03/some-telecom-optical-cats-view-super-administrator-password/telecom.png" width="100%" alt="网页界面"><br>使用下面python脚本进行解密：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">list&#x3D;[120,105,112,105,103,115,113,101,104,113,109,114,53,48,54,55,54,51,51,57]</span><br><span class="line">result&#x3D;[]</span><br><span class="line">for i in list:</span><br><span class="line">if i &gt; 57:</span><br><span class="line">i-&#x3D;4</span><br><span class="line">result.append(chr(i))</span><br><span class="line">print &#39;&#39;.join(result)</span><br></pre></td></tr></table></figure><p>如果没有python环境<br>可以在线运行<br><a href="http://www.pythontip.com/coding/run" target="_blank" rel="noopener">http://www.pythontip.com/coding/run</a><br>list=替换成自己设备的加密密码即可。<br><img src= "/img/loading.gif" data-src="/2019/08/03/some-telecom-optical-cats-view-super-administrator-password/telecom-python.png" width="100%" alt="Python编译器"></p><p>部分来自：<a href="https://blog.51cto.com/jzking121/1750713" target="_blank" rel="noopener">https://blog.51cto.com/jzking121/1750713</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码 </tag>
            
            <tag> 电信 </tag>
            
            <tag> 超级管理员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu17.04+中使用netplan配置ipv6隧道</title>
      <link href="/2019/08/01/using-netplan-to-configure-ipv6-tunnel-in-ubuntu-1704.html"/>
      <url>/2019/08/01/using-netplan-to-configure-ipv6-tunnel-in-ubuntu-1704.html</url>
      
        <content type="html"><![CDATA[<p>我们知道在Ubuntu17.04+中使用了<code>netplan</code>来代替<code>/etc/network/interfaces</code><br>那么有两种方法<br>一：<br>卸载netplan重新使用interfaces</p><figure class="highlight plain"><figcaption><span>remove netplan```</span></figcaption><table><tr><td class="code"><pre><span class="line">然后参照&#x2F;etc&#x2F;network&#x2F;interfaces中注释的部分的来做，由于没有Ubuntu的机器，等有了再加</span><br><span class="line"></span><br><span class="line">二：</span><br><span class="line">以较出名的he-ipv6为例</span><br><span class="line">1.创建 &#96;&#96;&#96;&#x2F;etc&#x2F;systemd&#x2F;network&#x2F;he-ipv6.network</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Match]</span><br><span class="line"></span><br><span class="line">[Network]</span><br><span class="line">Tunnel&#x3D;he-ipv6</span><br></pre></td></tr></table></figure><p>2.创建 <code>/etc/systemd/network/he-ipv6-tunnel.netdev</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Match]                                                                                                                                                                                                            </span><br><span class="line"></span><br><span class="line">[NetDev]                                                                                                                                                                                                           </span><br><span class="line">Name&#x3D;he-ipv6                                        </span><br><span class="line">Kind&#x3D;sit                                            </span><br><span class="line"></span><br><span class="line">[Tunnel]</span><br><span class="line">Independent&#x3D;true                                            </span><br><span class="line">Local&#x3D;192.168.0.x #Private IP if behind NAT or Public IP without NAT                                   </span><br><span class="line">Remote&#x3D;184.105.250.46 #Tunnel broker&#39;s IPv4 address                         </span><br><span class="line">TTL&#x3D;255</span><br></pre></td></tr></table></figure><p>3.配置 <code>/etc/netplan/01-netcfg.yaml</code></p><figure class="highlight plain"><figcaption><span>/etc/netplan/01-netcfg.yaml```</span></figcaption><table><tr><td class="code"><pre><span class="line">使用自己喜欢的编辑器，这里使用nano</span><br><span class="line">&lt;img src&#x3D;&quot;he-ipv6.png&quot; width&#x3D;&quot;100%&quot; alt&#x3D;&quot;he-ipv6&quot;&gt;</span><br></pre></td></tr></table></figure><h1 id="This-file-describes-the-network-interfaces-available-on-your-system"><a href="#This-file-describes-the-network-interfaces-available-on-your-system" class="headerlink" title="This file describes the network interfaces available on your system"></a>This file describes the network interfaces available on your system</h1><h1 id="For-more-information-see-netplan-5"><a href="#For-more-information-see-netplan-5" class="headerlink" title="For more information, see netplan(5)."></a>For more information, see netplan(5).</h1><p>network:<br>  version: 2<br>  renderer: networkd<br>  ethernets:<br>      he-ipv6:<br>          dhcp4: no<br>          dhcp6: no<br>          addresses: [‘2001:470:xxx:xxx::2/64’]<br>          gateway6: 2001:470:xxx:xxx::1<br>      enp0s3:<br>      …</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">顺序会有所差别，不过一定要注意格式！</span><br><span class="line">那个dhcp的可要可不要</span><br><span class="line">4.重启网络</span><br><span class="line">&#96;&#96;&#96;systemctl restart systemd-networkd &amp;&amp; netplan apply</span><br></pre></td></tr></table></figure><p>部分来自：<a href="https://askubuntu.com/questions/990195/ipv6-tunnel-in-ubuntu-17-10" target="_blank" rel="noopener">https://askubuntu.com/questions/990195/ipv6-tunnel-in-ubuntu-17-10</a></p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 常用配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Netplan </tag>
            
            <tag> Ipv6 </tag>
            
            <tag> 隧道 </tag>
            
            <tag> Ipv6隧道 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typecho中如何使用emoji</title>
      <link href="/2019/08/01/how-to-use-emoji-in-typecho.html"/>
      <url>/2019/08/01/how-to-use-emoji-in-typecho.html</url>
      
        <content type="html"><![CDATA[<p>Mysql数据库使用utf8mb4格式或者使用sqlite数据库即可。<br>效果：😘😁😍🤣😂😊😉😎😜</p><p>博客换了，效果你也看不到😜</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Emoji </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何查看typecho中页面的cid？</title>
      <link href="/2019/08/01/how-to-view-cid-of-the-page-in-typecho.html"/>
      <url>/2019/08/01/how-to-view-cid-of-the-page-in-typecho.html</url>
      
        <content type="html"><![CDATA[<p>如何查看typecho中页面的cid？<br>如果当你把页面的链接自定义了的话，那么打开页面，如图所示就是页面的cid了，文章也一样。</p><img src= "/img/loading.gif" data-src="/2019/08/01/how-to-view-cid-of-the-page-in-typecho/cid.png" width="100%" alt="查看cid">]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用配置 </tag>
            
            <tag> Typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，世界！</title>
      <link href="/2019/08/01/start.html"/>
      <url>/2019/08/01/start.html</url>
      
        <content type="html"><![CDATA[<img src= "/img/loading.gif" data-src="/2019/08/01/start/hello-world.jpg" width="100%" alt="你好，世界！">你好，世界！]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
